digraph "CFG for 'register_types' function" {
	label="CFG for 'register_types' function";

	Node0x55ee228f7db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.TypeInfo*\l... @register_types.interface_info, metadata !343, metadata !DIExpression()) #9,\l... !dbg !351\l  %call.i = tail call fastcc %struct.TypeImpl* @type_new(%struct.TypeInfo*\l... nonnull @register_types.interface_info) #9, !dbg !353\l  call void @llvm.dbg.value(metadata %struct.TypeImpl* %call.i, metadata !350,\l... metadata !DIExpression()) #9, !dbg !351\l  call void @llvm.dbg.value(metadata %struct.TypeImpl* %call.i, metadata !354,\l... metadata !DIExpression()) #9, !dbg !359\l  %.b3.i.i = load i1, i1* @enumerating_types, align 1, !dbg !361\l  br i1 %.b3.i.i, label %if.else.i.i, label %if.end.i.i, !dbg !364, !prof !365\l|{<s0>T|<s1>F}}"];
	Node0x55ee228f7db0:s0 -> Node0x55ee22a7afa0;
	Node0x55ee228f7db0:s1 -> Node0x55ee22700ba0;
	Node0x55ee22a7afa0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else.i.i:                                      \l  tail call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x\l... i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x\l... i8]* @.str.1, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.type_table_add, i64 0, i64 0)) #24, !dbg !361\l  unreachable, !dbg !361\l}"];
	Node0x55ee22700ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end.i.i:                                       \l  %0 = load %struct._GHashTable*, %struct._GHashTable**\l... @type_table_get.type_table, align 8, !dbg !366\l  %cmp.i.i.i = icmp eq %struct._GHashTable* %0, null, !dbg !369\l  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %type_register_internal.exit,\l... !dbg !370, !prof !365\l|{<s0>T|<s1>F}}"];
	Node0x55ee22700ba0:s0 -> Node0x55ee22a7adc0;
	Node0x55ee22700ba0:s1 -> Node0x55ee226e8ce0;
	Node0x55ee22a7adc0 [shape=record,penwidth=3.0, color="red",label="{if.then.i.i.i:                                    \l  %call.i.i.i = tail call %struct._GHashTable* @g_hash_table_new(i32 (i8*)*\l... nonnull @g_str_hash, i32 (i8*, i8*)* nonnull @g_str_equal) #9, !dbg !371\l  store %struct._GHashTable* %call.i.i.i, %struct._GHashTable**\l... @type_table_get.type_table, align 8, !dbg !373\l  br label %type_register_internal.exit, !dbg !374\l}"];
	Node0x55ee22a7adc0 -> Node0x55ee226e8ce0;
	Node0x55ee226e8ce0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{type_register_internal.exit:                      \l  %1 = phi %struct._GHashTable* [ %0, %if.end.i.i ], [ %call.i.i.i,\l... %if.then.i.i.i ], !dbg !375\l  %name.i.i = getelementptr inbounds %struct.TypeImpl, %struct.TypeImpl*\l... %call.i, i64 0, i32 0, !dbg !376\l  %2 = load i8*, i8** %name.i.i, align 8, !dbg !376\l  %3 = bitcast %struct.TypeImpl* %call.i to i8*, !dbg !377\l  %call1.i.i = tail call i32 @g_hash_table_insert(%struct._GHashTable* %1, i8*\l... %2, i8* %3) #9, !dbg !378\l  store %struct.TypeImpl* %call.i, %struct.TypeImpl** @type_interface, align\l... 8, !dbg !379\l  call void @llvm.dbg.value(metadata %struct.TypeInfo*\l... @register_types.object_info, metadata !343, metadata !DIExpression()) #9,\l... !dbg !380\l  %call.i2 = tail call fastcc %struct.TypeImpl* @type_new(%struct.TypeInfo*\l... nonnull @register_types.object_info) #9, !dbg !382\l  call void @llvm.dbg.value(metadata %struct.TypeImpl* %call.i2, metadata\l... !350, metadata !DIExpression()) #9, !dbg !380\l  call void @llvm.dbg.value(metadata %struct.TypeImpl* %call.i2, metadata\l... !354, metadata !DIExpression()) #9, !dbg !383\l  %.b3.i.i3 = load i1, i1* @enumerating_types, align 1, !dbg !385\l  br i1 %.b3.i.i3, label %if.else.i.i4, label %if.end.i.i6, !dbg !386, !prof\l... !365\l|{<s0>T|<s1>F}}"];
	Node0x55ee226e8ce0:s0 -> Node0x55ee22a66da0;
	Node0x55ee226e8ce0:s1 -> Node0x55ee22a7c370;
	Node0x55ee22a66da0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else.i.i4:                                     \l  tail call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x\l... i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x\l... i8]* @.str.1, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.type_table_add, i64 0, i64 0)) #24, !dbg !385\l  unreachable, !dbg !385\l}"];
	Node0x55ee22a7c370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end.i.i6:                                      \l  %4 = load %struct._GHashTable*, %struct._GHashTable**\l... @type_table_get.type_table, align 8, !dbg !387\l  %cmp.i.i.i5 = icmp eq %struct._GHashTable* %4, null, !dbg !389\l  br i1 %cmp.i.i.i5, label %if.then.i.i.i8, label\l... %type_register_internal.exit11, !dbg !390, !prof !365\l|{<s0>T|<s1>F}}"];
	Node0x55ee22a7c370:s0 -> Node0x55ee22a7bb80;
	Node0x55ee22a7c370:s1 -> Node0x55ee226a2290;
	Node0x55ee22a7bb80 [shape=record,penwidth=3.0, color="red",label="{if.then.i.i.i8:                                   \l  %call.i.i.i7 = tail call %struct._GHashTable* @g_hash_table_new(i32 (i8*)*\l... nonnull @g_str_hash, i32 (i8*, i8*)* nonnull @g_str_equal) #9, !dbg !391\l  store %struct._GHashTable* %call.i.i.i7, %struct._GHashTable**\l... @type_table_get.type_table, align 8, !dbg !392\l  br label %type_register_internal.exit11, !dbg !393\l}"];
	Node0x55ee22a7bb80 -> Node0x55ee226a2290;
	Node0x55ee226a2290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{type_register_internal.exit11:                    \l  %5 = phi %struct._GHashTable* [ %4, %if.end.i.i6 ], [ %call.i.i.i7,\l... %if.then.i.i.i8 ], !dbg !394\l  %name.i.i9 = getelementptr inbounds %struct.TypeImpl, %struct.TypeImpl*\l... %call.i2, i64 0, i32 0, !dbg !395\l  %6 = load i8*, i8** %name.i.i9, align 8, !dbg !395\l  %7 = bitcast %struct.TypeImpl* %call.i2 to i8*, !dbg !396\l  %call1.i.i10 = tail call i32 @g_hash_table_insert(%struct._GHashTable* %5,\l... i8* %6, i8* %7) #9, !dbg !397\l  ret void, !dbg !398\l}"];
}
