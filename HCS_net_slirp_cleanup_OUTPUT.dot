digraph "CFG for 'net_slirp_cleanup' function" {
	label="CFG for 'net_slirp_cleanup' function";

	Node0x564e25c8c600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.NetClientState* %nc, metadata\l... !672, metadata !DIExpression()), !dbg !685\l  call void @llvm.dbg.declare(metadata [0 x i8]* undef, metadata !674,\l... metadata !DIExpression()), !dbg !686\l  call void @llvm.dbg.value(metadata %struct.NetClientState* %nc, metadata\l... !679, metadata !DIExpression()), !dbg !687\l  %0 = bitcast %struct.NetClientState* %nc to %struct.SlirpState*, !dbg !688\l  call void @llvm.dbg.value(metadata %struct.SlirpState* %0, metadata !673,\l... metadata !DIExpression()), !dbg !685\l  %fwd = getelementptr inbounds %struct.NetClientState,\l... %struct.NetClientState* %nc, i64 1, i32 7, i64 16, !dbg !689\l  %1 = bitcast i8* %fwd to %struct._GSList**, !dbg !689\l  %2 = load %struct._GSList*, %struct._GSList** %1, align 8, !dbg !689\l  tail call void @g_slist_free_full(%struct._GSList* %2, void (i8*)* nonnull\l... @slirp_free_fwd) #22, !dbg !690\l  %poll_notifier = getelementptr inbounds %struct.NetClientState,\l... %struct.NetClientState* %nc, i64 1, i32 2, i32 0, i32 1, !dbg !691\l  %3 = bitcast %struct.QTailQLink** %poll_notifier to %struct.Notifier*, !dbg\l... !691\l  tail call void @main_loop_poll_remove_notifier(%struct.Notifier* nonnull %3)\l... #22, !dbg !692\l  %slirp = getelementptr inbounds %struct.NetClientState,\l... %struct.NetClientState* %nc, i64 1, i32 2, !dbg !693\l  %4 = bitcast %union.anon* %slirp to %struct.Slirp**, !dbg !693\l  %5 = getelementptr %union.anon, %union.anon* %slirp, i64 0, i32 0, i32 0,\l... !dbg !693\l  %6 = load i8*, i8** %5, align 8, !dbg !693\l  tail call void @unregister_savevm(%struct.VMStateIf* null, i8* getelementptr\l... inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i8* %6) #22, !dbg !694\l  %7 = load %struct.Slirp*, %struct.Slirp** %4, align 8, !dbg !695\l  tail call void @slirp_cleanup(%struct.Slirp* %7) #22, !dbg !696\l  %exit_notifier = getelementptr inbounds %struct.NetClientState,\l... %struct.NetClientState* %nc, i64 1, i32 5, !dbg !697\l  %notify = bitcast i8** %exit_notifier to void (%struct.Notifier*, i8*)**,\l... !dbg !699\l  %8 = load void (%struct.Notifier*, i8*)*, void (%struct.Notifier*, i8*)**\l... %notify, align 8, !dbg !699\l  %tobool = icmp eq void (%struct.Notifier*, i8*)* %8, null, !dbg !700\l  br i1 %tobool, label %if.end, label %if.then, !dbg !701, !prof !702\l|{<s0>T|<s1>F}}"];
	Node0x564e25c8c600:s0 -> Node0x564e25caf010;
	Node0x564e25c8c600:s1 -> Node0x564e25b28c40;
	Node0x564e25b28c40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then:                                          \l  %9 = bitcast i8** %exit_notifier to %struct.Notifier*, !dbg !697\l  tail call void @qemu_remove_exit_notifier(%struct.Notifier* nonnull %9) #22,\l... !dbg !703\l  br label %if.end, !dbg !705\l}"];
	Node0x564e25b28c40 -> Node0x564e25caf010;
	Node0x564e25caf010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  tail call fastcc void @slirp_smb_cleanup(%struct.SlirpState* %0), !dbg !706\l  %entry4 = getelementptr inbounds %struct.NetClientState,\l... %struct.NetClientState* %nc, i64 1, !dbg !707\l  %tqe_next = bitcast %struct.NetClientState* %entry4 to %struct.SlirpState**,\l... !dbg !707\l  %10 = load %struct.SlirpState*, %struct.SlirpState** %tqe_next, align 8,\l... !dbg !707\l  %cmp = icmp eq %struct.SlirpState* %10, null, !dbg !707\l  %tql_prev = getelementptr inbounds %struct.NetClientState,\l... %struct.NetClientState* %nc, i64 1, i32 1, !dbg !707\l  %11 = bitcast i32* %tql_prev to i64*, !dbg !707\l  %12 = load i64, i64* %11, align 8, !dbg !707\l  br i1 %cmp, label %if.else, label %if.then5, !dbg !710, !prof !711\l|{<s0>T|<s1>F}}"];
	Node0x564e25caf010:s0 -> Node0x564e25cb00a0;
	Node0x564e25caf010:s1 -> Node0x564e25cb0000;
	Node0x564e25cb0000 [shape=record,penwidth=3.0, color="red",label="{if.then5:                                         \l  %tql_prev11 = getelementptr inbounds %struct.SlirpState, %struct.SlirpState*\l... %10, i64 0, i32 1, i32 0, i32 1, !dbg !707\l  %13 = bitcast %struct.QTailQLink** %tql_prev11 to i64*, !dbg !707\l  store i64 %12, i64* %13, align 8, !dbg !707\l  %.phi.trans.insert = bitcast %struct.NetClientState* %entry4 to i64*, !dbg\l... !712\l  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !710\l  %.phi.trans.insert45 = bitcast i32* %tql_prev to i64**, !dbg !712\l  %.pre46 = load i64*, i64** %.phi.trans.insert45, align 8, !dbg !710\l  br label %if.end15, !dbg !707\l}"];
	Node0x564e25cb0000 -> Node0x564e25cb0050;
	Node0x564e25cb00a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else:                                          \l  %14 = inttoptr i64 %12 to i64*, !dbg !710\l  %15 = ptrtoint %struct.SlirpState* %10 to i64, !dbg !710\l  store i64 %12, i64* bitcast (%struct.QTailQLink** getelementptr inbounds\l... (%union.anon.4, %union.anon.4* @slirp_stacks, i64 0, i32 0, i32 1) to i64*),\l... align 8, !dbg !707\l  br label %if.end15\l}"];
	Node0x564e25cb00a0 -> Node0x564e25cb0050;
	Node0x564e25cb0050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end15:                                         \l  %16 = phi i64* [ %14, %if.else ], [ %.pre46, %if.then5 ], !dbg !710\l  %17 = phi i64 [ %15, %if.else ], [ %.pre, %if.then5 ], !dbg !710\l  store i64 %17, i64* %16, align 8, !dbg !710\l  %18 = bitcast %struct.NetClientState* %entry4 to i8*, !dbg !713\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %18,\l... i8 0, i64 16, i1 false), !dbg !710\l  ret void, !dbg !713\l}"];
}
