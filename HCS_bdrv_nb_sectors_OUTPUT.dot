digraph "CFG for 'bdrv_nb_sectors' function" {
	label="CFG for 'bdrv_nb_sectors' function";

	Node0x55906e54f7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2832, metadata !DIExpression()), !dbg !2838\l  %drv1 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 7, !dbg !2839\l  %0 = load %struct.BlockDriver*, %struct.BlockDriver** %drv1, align 8, !dbg\l... !2839\l  call void @llvm.dbg.value(metadata %struct.BlockDriver* %0, metadata !2833,\l... metadata !DIExpression()), !dbg !2838\l  %tobool = icmp eq %struct.BlockDriver* %0, null, !dbg !2840\l  br i1 %tobool, label %cleanup8, label %if.end, !dbg !2842, !prof !2843\l|{<s0>T|<s1>F}}"];
	Node0x55906e54f7c0:s0 -> Node0x55906e5516b0;
	Node0x55906e54f7c0:s1 -> Node0x55906e551180;
	Node0x55906e551180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %has_variable_length = getelementptr inbounds %struct.BlockDriver,\l... %struct.BlockDriver* %0, i64 0, i32 48, !dbg !2844\l  %1 = load i8, i8* %has_variable_length, align 8, !dbg !2844, !range !2845\l  %tobool2 = icmp eq i8 %1, 0, !dbg !2844\l  br i1 %tobool2, label %if.end6, label %if.then3, !dbg !2846, !prof !2847\l|{<s0>T|<s1>F}}"];
	Node0x55906e551180:s0 -> Node0x55906e551900;
	Node0x55906e551180:s1 -> Node0x55906e551890;
	Node0x55906e551890 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then3:                                         \l  %total_sectors = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 37, !dbg !2848\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2849, metadata !DIExpression()) #30, !dbg !2859\l  call void @llvm.dbg.value(metadata i64 undef, metadata !2854, metadata\l... !DIExpression()) #30, !dbg !2859\l  call void @llvm.dbg.value(metadata %struct.BlockDriver* %0, metadata !2855,\l... metadata !DIExpression()) #30, !dbg !2859\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2861, metadata !DIExpression()) #30, !dbg !2864\l  %sg.i.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 3, !dbg !2867\l  %2 = load i8, i8* %sg.i.i, align 2, !dbg !2867, !range !2845\l  %tobool.i.i = icmp eq i8 %2, 0, !dbg !2867\l  br i1 %tobool.i.i, label %if.end3.i, label %if.end6, !dbg !2868\l|{<s0>T|<s1>F}}"];
	Node0x55906e551890:s0 -> Node0x55906dc0eca0;
	Node0x55906e551890:s1 -> Node0x55906e551900;
	Node0x55906dc0eca0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end3.i:                                        \l  %3 = load i64, i64* %total_sectors, align 8, !dbg !2848\l  call void @llvm.dbg.value(metadata i64 %3, metadata !2854, metadata\l... !DIExpression()) #30, !dbg !2859\l  %bdrv_getlength.i = getelementptr inbounds %struct.BlockDriver,\l... %struct.BlockDriver* %0, i64 0, i32 47, !dbg !2869\l  %4 = load i64 (%struct.BlockDriverState*)*, i64\l... (%struct.BlockDriverState*)** %bdrv_getlength.i, align 8, !dbg !2869\l  %tobool4.i = icmp eq i64 (%struct.BlockDriverState*)* %4, null, !dbg !2870\l  br i1 %tobool4.i, label %if.end10.i, label %if.then5.i, !dbg !2871\l|{<s0>T|<s1>F}}"];
	Node0x55906dc0eca0:s0 -> Node0x55906e8c9870;
	Node0x55906dc0eca0:s1 -> Node0x55906e8ab750;
	Node0x55906e8ab750 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then5.i:                                       \l  %call7.i = tail call i64 %4(%struct.BlockDriverState* nonnull %bs) #30, !dbg\l... !2872\l  call void @llvm.dbg.value(metadata i64 %call7.i, metadata !2856, metadata\l... !DIExpression()) #30, !dbg !2873\l  %cmp.i = icmp slt i64 %call7.i, 0, !dbg !2874\l  %sub.i = add i64 %call7.i, 511, !dbg !2876\l  %div.i = lshr i64 %sub.i, 9, !dbg !2876\l  call void @llvm.dbg.value(metadata i64 undef, metadata !2854, metadata\l... !DIExpression()) #30, !dbg !2859\l  br i1 %cmp.i, label %refresh_total_sectors.exit, label %if.end10.i\l|{<s0>T|<s1>F}}"];
	Node0x55906e8ab750:s0 -> Node0x55906e4c3110;
	Node0x55906e8ab750:s1 -> Node0x55906e8c9870;
	Node0x55906e8c9870 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end10.i:                                       \l  %hint.addr.1.i = phi i64 [ %div.i, %if.then5.i ], [ %3, %if.end3.i ]\l  call void @llvm.dbg.value(metadata i64 %hint.addr.1.i, metadata !2854,\l... metadata !DIExpression()) #30, !dbg !2859\l  store i64 %hint.addr.1.i, i64* %total_sectors, align 8, !dbg !2877\l  br label %if.end6, !dbg !2878\l}"];
	Node0x55906e8c9870 -> Node0x55906e551900;
	Node0x55906e4c3110 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{refresh_total_sectors.exit:                       \l  %conv.i = trunc i64 %call7.i to i32, !dbg !2876\l  call void @llvm.dbg.value(metadata i32 %conv.i, metadata !2834, metadata\l... !DIExpression()), !dbg !2879\l  %cmp = icmp sgt i32 %conv.i, -1, !dbg !2880\l  %sext = shl i64 %call7.i, 32, !dbg !2882\l  %conv = ashr exact i64 %sext, 32, !dbg !2882\l  br i1 %cmp, label %if.end6, label %cleanup8\l|{<s0>T|<s1>F}}"];
	Node0x55906e4c3110:s0 -> Node0x55906e551900;
	Node0x55906e4c3110:s1 -> Node0x55906e5516b0;
	Node0x55906e551900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end6:                                          \l  %total_sectors7 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 37, !dbg !2883\l  %5 = load i64, i64* %total_sectors7, align 8, !dbg !2883\l  br label %cleanup8, !dbg !2884\l}"];
	Node0x55906e551900 -> Node0x55906e5516b0;
	Node0x55906e5516b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup8:                                         \l  %retval.1 = phi i64 [ %5, %if.end6 ], [ %conv, %refresh_total_sectors.exit\l... ], [ -123, %entry ], !dbg !2838\l  ret i64 %retval.1, !dbg !2885\l}"];
}
