digraph "CFG for 'pick_geometry' function" {
	label="CFG for 'pick_geometry' function";

	Node0x55f1411e5fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %nb_sectors = alloca i64, align 8\l  call void @llvm.dbg.value(metadata %struct.FDrive* %drv, metadata !1529,\l... metadata !DIExpression()), !dbg !1543\l  %blk1 = getelementptr inbounds %struct.FDrive, %struct.FDrive* %drv, i64 0,\l... i32 1, !dbg !1544\l  %0 = load %struct.BlockBackend*, %struct.BlockBackend** %blk1, align 8, !dbg\l... !1544\l  call void @llvm.dbg.value(metadata %struct.BlockBackend* %0, metadata !1530,\l... metadata !DIExpression()), !dbg !1543\l  %1 = bitcast i64* %nb_sectors to i8*, !dbg !1545\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #19, !dbg !1545\l  %drive = getelementptr inbounds %struct.FDrive, %struct.FDrive* %drv, i64 0,\l... i32 3, !dbg !1546\l  %2 = load i32, i32* %drive, align 8, !dbg !1546\l  %cmp = icmp eq i32 %2, 4, !dbg !1547\l  call void @llvm.dbg.value(metadata i1 %cmp, metadata !1539, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1543\l  %tobool = icmp eq %struct.BlockBackend* %0, null, !dbg !1548\l  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !1550, !prof !1551\l|{<s0>T|<s1>F}}"];
	Node0x55f1411e5fd0:s0 -> Node0x55f1411eb1d0;
	Node0x55f1411e5fd0:s1 -> Node0x55f1411ea130;
	Node0x55f1411ea130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{lor.lhs.false:                                    \l  %call = tail call zeroext i1 @blk_is_inserted(%struct.BlockBackend* nonnull\l... %0) #19, !dbg !1552\l  br i1 %call, label %lor.lhs.false4, label %cleanup, !dbg !1553, !prof !1551\l|{<s0>T|<s1>F}}"];
	Node0x55f1411ea130:s0 -> Node0x55f1411ea080;
	Node0x55f1411ea130:s1 -> Node0x55f1411eb1d0;
	Node0x55f1411ea080 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false4:                                   \l  %3 = load i32, i32* %drive, align 8, !dbg !1554\l  %cmp6 = icmp eq i32 %3, 3, !dbg !1555\l  br i1 %cmp6, label %cleanup, label %if.end, !dbg !1556\l|{<s0>T|<s1>F}}"];
	Node0x55f1411ea080:s0 -> Node0x55f1411eb1d0;
	Node0x55f1411ea080:s1 -> Node0x55f1411ea010;
	Node0x55f1411ea010 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end:                                           \l  call void @llvm.dbg.value(metadata i64* %nb_sectors, metadata !1533,\l... metadata !DIExpression(DW_OP_deref)), !dbg !1543\l  call void @blk_get_geometry(%struct.BlockBackend* nonnull %0, i64* nonnull\l... %nb_sectors) #19, !dbg !1557\l  call void @llvm.dbg.value(metadata i32 -1, metadata !1538, metadata\l... !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 -1, metadata !1537, metadata\l... !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 -1, metadata !1536, metadata\l... !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 0, metadata !1535, metadata\l... !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata %struct.FDFormat* getelementptr inbounds\l... ([34 x %struct.FDFormat], [34 x %struct.FDFormat]* @fd_formats, i64 0, i64\l... 0), metadata !1531, metadata !DIExpression()), !dbg !1543\l  %4 = load i64, i64* %nb_sectors, align 8, !dbg !1558\l  %fdctrl.i = getelementptr inbounds %struct.FDrive, %struct.FDrive* %drv, i64\l... 0, i32 0, !dbg !1563\l  br label %if.end10, !dbg !1573\l}"];
	Node0x55f1411ea010 -> Node0x55f1411ecec0;
	Node0x55f1411ecec0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end10:                                         \l  %indvars.iv = phi i64 [ 0, %if.end ], [ %indvars.iv.next, %for.inc ]\l  %5 = phi i32 [ 0, %if.end ], [ %19, %for.inc ]\l  %arrayidx164 = phi %struct.FDFormat* [ getelementptr inbounds ([34 x\l... %struct.FDFormat], [34 x %struct.FDFormat]* @fd_formats, i64 0, i64 0),\l... %if.end ], [ %arrayidx, %for.inc ]\l  %type_match.0162 = phi i32 [ -1, %if.end ], [ %type_match.1, %for.inc ]\l  %match.0158 = phi i32 [ -1, %if.end ], [ %match.1, %for.inc ]\l  call void @llvm.dbg.value(metadata i32 %type_match.0162, metadata !1538,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 undef, metadata !1537, metadata\l... !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %match.0158, metadata !1536, metadata\l... !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1535, metadata\l... !DIExpression()), !dbg !1543\l  %max_head = getelementptr [34 x %struct.FDFormat], [34 x %struct.FDFormat]*\l... @fd_formats, i64 0, i64 %indvars.iv, i32 3, !dbg !1574\l  %6 = load i8, i8* %max_head, align 2, !dbg !1574\l  %conv = zext i8 %6 to i64, !dbg !1575\l  %add = add nuw nsw i64 %conv, 1, !dbg !1576\l  %max_track = getelementptr [34 x %struct.FDFormat], [34 x %struct.FDFormat]*\l... @fd_formats, i64 0, i64 %indvars.iv, i32 2, !dbg !1577\l  %7 = load i8, i8* %max_track, align 1, !dbg !1577\l  %conv11 = zext i8 %7 to i64, !dbg !1578\l  %mul = mul nuw nsw i64 %add, %conv11, !dbg !1579\l  %last_sect = getelementptr [34 x %struct.FDFormat], [34 x %struct.FDFormat]*\l... @fd_formats, i64 0, i64 %indvars.iv, i32 1, !dbg !1580\l  %8 = load i8, i8* %last_sect, align 4, !dbg !1580\l  %conv12 = zext i8 %8 to i64, !dbg !1581\l  %mul13 = mul nuw nsw i64 %mul, %conv12, !dbg !1582\l  call void @llvm.dbg.value(metadata i64 %mul13, metadata !1534, metadata\l... !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i64 %4, metadata !1533, metadata\l... !DIExpression()), !dbg !1543\l  %cmp15 = icmp eq i64 %4, %mul13, !dbg !1583\l  br i1 %cmp15, label %if.then17, label %if.else44, !dbg !1584\l|{<s0>T|<s1>F}}"];
	Node0x55f1411ecec0:s0 -> Node0x55f1411edf20;
	Node0x55f1411ecec0:s1 -> Node0x55f1411ee000;
	Node0x55f1411edf20 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then17:                                        \l  br i1 %cmp, label %out.loopexit, label %lor.lhs.false20, !dbg !1585\l|{<s0>T|<s1>F}}"];
	Node0x55f1411edf20:s0 -> Node0x55f14134f650;
	Node0x55f1411edf20:s1 -> Node0x55f1411ee620;
	Node0x55f1411ee620 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false20:                                  \l  %9 = load i32, i32* %drive, align 8, !dbg !1588\l  %cmp23 = icmp eq i32 %5, %9, !dbg !1589\l  br i1 %cmp23, label %out.loopexit, label %if.else, !dbg !1590\l|{<s0>T|<s1>F}}"];
	Node0x55f1411ee620:s0 -> Node0x55f14134f650;
	Node0x55f1411ee620:s1 -> Node0x55f1411ee5b0;
	Node0x55f1411ee5b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  call void @llvm.dbg.value(metadata i32 %5, metadata !1591, metadata\l... !DIExpression()), !dbg !1597\l  %10 = icmp ult i32 %5, 3, !dbg !1600\l  br i1 %10, label %switch.lookup, label %drive_size.exit, !dbg !1600\l|{<s0>T|<s1>F}}"];
	Node0x55f1411ee5b0:s0 -> Node0x55f14148bf00;
	Node0x55f1411ee5b0:s1 -> Node0x55f141257610;
	Node0x55f14148bf00 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{switch.lookup:                                    \l  %11 = sext i32 %5 to i64, !dbg !1600\l  %switch.gep = getelementptr inbounds [3 x i32], [3 x i32]*\l... @switch.table.pick_geometry.145, i64 0, i64 %11, !dbg !1600\l  %switch.load = load i32, i32* %switch.gep, align 4, !dbg !1600\l  br label %drive_size.exit, !dbg !1600\l}"];
	Node0x55f14148bf00 -> Node0x55f141257610;
	Node0x55f141257610 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{drive_size.exit:                                  \l  %retval.0.i = phi i32 [ %switch.load, %switch.lookup ], [ 0, %if.else ],\l... !dbg !1601\l  call void @llvm.dbg.value(metadata i32 %9, metadata !1591, metadata\l... !DIExpression()), !dbg !1603\l  %12 = icmp ult i32 %9, 3, !dbg !1605\l  br i1 %12, label %switch.lookup168, label %drive_size.exit152, !dbg !1605\l|{<s0>T|<s1>F}}"];
	Node0x55f141257610:s0 -> Node0x55f140cdc870;
	Node0x55f141257610:s1 -> Node0x55f1412515b0;
	Node0x55f140cdc870 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{switch.lookup168:                                 \l  %13 = sext i32 %9 to i64, !dbg !1605\l  %switch.gep169 = getelementptr inbounds [3 x i32], [3 x i32]*\l... @switch.table.pick_geometry.145, i64 0, i64 %13, !dbg !1605\l  %switch.load170 = load i32, i32* %switch.gep169, align 4, !dbg !1605\l  br label %drive_size.exit152, !dbg !1605\l}"];
	Node0x55f140cdc870 -> Node0x55f1412515b0;
	Node0x55f1412515b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{drive_size.exit152:                               \l  %retval.0.i151 = phi i32 [ %switch.load170, %switch.lookup168 ], [ 0,\l... %drive_size.exit ], !dbg !1606\l  %cmp30 = icmp eq i32 %retval.0.i, %retval.0.i151, !dbg !1607\l  br i1 %cmp30, label %if.then32, label %for.inc, !dbg !1608\l|{<s0>T|<s1>F}}"];
	Node0x55f1412515b0:s0 -> Node0x55f1411efbe0;
	Node0x55f1412515b0:s1 -> Node0x55f1411eca40;
	Node0x55f1411efbe0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then32:                                        \l  %cmp33 = icmp eq i32 %match.0158, -1, !dbg !1609\l  %14 = trunc i64 %indvars.iv to i32, !dbg !1611\l  %cond = select i1 %cmp33, i32 %14, i32 %match.0158, !dbg !1611\l  call void @llvm.dbg.value(metadata i32 %cond, metadata !1536, metadata\l... !DIExpression()), !dbg !1543\l  br label %for.inc, !dbg !1612\l}"];
	Node0x55f1411efbe0 -> Node0x55f1411eca40;
	Node0x55f1411ee000 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else44:                                        \l  %cmp45 = icmp eq i32 %type_match.0162, -1, !dbg !1613\l  br i1 %cmp45, label %if.then47, label %for.inc, !dbg !1614\l|{<s0>T|<s1>F}}"];
	Node0x55f1411ee000:s0 -> Node0x55f1411f1bd0;
	Node0x55f1411ee000:s1 -> Node0x55f1411eca40;
	Node0x55f1411f1bd0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then47:                                        \l  %15 = load i32, i32* %drive, align 8, !dbg !1615\l  %cmp50 = icmp eq i32 %5, %15, !dbg !1616\l  br i1 %cmp50, label %if.then59, label %lor.lhs.false52, !dbg !1617\l|{<s0>T|<s1>F}}"];
	Node0x55f1411f1bd0:s0 -> Node0x55f1411f20b0;
	Node0x55f1411f1bd0:s1 -> Node0x55f1411f2150;
	Node0x55f1411f2150 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false52:                                  \l  br i1 %cmp, label %land.lhs.true, label %for.inc, !dbg !1618\l|{<s0>T|<s1>F}}"];
	Node0x55f1411f2150:s0 -> Node0x55f1411f27f0;
	Node0x55f1411f2150:s1 -> Node0x55f1411eca40;
	Node0x55f1411f27f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true:                                    \l  call void @llvm.dbg.value(metadata %struct.FDrive* %drv, metadata !1568,\l... metadata !DIExpression()), !dbg !1563\l  %16 = load %struct.FDCtrl*, %struct.FDCtrl** %fdctrl.i, align 8, !dbg !1619\l  %fallback.i = getelementptr inbounds %struct.FDCtrl, %struct.FDCtrl* %16,\l... i64 0, i32 35, !dbg !1620\l  %17 = load i32, i32* %fallback.i, align 16, !dbg !1620\l  %cmp57 = icmp eq i32 %5, %17, !dbg !1621\l  br i1 %cmp57, label %if.then59, label %for.inc, !dbg !1622\l|{<s0>T|<s1>F}}"];
	Node0x55f1411f27f0:s0 -> Node0x55f1411f20b0;
	Node0x55f1411f27f0:s1 -> Node0x55f1411eca40;
	Node0x55f1411f20b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then59:                                        \l  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1538, metadata\l... !DIExpression()), !dbg !1543\l  %18 = trunc i64 %indvars.iv to i32, !dbg !1623\l  br label %for.inc, !dbg !1623\l}"];
	Node0x55f1411f20b0 -> Node0x55f1411eca40;
	Node0x55f1411eca40 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.inc:                                          \l  %match.1 = phi i32 [ %cond, %if.then32 ], [ %match.0158, %if.then59 ], [\l... %match.0158, %land.lhs.true ], [ %match.0158, %lor.lhs.false52 ], [\l... %match.0158, %if.else44 ], [ %match.0158, %drive_size.exit152 ], !dbg !1543\l  %type_match.1 = phi i32 [ %type_match.0162, %if.then32 ], [ %18, %if.then59\l... ], [ -1, %land.lhs.true ], [ -1, %lor.lhs.false52 ], [ %type_match.0162,\l... %if.else44 ], [ %type_match.0162, %drive_size.exit152 ], !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %type_match.1, metadata !1538,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 undef, metadata !1537, metadata\l... !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %match.1, metadata !1536, metadata\l... !DIExpression()), !dbg !1543\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1625\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !1535,\l... metadata !DIExpression()), !dbg !1543\l  %arrayidx = getelementptr [34 x %struct.FDFormat], [34 x %struct.FDFormat]*\l... @fd_formats, i64 0, i64 %indvars.iv.next, !dbg !1626\l  call void @llvm.dbg.value(metadata %struct.FDFormat* %arrayidx, metadata\l... !1531, metadata !DIExpression()), !dbg !1543\l  %drive7 = getelementptr inbounds %struct.FDFormat, %struct.FDFormat*\l... %arrayidx, i64 0, i32 0, !dbg !1627\l  %19 = load i32, i32* %drive7, align 4, !dbg !1627\l  %exitcond = icmp eq i64 %indvars.iv.next, 33, !dbg !1629\l  br i1 %exitcond, label %for.end, label %if.end10, !dbg !1573, !llvm.loop\l... !1630\l|{<s0>T|<s1>F}}"];
	Node0x55f1411eca40:s0 -> Node0x55f1411ec7b0;
	Node0x55f1411eca40:s1 -> Node0x55f1411ecec0;
	Node0x55f1411ec7b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.end:                                          \l  %match.1.lcssa = phi i32 [ %match.1, %for.inc ], !dbg !1543\l  %type_match.1.lcssa = phi i32 [ %type_match.1, %for.inc ], !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %match.1.lcssa, metadata !1536,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %type_match.1.lcssa, metadata !1538,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %match.1.lcssa, metadata !1536,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %type_match.1.lcssa, metadata !1538,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %match.1.lcssa, metadata !1536,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %type_match.1.lcssa, metadata !1538,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %match.1.lcssa, metadata !1536,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %type_match.1.lcssa, metadata !1538,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %match.1.lcssa, metadata !1536,\l... metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %type_match.1.lcssa, metadata !1538,\l... metadata !DIExpression()), !dbg !1543\l  %cmp63 = icmp eq i32 %match.1.lcssa, -1, !dbg !1633\l  br i1 %cmp63, label %if.then65, label %if.end78, !dbg !1635\l|{<s0>T|<s1>F}}"];
	Node0x55f1411ec7b0:s0 -> Node0x55f140ef95f0;
	Node0x55f1411ec7b0:s1 -> Node0x55f1411f3e30;
	Node0x55f140ef95f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then65:                                        \l  %cmp72 = icmp eq i32 %type_match.1.lcssa, -1, !dbg !1636\l  br i1 %cmp72, label %if.else76, label %if.end78, !dbg !1636\l|{<s0>T|<s1>F}}"];
	Node0x55f140ef95f0:s0 -> Node0x55f1411f5290;
	Node0x55f140ef95f0:s1 -> Node0x55f1411f3e30;
	Node0x55f1411f5290 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else76:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([46 x i8], [46 x i8]*\l... @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]*\l... @.str.2, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([28 x i8], [28 x\l... i8]* @__PRETTY_FUNCTION__.pick_geometry, i64 0, i64 0)) #20, !dbg !1636\l  unreachable, !dbg !1636\l}"];
	Node0x55f1411f3e30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end78:                                         \l  %match.2 = phi i32 [ %match.1.lcssa, %for.end ], [ %type_match.1.lcssa,\l... %if.then65 ], !dbg !1543\l  call void @llvm.dbg.value(metadata i32 %match.2, metadata !1536, metadata\l... !DIExpression()), !dbg !1543\l  %idxprom79 = sext i32 %match.2 to i64, !dbg !1640\l  %arrayidx80 = getelementptr [34 x %struct.FDFormat], [34 x\l... %struct.FDFormat]* @fd_formats, i64 0, i64 %idxprom79, !dbg !1640\l  call void @llvm.dbg.value(metadata %struct.FDFormat* %arrayidx80, metadata\l... !1531, metadata !DIExpression()), !dbg !1543\l  br label %out, !dbg !1641\l}"];
	Node0x55f1411f3e30 -> Node0x55f1411efa90;
	Node0x55f14134f650 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{out.loopexit:                                     \l  %arrayidx164.lcssa = phi %struct.FDFormat* [ %arrayidx164, %lor.lhs.false20\l... ], [ %arrayidx164, %if.then17 ]\l  br label %out, !dbg !1642\l}"];
	Node0x55f14134f650 -> Node0x55f1411efa90;
	Node0x55f1411efa90 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{out:                                              \l  %parse.0 = phi %struct.FDFormat* [ %arrayidx80, %if.end78 ], [\l... %arrayidx164.lcssa, %out.loopexit ], !dbg !1543\l  call void @llvm.dbg.value(metadata %struct.FDFormat* %parse.0, metadata\l... !1531, metadata !DIExpression()), !dbg !1543\l  call void @llvm.dbg.label(metadata !1540), !dbg !1644\l  %max_head81 = getelementptr inbounds %struct.FDFormat, %struct.FDFormat*\l... %parse.0, i64 0, i32 3, !dbg !1642\l  %20 = load i8, i8* %max_head81, align 2, !dbg !1642\l  %cmp83 = icmp ne i8 %20, 0, !dbg !1645\l  %flags = getelementptr inbounds %struct.FDrive, %struct.FDrive* %drv, i64 0,\l... i32 9, !dbg !1646\l  %21 = load i32, i32* %flags, align 4, !dbg !1646\l  %and = and i32 %21, -2, !dbg !1647\l  %masksel = zext i1 %cmp83 to i32, !dbg !1647\l  %storemerge = or i32 %and, %masksel, !dbg !1647\l  store i32 %storemerge, i32* %flags, align 4, !dbg !1646\l  %max_track89 = getelementptr inbounds %struct.FDFormat, %struct.FDFormat*\l... %parse.0, i64 0, i32 2, !dbg !1648\l  %22 = load i8, i8* %max_track89, align 1, !dbg !1648\l  %max_track90 = getelementptr inbounds %struct.FDrive, %struct.FDrive* %drv,\l... i64 0, i32 11, !dbg !1649\l  store i8 %22, i8* %max_track90, align 1, !dbg !1650\l  %last_sect91 = getelementptr inbounds %struct.FDFormat, %struct.FDFormat*\l... %parse.0, i64 0, i32 1, !dbg !1651\l  %23 = load i8, i8* %last_sect91, align 4, !dbg !1651\l  %last_sect92 = getelementptr inbounds %struct.FDrive, %struct.FDrive* %drv,\l... i64 0, i32 10, !dbg !1652\l  store i8 %23, i8* %last_sect92, align 8, !dbg !1653\l  %drive93 = getelementptr inbounds %struct.FDFormat, %struct.FDFormat*\l... %parse.0, i64 0, i32 0, !dbg !1654\l  %24 = load i32, i32* %drive93, align 4, !dbg !1654\l  %disk = getelementptr inbounds %struct.FDrive, %struct.FDrive* %drv, i64 0,\l... i32 8, !dbg !1655\l  store i32 %24, i32* %disk, align 8, !dbg !1656\l  %rate = getelementptr inbounds %struct.FDFormat, %struct.FDFormat* %parse.0,\l... i64 0, i32 4, !dbg !1657\l  %25 = load i32, i32* %rate, align 4, !dbg !1657\l  %conv94 = trunc i32 %25 to i8, !dbg !1658\l  %media_rate = getelementptr inbounds %struct.FDrive, %struct.FDrive* %drv,\l... i64 0, i32 15, !dbg !1659\l  store i8 %conv94, i8* %media_rate, align 2, !dbg !1660\l  br label %cleanup, !dbg !1661\l}"];
	Node0x55f1411efa90 -> Node0x55f1411eb1d0;
	Node0x55f1411eb1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %out ], [ -1, %entry ], [ -1, %lor.lhs.false4 ], [\l... -1, %lor.lhs.false ], !dbg !1543\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #19, !dbg !1662\l  ret i32 %retval.0, !dbg !1662\l}"];
}
