digraph "CFG for 'i8257_write_cont' function" {
	label="CFG for 'i8257_write_cont' function";

	Node0x563b747d8c70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !793, metadata\l... !DIExpression()), !dbg !802\l  call void @llvm.dbg.value(metadata i64 %nport, metadata !794, metadata\l... !DIExpression()), !dbg !802\l  call void @llvm.dbg.value(metadata i64 %data, metadata !795, metadata\l... !DIExpression()), !dbg !802\l  call void @llvm.dbg.value(metadata i32 %size, metadata !796, metadata\l... !DIExpression()), !dbg !802\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !797, metadata\l... !DIExpression()), !dbg !802\l  call void @llvm.dbg.value(metadata i32 0, metadata !799, metadata\l... !DIExpression()), !dbg !802\l  %dshift = getelementptr inbounds i8, i8* %opaque, i64 164, !dbg !803\l  %0 = bitcast i8* %dshift to i32*, !dbg !803\l  %1 = load i32, i32* %0, align 4, !dbg !803\l  %sh_prom = zext i32 %1 to i64, !dbg !804\l  %shr = lshr i64 %nport, %sh_prom, !dbg !804\l  %2 = trunc i64 %shr to i32, !dbg !805\l  %conv = and i32 %2, 15, !dbg !805\l  call void @llvm.dbg.value(metadata i32 %conv, metadata !798, metadata\l... !DIExpression()), !dbg !802\l  switch i32 %conv, label %sw.default [\l    i32 0, label %sw.bb\l    i32 1, label %sw.bb10\l    i32 2, label %sw.bb31\l    i32 3, label %sw.bb51\l    i32 4, label %sw.bb55\l    i32 5, label %sw.bb56\l    i32 6, label %sw.bb61\l    i32 7, label %sw.bb63\l  ], !dbg !806, !prof !807\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3|<s5>4|<s6>5|<s7>6|<s8>7}}"];
	Node0x563b747d8c70:s0 -> Node0x563b747db7a0;
	Node0x563b747d8c70:s1 -> Node0x563b747dbb70;
	Node0x563b747d8c70:s2 -> Node0x563b747dfff0;
	Node0x563b747d8c70:s3 -> Node0x563b747e2800;
	Node0x563b747d8c70:s4 -> Node0x563b747bae20;
	Node0x563b747d8c70:s5 -> Node0x563b747e0c60;
	Node0x563b747d8c70:s6 -> Node0x563b747e1020;
	Node0x563b747d8c70:s7 -> Node0x563b747e84a0;
	Node0x563b747d8c70:s8 -> Node0x563b747e8a30;
	Node0x563b747dbb70 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{sw.bb:                                            \l  %and2 = and i64 %data, 251, !dbg !808\l  %tobool = icmp eq i64 %and2, 0, !dbg !808\l  br i1 %tobool, label %if.end8, label %do.body, !dbg !811\l|{<s0>T|<s1>F}}"];
	Node0x563b747dbb70:s0 -> Node0x563b747dbcb0;
	Node0x563b747dbb70:s1 -> Node0x563b747dceb0;
	Node0x563b747dceb0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{do.body:                                          \l  call void @llvm.dbg.value(metadata i32 1024, metadata !812, metadata\l... !DIExpression()), !dbg !818\l  %3 = load i32, i32* @qemu_loglevel, align 4, !dbg !823\l  %and.i = and i32 %3, 1024, !dbg !824\l  %cmp.i = icmp eq i32 %and.i, 0, !dbg !825\l  br i1 %cmp.i, label %cleanup, label %if.then6, !dbg !826, !prof !827,\l... !misexpect !828\l|{<s0>T|<s1>F}}"];
	Node0x563b747dceb0:s0 -> Node0x563b747dfb30;
	Node0x563b747dceb0:s1 -> Node0x563b747dab20;
	Node0x563b747dab20 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then6:                                         \l  %call7 = tail call i32 (i8*, ...) @qemu_log(i8* getelementptr inbounds ([31\l... x i8], [31 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([17 x\l... i8], [17 x i8]* @__func__.i8257_write_cont, i64 0, i64 0), i64 %data) #9,\l... !dbg !829\l  br label %cleanup, !dbg !829\l}"];
	Node0x563b747dab20 -> Node0x563b747dfb30;
	Node0x563b747dbcb0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end8:                                          \l  %conv9 = trunc i64 %data to i8, !dbg !831\l  %4 = getelementptr inbounds i8, i8* %opaque, i64 169, !dbg !832\l  store i8 %conv9, i8* %4, align 1, !dbg !833\l  br label %cleanup, !dbg !834\l}"];
	Node0x563b747dbcb0 -> Node0x563b747dfb30;
	Node0x563b747dfff0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{sw.bb10:                                          \l  %5 = trunc i64 %data to i32, !dbg !835\l  %conv12 = and i32 %5, 3, !dbg !835\l  call void @llvm.dbg.value(metadata i32 %conv12, metadata !799, metadata\l... !DIExpression()), !dbg !802\l  %and13 = and i64 %data, 4, !dbg !836\l  %tobool14 = icmp eq i64 %and13, 0, !dbg !836\l  %add = or i32 %conv12, 4, !dbg !838\l  %shl = shl nuw i32 1, %add, !dbg !838\l  %6 = getelementptr inbounds i8, i8* %opaque, i64 168, !dbg !838\l  %7 = load i8, i8* %6, align 8, !dbg !838\l  %8 = trunc i32 %shl to i8, !dbg !838\l  %conv17 = or i8 %7, %8, !dbg !839\l  %9 = xor i8 %8, -1, !dbg !839\l  %conv23 = and i8 %7, %9, !dbg !839\l  %storemerge103 = select i1 %tobool14, i8 %conv23, i8 %conv17, !dbg !839\l  %shl25 = shl nuw nsw i32 1, %conv12, !dbg !840\l  %10 = trunc i32 %shl25 to i8, !dbg !841\l  %11 = xor i8 %10, -1, !dbg !841\l  %conv30 = and i8 %storemerge103, %11, !dbg !841\l  store i8 %conv30, i8* %6, align 8, !dbg !841\l  tail call void @i8257_dma_run(i8* nonnull %opaque), !dbg !842\l  br label %cleanup, !dbg !843\l}"];
	Node0x563b747dfff0 -> Node0x563b747dfb30;
	Node0x563b747e2800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{sw.bb31:                                          \l  %and32 = and i64 %data, 4, !dbg !844\l  %tobool33 = icmp eq i64 %and32, 0, !dbg !844\l  %12 = trunc i64 %data to i32, !dbg !846\l  %sh_prom36 = and i32 %12, 3, !dbg !846\l  %shl37 = shl nuw nsw i32 1, %sh_prom36, !dbg !846\l  %13 = getelementptr inbounds i8, i8* %opaque, i64 170, !dbg !846\l  %14 = load i8, i8* %13, align 2, !dbg !846\l  %15 = trunc i32 %shl37 to i8, !dbg !846\l  %conv40 = or i8 %14, %15, !dbg !847\l  %16 = xor i8 %15, -1, !dbg !847\l  %conv49 = and i8 %14, %16, !dbg !847\l  %storemerge = select i1 %tobool33, i8 %conv49, i8 %conv40, !dbg !847, !prof\l... !848\l  store i8 %storemerge, i8* %13, align 2, !dbg !846\l  tail call void @i8257_dma_run(i8* nonnull %opaque), !dbg !849\l  br label %cleanup, !dbg !850\l}"];
	Node0x563b747e2800 -> Node0x563b747dfb30;
	Node0x563b747bae20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{sw.bb51:                                          \l  %conv53 = and i64 %data, 3, !dbg !851\l  call void @llvm.dbg.value(metadata i64 %data, metadata !799, metadata\l... !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert,\l... 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg\l... !802\l  %conv54 = trunc i64 %data to i8, !dbg !853\l  %regs = getelementptr inbounds i8, i8* %opaque, i64 176, !dbg !854\l  %17 = bitcast i8* %regs to [4 x %struct.I8257Regs]*, !dbg !854\l  %mode = getelementptr [4 x %struct.I8257Regs], [4 x %struct.I8257Regs]* %17,\l... i64 0, i64 %conv53, i32 2, !dbg !855\l  store i8 %conv54, i8* %mode, align 4, !dbg !856\l  br label %cleanup, !dbg !857\l}"];
	Node0x563b747bae20 -> Node0x563b747dfb30;
	Node0x563b747e0c60 [shape=record,penwidth=3.0, color="red",label="{sw.bb55:                                          \l  %18 = getelementptr inbounds i8, i8* %opaque, i64 171, !dbg !858\l  store i8 0, i8* %18, align 1, !dbg !859\l  br label %cleanup, !dbg !860\l}"];
	Node0x563b747e0c60 -> Node0x563b747dfb30;
	Node0x563b747e1020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{sw.bb56:                                          \l  %19 = getelementptr inbounds i8, i8* %opaque, i64 171, !dbg !861\l  store i8 0, i8* %19, align 1, !dbg !862\l  %20 = getelementptr inbounds i8, i8* %opaque, i64 170, !dbg !863\l  store i8 -1, i8* %20, align 2, !dbg !864\l  %21 = getelementptr inbounds i8, i8* %opaque, i64 168, !dbg !865\l  store i8 0, i8* %21, align 8, !dbg !866\l  %22 = getelementptr inbounds i8, i8* %opaque, i64 169, !dbg !867\l  store i8 0, i8* %22, align 1, !dbg !868\l  br label %cleanup, !dbg !869\l}"];
	Node0x563b747e1020 -> Node0x563b747dfb30;
	Node0x563b747e84a0 [shape=record,penwidth=3.0, color="red",label="{sw.bb61:                                          \l  %23 = getelementptr inbounds i8, i8* %opaque, i64 170, !dbg !870\l  store i8 0, i8* %23, align 2, !dbg !871\l  tail call void @i8257_dma_run(i8* nonnull %opaque), !dbg !872\l  br label %cleanup, !dbg !873\l}"];
	Node0x563b747e84a0 -> Node0x563b747dfb30;
	Node0x563b747e8a30 [shape=record,penwidth=3.0, color="red",label="{sw.bb63:                                          \l  %conv64 = trunc i64 %data to i8, !dbg !874\l  %24 = getelementptr inbounds i8, i8* %opaque, i64 170, !dbg !875\l  store i8 %conv64, i8* %24, align 2, !dbg !876\l  tail call void @i8257_dma_run(i8* nonnull %opaque), !dbg !877\l  br label %cleanup, !dbg !878\l}"];
	Node0x563b747e8a30 -> Node0x563b747dfb30;
	Node0x563b747db7a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{sw.default:                                       \l  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !879\l  %call66 = tail call i32 (%struct._IO_FILE*, i8*, ...)\l... @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([24 x i8], [24 x\l... i8]* @.str.16, i64 0, i64 0), i32 %conv) #10, !dbg !879\l  br label %cleanup, !dbg !880\l}"];
	Node0x563b747db7a0 -> Node0x563b747dfb30;
	Node0x563b747dfb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  ret void, !dbg !881\l}"];
}
