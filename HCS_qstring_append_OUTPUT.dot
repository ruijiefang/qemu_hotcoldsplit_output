digraph "CFG for 'qstring_append' function" {
	label="CFG for 'qstring_append' function";

	Node0x55e27f4e0de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.QString* %qstring, metadata !85,\l... metadata !DIExpression()), !dbg !89\l  call void @llvm.dbg.value(metadata i8* %str, metadata !86, metadata\l... !DIExpression()), !dbg !89\l  %call = tail call i64 @strlen(i8* nonnull dereferenceable(1) %str) #15, !dbg\l... !90\l  call void @llvm.dbg.value(metadata i64 %call, metadata !87, metadata\l... !DIExpression()), !dbg !89\l  call void @llvm.dbg.value(metadata %struct.QString* %qstring, metadata !91,\l... metadata !DIExpression()) #16, !dbg !97\l  call void @llvm.dbg.value(metadata i64 %call, metadata !96, metadata\l... !DIExpression()) #16, !dbg !97\l  %capacity.i = getelementptr inbounds %struct.QString, %struct.QString*\l... %qstring, i64 0, i32 3, !dbg !99\l  %0 = load i64, i64* %capacity.i, align 8, !dbg !99\l  %length.i = getelementptr inbounds %struct.QString, %struct.QString*\l... %qstring, i64 0, i32 2, !dbg !101\l  %1 = load i64, i64* %length.i, align 8, !dbg !101\l  %add.i = add i64 %1, %call, !dbg !102\l  %cmp.i = icmp ult i64 %0, %add.i, !dbg !103\l  br i1 %cmp.i, label %if.then.i, label\l... %entry.capacity_increase.exit_crit_edge, !dbg !104, !prof !105\l|{<s0>T|<s1>F}}"];
	Node0x55e27f4e0de0:s0 -> Node0x55e27f5d4680;
	Node0x55e27f4e0de0:s1 -> Node0x55e27f603480;
	Node0x55e27f603480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{entry.capacity_increase.exit_crit_edge:           \l  %string.phi.trans.insert = getelementptr inbounds %struct.QString,\l... %struct.QString* %qstring, i64 0, i32 1, !dbg !89\l  %.pre = load i8*, i8** %string.phi.trans.insert, align 8, !dbg !106\l  br label %capacity_increase.exit, !dbg !104\l}"];
	Node0x55e27f603480 -> Node0x55e27f5f29c0;
	Node0x55e27f5d4680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.then.i:                                        \l  %sub.i = xor i64 %0, -1, !dbg !107\l  %cmp2.i = icmp ugt i64 %call, %sub.i, !dbg !107\l  br i1 %cmp2.i, label %if.else.i, label %if.end.i, !dbg !111, !prof !112\l|{<s0>T|<s1>F}}"];
	Node0x55e27f5d4680:s0 -> Node0x55e27f60a0a0;
	Node0x55e27f5d4680:s1 -> Node0x55e27f5f6040;
	Node0x55e27f60a0a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else.i:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x\l... i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x\l... i8]* @.str.2, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([42 x i8],\l... [42 x i8]* @__PRETTY_FUNCTION__.capacity_increase, i64 0, i64 0)) #17, !dbg\l... !107\l  unreachable, !dbg !107\l}"];
	Node0x55e27f5f6040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end.i:                                         \l  %add5.i = add i64 %0, %call, !dbg !113\l  store i64 %add5.i, i64* %capacity.i, align 8, !dbg !113\l  %cmp7.i = icmp sgt i64 %add5.i, -1, !dbg !114\l  br i1 %cmp7.i, label %if.end10.i, label %if.else9.i, !dbg !117, !prof !118\l|{<s0>T|<s1>F}}"];
	Node0x55e27f5f6040:s0 -> Node0x55e27f609d90;
	Node0x55e27f5f6040:s1 -> Node0x55e27f609bc0;
	Node0x55e27f609bc0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else9.i:                                       \l  tail call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x\l... i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x\l... i8]* @.str.2, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([42 x i8],\l... [42 x i8]* @__PRETTY_FUNCTION__.capacity_increase, i64 0, i64 0)) #17, !dbg\l... !114\l  unreachable, !dbg !114\l}"];
	Node0x55e27f609d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end10.i:                                       \l  %mul.i = shl nuw i64 %add5.i, 1, !dbg !119\l  store i64 %mul.i, i64* %capacity.i, align 8, !dbg !119\l  %string.i = getelementptr inbounds %struct.QString, %struct.QString*\l... %qstring, i64 0, i32 1, !dbg !120\l  %2 = load i8*, i8** %string.i, align 8, !dbg !120\l  %add13.i = or i64 %mul.i, 1, !dbg !121\l  %call.i = tail call i8* @g_realloc(i8* %2, i64 %add13.i) #16, !dbg !122\l  store i8* %call.i, i8** %string.i, align 8, !dbg !123\l  %.pre13 = load i64, i64* %length.i, align 8, !dbg !124\l  br label %capacity_increase.exit, !dbg !125\l}"];
	Node0x55e27f609d90 -> Node0x55e27f5f29c0;
	Node0x55e27f5f29c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{capacity_increase.exit:                           \l  %3 = phi i64 [ %1, %entry.capacity_increase.exit_crit_edge ], [ %.pre13,\l... %if.end10.i ], !dbg !124\l  %4 = phi i8* [ %.pre, %entry.capacity_increase.exit_crit_edge ], [ %call.i,\l... %if.end10.i ], !dbg !106\l  %string = getelementptr inbounds %struct.QString, %struct.QString* %qstring,\l... i64 0, i32 1, !dbg !106\l  %add.ptr = getelementptr i8, i8* %4, i64 %3, !dbg !126\l  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1\l... %str, i64 %call, i1 false), !dbg !127, !prof !128\l  %5 = load i64, i64* %length.i, align 8, !dbg !129\l  %add = add i64 %5, %call, !dbg !129\l  store i64 %add, i64* %length.i, align 8, !dbg !129\l  %6 = load i8*, i8** %string, align 8, !dbg !130\l  %arrayidx = getelementptr i8, i8* %6, i64 %add, !dbg !131\l  store i8 0, i8* %arrayidx, align 1, !dbg !132\l  ret void, !dbg !133\l}"];
}
