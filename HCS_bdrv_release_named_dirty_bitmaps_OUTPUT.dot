digraph "CFG for 'bdrv_release_named_dirty_bitmaps' function" {
	label="CFG for 'bdrv_release_named_dirty_bitmaps' function";

	Node0x5601c22ad2d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2586, metadata !DIExpression()), !dbg !2590\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2591, metadata !DIExpression()) #16, !dbg !2601\l  %0 = load atomic i64, i64* bitcast (void (%struct.QemuMutex*, i8*, i32)**\l... @qemu_mutex_lock_func to i64*) monotonic, align 8, !dbg !2603\l  %1 = inttoptr i64 %0 to void (%struct.QemuMutex*, i8*, i32)*, !dbg !2603\l  call void @llvm.dbg.value(metadata void (%struct.QemuMutex*, i8*, i32)* %1,\l... metadata !2594, metadata !DIExpression()) #16, !dbg !2605\l  %dirty_bitmap_mutex.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 41, !dbg !2606\l  tail call void %1(%struct.QemuMutex* nonnull %dirty_bitmap_mutex.i, i8*\l... getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 64)\l... #16, !dbg !2606, !prof !2607\l  %lh_first = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 42, i32 0, !dbg !2608\l  %2 = load %struct.BdrvDirtyBitmap*, %struct.BdrvDirtyBitmap** %lh_first,\l... align 8, !dbg !2608\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %2, metadata\l... !2587, metadata !DIExpression()), !dbg !2590\l  %tobool10 = icmp eq %struct.BdrvDirtyBitmap* %2, null, !dbg !2610\l  br i1 %tobool10, label %for.end, label %land.rhs.preheader, !dbg !2610,\l... !prof !2612\l|{<s0>T|<s1>F}}"];
	Node0x5601c22ad2d0:s0 -> Node0x5601c2279400;
	Node0x5601c22ad2d0:s1 -> Node0x5601c235b610;
	Node0x5601c235b610 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.rhs.preheader:                               \l  br label %land.rhs.peel.begin, !dbg !2608\l}"];
	Node0x5601c235b610 -> Node0x5601c2285360;
	Node0x5601c2285360 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.rhs.peel.begin:                              \l  br label %land.rhs.peel, !dbg !2608\l}"];
	Node0x5601c2285360 -> Node0x5601c2356080;
	Node0x5601c2356080 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.rhs.peel:                                    \l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %2, metadata\l... !2587, metadata !DIExpression()), !dbg !2590\l  %le_next.peel = getelementptr inbounds %struct.BdrvDirtyBitmap,\l... %struct.BdrvDirtyBitmap* %2, i64 0, i32 12, i32 0, !dbg !2610\l  %3 = load %struct.BdrvDirtyBitmap*, %struct.BdrvDirtyBitmap** %le_next.peel,\l... align 8, !dbg !2610\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %3, metadata\l... !2588, metadata !DIExpression()), !dbg !2590\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %2, metadata\l... !2613, metadata !DIExpression()), !dbg !2620\l  %name.i.peel = getelementptr inbounds %struct.BdrvDirtyBitmap,\l... %struct.BdrvDirtyBitmap* %2, i64 0, i32 4, !dbg !2624\l  %4 = load i8*, i8** %name.i.peel, align 8, !dbg !2624\l  %tobool1.peel = icmp eq i8* %4, null, !dbg !2625\l  br i1 %tobool1.peel, label %for.inc.peel, label %if.then.peel, !dbg !2626\l|{<s0>T|<s1>F}}"];
	Node0x5601c2356080:s0 -> Node0x5601c2332f20;
	Node0x5601c2356080:s1 -> Node0x5601c24c3500;
	Node0x5601c24c3500 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then.peel:                                     \l  tail call fastcc void\l... @bdrv_release_dirty_bitmap_locked(%struct.BdrvDirtyBitmap* nonnull %2), !dbg\l... !2627\l  br label %for.inc.peel, !dbg !2629\l}"];
	Node0x5601c24c3500 -> Node0x5601c2332f20;
	Node0x5601c2332f20 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.inc.peel:                                     \l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %3, metadata\l... !2587, metadata !DIExpression()), !dbg !2590\l  %tobool.peel = icmp eq %struct.BdrvDirtyBitmap* %3, null, !dbg !2610\l  br i1 %tobool.peel, label %for.end.loopexit, label %land.rhs.peel.next, !dbg\l... !2610, !prof !2612\l|{<s0>T|<s1>F}}"];
	Node0x5601c2332f20:s0 -> Node0x5601c234dfc0;
	Node0x5601c2332f20:s1 -> Node0x5601c234b070;
	Node0x5601c234b070 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.rhs.peel.next:                               \l  br label %land.rhs.peel.next12, !dbg !2608\l}"];
	Node0x5601c234b070 -> Node0x5601c2496cb0;
	Node0x5601c2496cb0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.rhs.peel.next12:                             \l  br label %land.rhs.preheader.peel.newph, !dbg !2608\l}"];
	Node0x5601c2496cb0 -> Node0x5601c2361d70;
	Node0x5601c2361d70 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.rhs.preheader.peel.newph:                    \l  br label %land.rhs, !dbg !2608\l}"];
	Node0x5601c2361d70 -> Node0x5601c22af350;
	Node0x5601c22af350 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.rhs:                                         \l  %bm.011 = phi %struct.BdrvDirtyBitmap* [ %5, %for.inc ], [ %3,\l... %land.rhs.preheader.peel.newph ]\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %bm.011,\l... metadata !2587, metadata !DIExpression()), !dbg !2590\l  %le_next = getelementptr inbounds %struct.BdrvDirtyBitmap,\l... %struct.BdrvDirtyBitmap* %bm.011, i64 0, i32 12, i32 0, !dbg !2610\l  %5 = load %struct.BdrvDirtyBitmap*, %struct.BdrvDirtyBitmap** %le_next,\l... align 8, !dbg !2610\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %5, metadata\l... !2588, metadata !DIExpression()), !dbg !2590\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %bm.011,\l... metadata !2613, metadata !DIExpression()), !dbg !2620\l  %name.i = getelementptr inbounds %struct.BdrvDirtyBitmap,\l... %struct.BdrvDirtyBitmap* %bm.011, i64 0, i32 4, !dbg !2624\l  %6 = load i8*, i8** %name.i, align 8, !dbg !2624\l  %tobool1 = icmp eq i8* %6, null, !dbg !2625\l  br i1 %tobool1, label %for.inc, label %if.then, !dbg !2626\l|{<s0>T|<s1>F}}"];
	Node0x5601c22af350:s0 -> Node0x5601c22af1d0;
	Node0x5601c22af350:s1 -> Node0x5601c22afd40;
	Node0x5601c22afd40 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then:                                          \l  tail call fastcc void\l... @bdrv_release_dirty_bitmap_locked(%struct.BdrvDirtyBitmap* nonnull %bm.011),\l... !dbg !2627\l  br label %for.inc, !dbg !2629\l}"];
	Node0x5601c22afd40 -> Node0x5601c22af1d0;
	Node0x5601c22af1d0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.inc:                                          \l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %5, metadata\l... !2587, metadata !DIExpression()), !dbg !2590\l  %tobool = icmp eq %struct.BdrvDirtyBitmap* %5, null, !dbg !2610\l  br i1 %tobool, label %for.end.loopexit.loopexit, label %land.rhs, !dbg\l... !2610, !prof !2612, !llvm.loop !2630\l|{<s0>T|<s1>F}}"];
	Node0x5601c22af1d0:s0 -> Node0x5601c23587e0;
	Node0x5601c22af1d0:s1 -> Node0x5601c22af350;
	Node0x5601c23587e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.end.loopexit.loopexit:                        \l  br label %for.end.loopexit, !dbg !2634\l}"];
	Node0x5601c23587e0 -> Node0x5601c234dfc0;
	Node0x5601c234dfc0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.end.loopexit:                                 \l  br label %for.end, !dbg !2634\l}"];
	Node0x5601c234dfc0 -> Node0x5601c2279400;
	Node0x5601c2279400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.end:                                          \l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2637, metadata !DIExpression()) #16, !dbg !2639\l  tail call void @qemu_mutex_unlock_impl(%struct.QemuMutex* nonnull\l... %dirty_bitmap_mutex.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]*\l... @.str.1, i64 0, i64 0), i32 69) #16, !dbg !2634\l  ret void, !dbg !2640\l}"];
}
