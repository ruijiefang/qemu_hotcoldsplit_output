digraph "CFG for 'bmdma_start_dma' function" {
	label="CFG for 'bmdma_start_dma' function";

	Node0x558923ab6dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.IDEDMA* %dma, metadata !1429,\l... metadata !DIExpression()), !dbg !1442\l  call void @llvm.dbg.value(metadata %struct.IDEState* %s, metadata !1430,\l... metadata !DIExpression()), !dbg !1442\l  call void @llvm.dbg.value(metadata void (i8*, i32)* %dma_cb, metadata !1431,\l... metadata !DIExpression()), !dbg !1442\l  call void @llvm.dbg.declare(metadata [0 x i8]* undef, metadata !1433,\l... metadata !DIExpression()), !dbg !1443\l  call void @llvm.dbg.value(metadata %struct.IDEDMA* %dma, metadata !1438,\l... metadata !DIExpression()), !dbg !1444\l  %0 = bitcast %struct.IDEDMA* %dma to %struct.BMDMAState*, !dbg !1445\l  call void @llvm.dbg.value(metadata %struct.BMDMAState* %0, metadata !1432,\l... metadata !DIExpression()), !dbg !1442\l  %dma_cb2 = getelementptr inbounds %struct.IDEDMA, %struct.IDEDMA* %dma, i64\l... 1, i32 1, i32 2, i32 0, i32 1, !dbg !1446\l  %1 = bitcast %struct.iovec* %dma_cb2 to void (i8*, i32)**, !dbg !1446\l  store void (i8*, i32)* %dma_cb, void (i8*, i32)** %1, align 8, !dbg !1447\l  %cur_prd_last = getelementptr inbounds %struct.BMDMAState,\l... %struct.BMDMAState* %0, i64 0, i32 6, !dbg !1448\l  store i32 0, i32* %cur_prd_last, align 4, !dbg !1449\l  %2 = getelementptr inbounds %struct.IDEDMA, %struct.IDEDMA* %dma, i64 1, i32\l... 1, i32 2, i32 0, i32 0, !dbg !1450\l  store i32 0, i32* %2, align 16, !dbg !1451\l  %cur_prd_len = getelementptr inbounds %struct.BMDMAState,\l... %struct.BMDMAState* %0, i64 0, i32 8, !dbg !1452\l  store i32 0, i32* %cur_prd_len, align 4, !dbg !1453\l  %status = getelementptr inbounds %struct.BMDMAState, %struct.BMDMAState* %0,\l... i64 0, i32 2, !dbg !1454\l  %3 = load i8, i8* %status, align 1, !dbg !1454\l  %4 = and i8 %3, 1, !dbg !1456\l  %tobool = icmp eq i8 %4, 0, !dbg !1456\l  br i1 %tobool, label %if.end, label %if.then, !dbg !1457, !prof !1458\l|{<s0>T|<s1>F}}"];
	Node0x558923ab6dd0:s0 -> Node0x558923bd1de0;
	Node0x558923ab6dd0:s1 -> Node0x558923bd1d70;
	Node0x558923bd1d70 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then:                                          \l  call void @llvm.dbg.value(metadata %struct.BMDMAState* %0, metadata !1459,\l... metadata !DIExpression()) #14, !dbg !1464\l  %bus.i = getelementptr inbounds %struct.IDEDMA, %struct.IDEDMA* %dma, i64 1,\l... i32 1, !dbg !1467\l  %5 = bitcast %struct.QEMUIOVector* %bus.i to %struct.IDEBus**, !dbg !1467\l  %6 = load %struct.IDEBus*, %struct.IDEBus** %5, align 16, !dbg !1467\l  %retry_unit.i = getelementptr inbounds %struct.IDEBus, %struct.IDEBus* %6,\l... i64 0, i32 12, !dbg !1467\l  %7 = load i8, i8* %retry_unit.i, align 4, !dbg !1467\l  %cmp.i = icmp eq i8 %7, -1, !dbg !1467\l  br i1 %cmp.i, label %if.else.i, label %bmdma_active_if.exit, !dbg !1470\l|{<s0>T|<s1>F}}"];
	Node0x558923bd1d70:s0 -> Node0x558923bc4370;
	Node0x558923bd1d70:s1 -> Node0x558923c18430;
	Node0x558923bc4370 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else.i:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x\l... i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x\l... i8]* @.str.10, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([40 x i8],\l... [40 x i8]* @__PRETTY_FUNCTION__.bmdma_active_if, i64 0, i64 0)) #15, !dbg\l... !1467\l  unreachable, !dbg !1467\l}"];
	Node0x558923c18430 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{bmdma_active_if.exit:                             \l  %idx.ext.i = zext i8 %7 to i64, !dbg !1471\l  %add.ptr.i = getelementptr %struct.IDEBus, %struct.IDEBus* %6, i64 0, i32 3,\l... i64 %idx.ext.i, !dbg !1471\l  %8 = bitcast %struct.IDEState* %add.ptr.i to i8*, !dbg !1472\l  tail call void %dma_cb(i8* %8, i32 0) #14, !dbg !1473\l  br label %if.end, !dbg !1474\l}"];
	Node0x558923c18430 -> Node0x558923bd1de0;
	Node0x558923bd1de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  ret void, !dbg !1475\l}"];
}
