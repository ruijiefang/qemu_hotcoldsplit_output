digraph "CFG for 'rtl8139_can_receive' function" {
	label="CFG for 'rtl8139_can_receive' function";

	Node0x563122e84b40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.NetClientState* %nc, metadata\l... !1496, metadata !DIExpression()), !dbg !1501\l  %call = tail call i8* @qemu_get_nic_opaque(%struct.NetClientState* %nc) #11,\l... !dbg !1502\l  call void @llvm.dbg.value(metadata i8* %call, metadata !1497, metadata\l... !DIExpression()), !dbg !1501\l  %0 = getelementptr inbounds i8, i8* %call, i64 2376, !dbg !1503\l  %1 = load i8, i8* %0, align 8, !dbg !1503\l  %tobool = icmp eq i8 %1, 0, !dbg !1505\l  br i1 %tobool, label %cleanup, label %if.end, !dbg !1506, !prof !1507\l|{<s0>T|<s1>F}}"];
	Node0x563122e84b40:s0 -> Node0x5631231f89c0;
	Node0x563122e84b40:s1 -> Node0x5631231f82c0;
	Node0x5631231f82c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  call void @llvm.dbg.value(metadata i8* %call, metadata !1508, metadata\l... !DIExpression()), !dbg !1513\l  %2 = getelementptr inbounds i8, i8* %call, i64 2377, !dbg !1516\l  %3 = load i8, i8* %2, align 1, !dbg !1516\l  %4 = and i8 %3, 8, !dbg !1517\l  %tobool2 = icmp eq i8 %4, 0, !dbg !1518\l  br i1 %tobool2, label %cleanup, label %if.end4, !dbg !1519, !prof !1520\l|{<s0>T|<s1>F}}"];
	Node0x5631231f82c0:s0 -> Node0x5631231f89c0;
	Node0x5631231f82c0:s1 -> Node0x5631231f8eb0;
	Node0x5631231f8eb0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end4:                                          \l  call void @llvm.dbg.value(metadata i8* %call, metadata !1521, metadata\l... !DIExpression()), !dbg !1524\l  %CpCmd.i = getelementptr inbounds i8, i8* %call, i64 2390, !dbg !1527\l  %5 = bitcast i8* %CpCmd.i to i16*, !dbg !1527\l  %6 = load i16, i16* %5, align 2, !dbg !1527\l  %7 = and i16 %6, 2, !dbg !1528\l  %tobool6 = icmp eq i16 %7, 0, !dbg !1529\l  br i1 %tobool6, label %if.end9, label %land.lhs.true, !dbg !1530\l|{<s0>T|<s1>F}}"];
	Node0x5631231f8eb0:s0 -> Node0x5631231f9650;
	Node0x5631231f8eb0:s1 -> Node0x5631231f96c0;
	Node0x5631231f96c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true:                                    \l  call void @llvm.dbg.value(metadata i8* %call, metadata !1531, metadata\l... !DIExpression()), !dbg !1536\l  %RxRingAddrLO.i = getelementptr inbounds i8, i8* %call, i64 10640, !dbg !1538\l  %8 = bitcast i8* %RxRingAddrLO.i to i32*, !dbg !1538\l  %9 = load i32, i32* %8, align 16, !dbg !1538\l  %cmp.i = icmp eq i32 %9, 0, !dbg !1539\l  br i1 %cmp.i, label %land.rhs.i, label %cleanup, !dbg !1540\l|{<s0>T|<s1>F}}"];
	Node0x5631231f96c0:s0 -> Node0x5631230cecd0;
	Node0x5631231f96c0:s1 -> Node0x5631231f89c0;
	Node0x5631230cecd0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.rhs.i:                                       \l  %RxRingAddrHI.i = getelementptr inbounds i8, i8* %call, i64 10644, !dbg !1541\l  %10 = bitcast i8* %RxRingAddrHI.i to i32*, !dbg !1541\l  %11 = load i32, i32* %10, align 4, !dbg !1541\l  %cmp1.i = icmp eq i32 %11, 0, !dbg !1542\l  br i1 %cmp1.i, label %if.end9, label %cleanup, !dbg !1543\l|{<s0>T|<s1>F}}"];
	Node0x5631230cecd0:s0 -> Node0x5631231f9650;
	Node0x5631230cecd0:s1 -> Node0x5631231f89c0;
	Node0x5631231f9650 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end9:                                          \l  %RxBufferSize = getelementptr inbounds i8, i8* %call, i64 2340, !dbg !1544\l  %12 = bitcast i8* %RxBufferSize to i32*, !dbg !1544\l  %13 = load i32, i32* %12, align 4, !dbg !1544\l  %RxBufPtr = getelementptr inbounds i8, i8* %call, i64 2344, !dbg !1544\l  %14 = bitcast i8* %RxBufPtr to i32*, !dbg !1544\l  %15 = load i32, i32* %14, align 8, !dbg !1544\l  %add = add i32 %15, %13, !dbg !1544\l  %RxBufAddr = getelementptr inbounds i8, i8* %call, i64 2348, !dbg !1544\l  %16 = bitcast i8* %RxBufAddr to i32*, !dbg !1544\l  %17 = load i32, i32* %16, align 4, !dbg !1544\l  %sub = sub i32 %add, %17, !dbg !1544\l  %sub11 = add i32 %13, -1, !dbg !1544\l  %and = and i32 %sub, %sub11, !dbg !1544\l  call void @llvm.dbg.value(metadata i32 %and, metadata !1498, metadata\l... !DIExpression()), !dbg !1501\l  %cmp = icmp eq i32 %and, 0, !dbg !1545\l  %cmp12 = icmp sgt i32 %and, 1513, !dbg !1546\l  %or.cond = or i1 %cmp, %cmp12, !dbg !1547\l  br i1 %or.cond, label %cleanup, label %lor.rhs, !dbg !1547\l|{<s0>T|<s1>F}}"];
	Node0x5631231f9650:s0 -> Node0x5631231f89c0;
	Node0x5631231f9650:s1 -> Node0x5631231fad70;
	Node0x5631231fad70 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.rhs:                                          \l  %IntrMask = getelementptr inbounds i8, i8* %call, i64 2354, !dbg !1548\l  %18 = bitcast i8* %IntrMask to i16*, !dbg !1548\l  %19 = load i16, i16* %18, align 2, !dbg !1548\l  %20 = and i16 %19, 16, !dbg !1549\l  %tobool14 = icmp ne i16 %20, 0, !dbg !1550\l  br label %cleanup, !dbg !1550\l}"];
	Node0x5631231fad70 -> Node0x5631231f89c0;
	Node0x5631231f89c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  %retval.0 = phi i1 [ true, %entry ], [ true, %if.end ], [ true, %land.rhs.i\l... ], [ true, %if.end9 ], [ %tobool14, %lor.rhs ], [ true, %land.lhs.true ],\l... !dbg !1501\l  ret i1 %retval.0, !dbg !1551\l}"];
}
