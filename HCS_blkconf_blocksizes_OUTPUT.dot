digraph "CFG for 'blkconf_blocksizes' function" {
	label="CFG for 'blkconf_blocksizes' function";

	Node0x5645e65e7120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %blocksizes = alloca %struct.BlockSizes, align 4\l  call void @llvm.dbg.value(metadata %struct.BlockConf* %conf, metadata !121,\l... metadata !DIExpression()), !dbg !132\l  call void @llvm.dbg.value(metadata %struct.Error** %errp, metadata !122,\l... metadata !DIExpression()), !dbg !132\l  %blk1 = getelementptr inbounds %struct.BlockConf, %struct.BlockConf* %conf,\l... i64 0, i32 0, !dbg !133\l  %0 = load %struct.BlockBackend*, %struct.BlockBackend** %blk1, align 8, !dbg\l... !133\l  call void @llvm.dbg.value(metadata %struct.BlockBackend* %0, metadata !123,\l... metadata !DIExpression()), !dbg !132\l  %1 = bitcast %struct.BlockSizes* %blocksizes to i8*, !dbg !134\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !134\l  call void @llvm.dbg.declare(metadata %struct.BlockSizes* %blocksizes,\l... metadata !124, metadata !DIExpression()), !dbg !135\l  %call = call i32 @blk_probe_blocksizes(%struct.BlockBackend* %0,\l... %struct.BlockSizes* nonnull %blocksizes) #6, !dbg !136\l  call void @llvm.dbg.value(metadata i32 %call, metadata !130, metadata\l... !DIExpression()), !dbg !132\l  %physical_block_size = getelementptr inbounds %struct.BlockConf,\l... %struct.BlockConf* %conf, i64 0, i32 1, !dbg !137\l  %2 = load i32, i32* %physical_block_size, align 8, !dbg !137\l  %tobool = icmp eq i32 %2, 0, !dbg !139\l  br i1 %tobool, label %if.then, label %if.end6, !dbg !140, !prof !141\l|{<s0>T|<s1>F}}"];
	Node0x5645e65e7120:s0 -> Node0x5645e65f9f90;
	Node0x5645e65e7120:s1 -> Node0x5645e65f9fe0;
	Node0x5645e65f9f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then:                                          \l  %tobool2 = icmp eq i32 %call, 0, !dbg !142\l  br i1 %tobool2, label %if.end6.thread, label %if.else, !dbg !145, !prof !146\l|{<s0>T|<s1>F}}"];
	Node0x5645e65f9f90:s0 -> Node0x5645e6617fd0;
	Node0x5645e65f9f90:s1 -> Node0x5645e65fa650;
	Node0x5645e65fa650 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else:                                          \l  store i32 512, i32* %physical_block_size, align 8, !dbg !147\l  br label %if.end6\l}"];
	Node0x5645e65fa650 -> Node0x5645e65f9fe0;
	Node0x5645e65f9fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end6:                                          \l  %3 = phi i32 [ %2, %entry ], [ 512, %if.else ]\l  %logical_block_size = getelementptr inbounds %struct.BlockConf,\l... %struct.BlockConf* %conf, i64 0, i32 2, !dbg !149\l  %4 = load i32, i32* %logical_block_size, align 4, !dbg !149\l  %tobool7 = icmp eq i32 %4, 0, !dbg !151\l  br i1 %tobool7, label %if.then8, label %if.end15, !dbg !152, !prof !141\l|{<s0>T|<s1>F}}"];
	Node0x5645e65f9fe0:s0 -> Node0x5645e65fe960;
	Node0x5645e65f9fe0:s1 -> Node0x5645e65fe9b0;
	Node0x5645e6617fd0 [shape=record,penwidth=3.0, color="red",label="{if.end6.thread:                                   \l  %phys = getelementptr inbounds %struct.BlockSizes, %struct.BlockSizes*\l... %blocksizes, i64 0, i32 0, !dbg !153\l  %5 = load i32, i32* %phys, align 4, !dbg !153\l  store i32 %5, i32* %physical_block_size, align 8, !dbg !155\l  %logical_block_size68 = getelementptr inbounds %struct.BlockConf,\l... %struct.BlockConf* %conf, i64 0, i32 2, !dbg !149\l  %6 = load i32, i32* %logical_block_size68, align 4, !dbg !149\l  %tobool769 = icmp eq i32 %6, 0, !dbg !151\l  br i1 %tobool769, label %if.then10, label %if.end15, !dbg !152, !prof !141\l|{<s0>T|<s1>F}}"];
	Node0x5645e6617fd0:s0 -> Node0x5645e65ff1a0;
	Node0x5645e6617fd0:s1 -> Node0x5645e65fe9b0;
	Node0x5645e65fe960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then8:                                         \l  %tobool9 = icmp eq i32 %call, 0, !dbg !156\l  br i1 %tobool9, label %if.then10, label %if.else12, !dbg !159, !prof !160\l|{<s0>T|<s1>F}}"];
	Node0x5645e65fe960:s0 -> Node0x5645e65ff1a0;
	Node0x5645e65fe960:s1 -> Node0x5645e65ff280;
	Node0x5645e65ff1a0 [shape=record,penwidth=3.0, color="red",label="{if.then10:                                        \l  %7 = phi i32 [ %3, %if.then8 ], [ %5, %if.end6.thread ]\l  %logical_block_size7174 = phi i32* [ %logical_block_size, %if.then8 ], [\l... %logical_block_size68, %if.end6.thread ]\l  %log = getelementptr inbounds %struct.BlockSizes, %struct.BlockSizes*\l... %blocksizes, i64 0, i32 1, !dbg !161\l  %8 = load i32, i32* %log, align 4, !dbg !161\l  store i32 %8, i32* %logical_block_size7174, align 4, !dbg !163\l  br label %if.end15, !dbg !164\l}"];
	Node0x5645e65ff1a0 -> Node0x5645e65fe9b0;
	Node0x5645e65ff280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else12:                                        \l  store i32 512, i32* %logical_block_size, align 4, !dbg !165\l  br label %if.end15\l}"];
	Node0x5645e65ff280 -> Node0x5645e65fe9b0;
	Node0x5645e65fe9b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end15:                                         \l  %9 = phi i32 [ %5, %if.end6.thread ], [ %3, %if.end6 ], [ %7, %if.then10 ],\l... [ %3, %if.else12 ], !dbg !167\l  %10 = phi i32 [ %6, %if.end6.thread ], [ %4, %if.end6 ], [ %8, %if.then10 ],\l... [ 512, %if.else12 ], !dbg !169\l  %cmp = icmp ugt i32 %10, %9, !dbg !170\l  br i1 %cmp, label %if.then18, label %if.end19, !dbg !171, !prof !146\l|{<s0>T|<s1>F}}"];
	Node0x5645e65fe9b0:s0 -> Node0x5645e66000c0;
	Node0x5645e65fe9b0:s1 -> Node0x5645e6600110;
	Node0x5645e66000c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then18:                                        \l  call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([17 x\l... i8], [17 x i8]* @.str, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([19\l... x i8], [19 x i8]* @__func__.blkconf_blocksizes, i64 0, i64 0), i8*\l... getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0)) #6,\l... !dbg !172\l  br label %cleanup, !dbg !174\l}"];
	Node0x5645e66000c0 -> Node0x5645e6600c30;
	Node0x5645e6600110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end19:                                         \l  %min_io_size = getelementptr inbounds %struct.BlockConf, %struct.BlockConf*\l... %conf, i64 0, i32 3, !dbg !175\l  %11 = load i32, i32* %min_io_size, align 8, !dbg !175\l  %rem = urem i32 %11, %10, !dbg !175\l  %cmp21 = icmp eq i32 %rem, 0, !dbg !175\l  br i1 %cmp21, label %if.end23, label %if.then22, !dbg !177, !prof !141\l|{<s0>T|<s1>F}}"];
	Node0x5645e6600110:s0 -> Node0x5645e65e6790;
	Node0x5645e6600110:s1 -> Node0x5645e6601220;
	Node0x5645e6601220 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then22:                                        \l  call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([17 x\l... i8], [17 x i8]* @.str, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([19\l... x i8], [19 x i8]* @__func__.blkconf_blocksizes, i64 0, i64 0), i8*\l... getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0)) #6,\l... !dbg !178\l  br label %cleanup, !dbg !180\l}"];
	Node0x5645e6601220 -> Node0x5645e6600c30;
	Node0x5645e65e6790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end23:                                         \l  %div = udiv i32 %11, %10, !dbg !181\l  %cmp26 = icmp ugt i32 %div, 65535, !dbg !183\l  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !184, !prof !146\l|{<s0>T|<s1>F}}"];
	Node0x5645e65e6790:s0 -> Node0x5645e6602440;
	Node0x5645e65e6790:s1 -> Node0x5645e66027b0;
	Node0x5645e6602440 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then27:                                        \l  call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([17 x\l... i8], [17 x i8]* @.str, i64 0, i64 0), i32 105, i8* getelementptr inbounds\l... ([19 x i8], [19 x i8]* @__func__.blkconf_blocksizes, i64 0, i64 0), i8*\l... getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i32\l... 65535) #6, !dbg !185\l  br label %cleanup, !dbg !187\l}"];
	Node0x5645e6602440 -> Node0x5645e6600c30;
	Node0x5645e66027b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end28:                                         \l  %opt_io_size = getelementptr inbounds %struct.BlockConf, %struct.BlockConf*\l... %conf, i64 0, i32 4, !dbg !188\l  %12 = load i32, i32* %opt_io_size, align 4, !dbg !188\l  %rem30 = urem i32 %12, %10, !dbg !188\l  %cmp31 = icmp eq i32 %rem30, 0, !dbg !188\l  br i1 %cmp31, label %if.end33, label %if.then32, !dbg !190, !prof !141\l|{<s0>T|<s1>F}}"];
	Node0x5645e66027b0:s0 -> Node0x5645e6604900;
	Node0x5645e66027b0:s1 -> Node0x5645e6604590;
	Node0x5645e6604590 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then32:                                        \l  call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([17 x\l... i8], [17 x i8]* @.str, i64 0, i64 0), i32 111, i8* getelementptr inbounds\l... ([19 x i8], [19 x i8]* @__func__.blkconf_blocksizes, i64 0, i64 0), i8*\l... getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0)) #6,\l... !dbg !191\l  br label %cleanup, !dbg !193\l}"];
	Node0x5645e6604590 -> Node0x5645e6600c30;
	Node0x5645e6604900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end33:                                         \l  %discard_granularity = getelementptr inbounds %struct.BlockConf,\l... %struct.BlockConf* %conf, i64 0, i32 6, !dbg !194\l  %13 = load i32, i32* %discard_granularity, align 4, !dbg !194\l  %cmp34 = icmp eq i32 %13, -1, !dbg !196\l  br i1 %cmp34, label %cleanup, label %land.lhs.true, !dbg !197, !prof !198\l|{<s0>T|<s1>F}}"];
	Node0x5645e6604900:s0 -> Node0x5645e6600c30;
	Node0x5645e6604900:s1 -> Node0x5645e6605790;
	Node0x5645e6605790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{land.lhs.true:                                    \l  %rem37 = urem i32 %13, %10, !dbg !199\l  %cmp38 = icmp eq i32 %rem37, 0, !dbg !199\l  br i1 %cmp38, label %cleanup, label %if.then39, !dbg !200, !prof !201\l|{<s0>T|<s1>F}}"];
	Node0x5645e6605790:s0 -> Node0x5645e6600c30;
	Node0x5645e6605790:s1 -> Node0x5645e66052b0;
	Node0x5645e66052b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then39:                                        \l  call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([17 x\l... i8], [17 x i8]* @.str, i64 0, i64 0), i32 119, i8* getelementptr inbounds\l... ([19 x i8], [19 x i8]* @__func__.blkconf_blocksizes, i64 0, i64 0), i8*\l... getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9, i64 0, i64 0)) #6,\l... !dbg !202\l  br label %cleanup, !dbg !204\l}"];
	Node0x5645e66052b0 -> Node0x5645e6600c30;
	Node0x5645e6600c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  %retval.0 = phi i1 [ false, %if.then18 ], [ false, %if.then27 ], [ false,\l... %if.then39 ], [ false, %if.then32 ], [ false, %if.then22 ], [ true, %if.end33\l... ], [ true, %land.lhs.true ], !dbg !132\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !205\l  ret i1 %retval.0, !dbg !205\l}"];
}
