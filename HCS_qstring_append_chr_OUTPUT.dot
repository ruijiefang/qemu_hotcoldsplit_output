digraph "CFG for 'qstring_append_chr' function" {
	label="CFG for 'qstring_append_chr' function";

	Node0x55e27f4ed6b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.QString* %qstring, metadata !84,\l... metadata !DIExpression()), !dbg !87\l  call void @llvm.dbg.value(metadata i32 %c, metadata !85, metadata\l... !DIExpression()), !dbg !87\l  call void @llvm.dbg.value(metadata %struct.QString* %qstring, metadata !88,\l... metadata !DIExpression()) #16, !dbg !94\l  call void @llvm.dbg.value(metadata i64 1, metadata !93, metadata\l... !DIExpression()) #16, !dbg !94\l  %capacity.i = getelementptr inbounds %struct.QString, %struct.QString*\l... %qstring, i64 0, i32 3, !dbg !96\l  %0 = load i64, i64* %capacity.i, align 8, !dbg !96\l  %length.i = getelementptr inbounds %struct.QString, %struct.QString*\l... %qstring, i64 0, i32 2, !dbg !98\l  %1 = load i64, i64* %length.i, align 8, !dbg !98\l  %add.i = add i64 %1, 1, !dbg !99\l  %cmp.i = icmp ult i64 %0, %add.i, !dbg !100\l  br i1 %cmp.i, label %if.end.i, label\l... %entry.capacity_increase.exit_crit_edge, !dbg !101, !prof !102\l|{<s0>T|<s1>F}}"];
	Node0x55e27f4ed6b0:s0 -> Node0x55e27f610810;
	Node0x55e27f4ed6b0:s1 -> Node0x55e27f4ff1d0;
	Node0x55e27f4ff1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{entry.capacity_increase.exit_crit_edge:           \l  %string.phi.trans.insert = getelementptr inbounds %struct.QString,\l... %struct.QString* %qstring, i64 0, i32 1, !dbg !87\l  %.pre = load i8*, i8** %string.phi.trans.insert, align 8, !dbg !103\l  br label %capacity_increase.exit, !dbg !101\l}"];
	Node0x55e27f4ff1d0 -> Node0x55e27f4effb0;
	Node0x55e27f610810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end.i:                                         \l  %add5.i = add nuw i64 %0, 1, !dbg !104\l  store i64 %add5.i, i64* %capacity.i, align 8, !dbg !104\l  %cmp7.i = icmp sgt i64 %add5.i, -1, !dbg !106\l  br i1 %cmp7.i, label %if.end10.i, label %if.else9.i, !dbg !109, !prof !110\l|{<s0>T|<s1>F}}"];
	Node0x55e27f610810:s0 -> Node0x55e27f610e90;
	Node0x55e27f610810:s1 -> Node0x55e27f610cc0;
	Node0x55e27f610cc0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else9.i:                                       \l  tail call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x\l... i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x\l... i8]* @.str.2, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([42 x i8],\l... [42 x i8]* @__PRETTY_FUNCTION__.capacity_increase, i64 0, i64 0)) #17, !dbg\l... !106\l  unreachable, !dbg !106\l}"];
	Node0x55e27f610e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end10.i:                                       \l  %mul.i = shl nuw i64 %add5.i, 1, !dbg !111\l  store i64 %mul.i, i64* %capacity.i, align 8, !dbg !111\l  %string.i = getelementptr inbounds %struct.QString, %struct.QString*\l... %qstring, i64 0, i32 1, !dbg !112\l  %2 = load i8*, i8** %string.i, align 8, !dbg !112\l  %add13.i = or i64 %mul.i, 1, !dbg !113\l  %call.i = tail call i8* @g_realloc(i8* %2, i64 %add13.i) #16, !dbg !114\l  store i8* %call.i, i8** %string.i, align 8, !dbg !115\l  %.pre8 = load i64, i64* %length.i, align 8, !dbg !116\l  %.pre9 = add i64 %.pre8, 1, !dbg !116\l  br label %capacity_increase.exit, !dbg !117\l}"];
	Node0x55e27f610e90 -> Node0x55e27f4effb0;
	Node0x55e27f4effb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{capacity_increase.exit:                           \l  %inc.pre-phi = phi i64 [ %add.i, %entry.capacity_increase.exit_crit_edge ],\l... [ %.pre9, %if.end10.i ], !dbg !116\l  %3 = phi i64 [ %1, %entry.capacity_increase.exit_crit_edge ], [ %.pre8,\l... %if.end10.i ], !dbg !116\l  %4 = phi i8* [ %.pre, %entry.capacity_increase.exit_crit_edge ], [ %call.i,\l... %if.end10.i ], !dbg !103\l  %conv = trunc i32 %c to i8, !dbg !118\l  %string = getelementptr inbounds %struct.QString, %struct.QString* %qstring,\l... i64 0, i32 1, !dbg !103\l  store i64 %inc.pre-phi, i64* %length.i, align 8, !dbg !116\l  %arrayidx = getelementptr i8, i8* %4, i64 %3, !dbg !119\l  store i8 %conv, i8* %arrayidx, align 1, !dbg !120\l  %5 = load i8*, i8** %string, align 8, !dbg !121\l  %6 = load i64, i64* %length.i, align 8, !dbg !122\l  %arrayidx3 = getelementptr i8, i8* %5, i64 %6, !dbg !123\l  store i8 0, i8* %arrayidx3, align 1, !dbg !124\l  ret void, !dbg !125\l}"];
}
