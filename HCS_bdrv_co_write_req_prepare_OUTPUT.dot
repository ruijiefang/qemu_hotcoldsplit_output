digraph "CFG for 'bdrv_co_write_req_prepare' function" {
	label="CFG for 'bdrv_co_write_req_prepare' function";

	Node0x55cda470e860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %bdi.i = alloca %struct.BlockDriverInfo, align 8\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %child, metadata\l... !2555, metadata !DIExpression()), !dbg !2565\l  call void @llvm.dbg.value(metadata i64 %offset, metadata !2556, metadata\l... !DIExpression()), !dbg !2565\l  call void @llvm.dbg.value(metadata i64 %bytes, metadata !2557, metadata\l... !DIExpression()), !dbg !2565\l  call void @llvm.dbg.value(metadata %struct.BdrvTrackedRequest* %req,\l... metadata !2558, metadata !DIExpression()), !dbg !2565\l  call void @llvm.dbg.value(metadata i32 %flags, metadata !2559, metadata\l... !DIExpression()), !dbg !2565\l  %bs1 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %child,\l... i64 0, i32 0, !dbg !2566\l  %0 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs1, align\l... 8, !dbg !2566\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %0, metadata\l... !2560, metadata !DIExpression()), !dbg !2565\l  %add = add i64 %bytes, %offset, !dbg !2567\l  %sub = add i64 %add, 511, !dbg !2567\l  %div = lshr i64 %sub, 9, !dbg !2567\l  call void @llvm.dbg.value(metadata i64 %div, metadata !2562, metadata\l... !DIExpression()), !dbg !2565\l  %read_only = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %0, i64 0, i32 1, !dbg !2568\l  %1 = load i8, i8* %read_only, align 4, !dbg !2568, !range !2570\l  %tobool = icmp eq i8 %1, 0, !dbg !2568\l  br i1 %tobool, label %if.end, label %cleanup, !dbg !2571, !prof !2572\l|{<s0>T|<s1>F}}"];
	Node0x55cda470e860:s0 -> Node0x55cda4713070;
	Node0x55cda470e860:s1 -> Node0x55cda47114c0;
	Node0x55cda4713070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %open_flags = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %0, i64 0, i32 0, !dbg !2573\l  %2 = load i32, i32* %open_flags, align 8, !dbg !2573\l  %and = and i32 %2, 2048, !dbg !2573\l  %tobool3 = icmp eq i32 %and, 0, !dbg !2573\l  br i1 %tobool3, label %if.end5, label %if.else, !dbg !2576, !prof !2572\l|{<s0>T|<s1>F}}"];
	Node0x55cda4713070:s0 -> Node0x55cda4713cf0;
	Node0x55cda4713070:s1 -> Node0x55cda4713d60;
	Node0x55cda4713d60 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x\l... i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x\l... i8]* @.str.1, i64 0, i64 0), i32 1890, i8* getelementptr inbounds ([89 x i8],\l... [89 x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0))\l... #16, !dbg !2573\l  unreachable, !dbg !2573\l}"];
	Node0x55cda4713cf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end5:                                          \l  %and7 = and i32 %2, 65536, !dbg !2577\l  %cmp = icmp eq i32 %and7, 0, !dbg !2577\l  br i1 %cmp, label %if.end10, label %if.else9, !dbg !2580, !prof !2572\l|{<s0>T|<s1>F}}"];
	Node0x55cda4713cf0:s0 -> Node0x55cda4714940;
	Node0x55cda4713cf0:s1 -> Node0x55cda47149b0;
	Node0x55cda47149b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else9:                                         \l  tail call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x\l... i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x\l... i8]* @.str.1, i64 0, i64 0), i32 1891, i8* getelementptr inbounds ([89 x i8],\l... [89 x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0))\l... #16, !dbg !2577\l  unreachable, !dbg !2577\l}"];
	Node0x55cda4714940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end10:                                         \l  %tobool12 = icmp ugt i32 %flags, 1023, !dbg !2581\l  br i1 %tobool12, label %if.else14, label %if.end15, !dbg !2584, !prof !2585\l|{<s0>T|<s1>F}}"];
	Node0x55cda4714940:s0 -> Node0x55cda47152e0;
	Node0x55cda4714940:s1 -> Node0x55cda4715290;
	Node0x55cda47152e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else14:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x\l... i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x\l... i8]* @.str.1, i64 0, i64 0), i32 1892, i8* getelementptr inbounds ([89 x i8],\l... [89 x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0))\l... #16, !dbg !2581\l  unreachable, !dbg !2581\l}"];
	Node0x55cda4715290 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end15:                                         \l  %3 = trunc i32 %flags to i8, !dbg !2586\l  %tobool17 = icmp slt i8 %3, 0, !dbg !2586\l  br i1 %tobool17, label %if.then18, label %if.else30, !dbg !2588, !prof !2585\l|{<s0>T|<s1>F}}"];
	Node0x55cda4715290:s0 -> Node0x55cda4715850;
	Node0x55cda4715290:s1 -> Node0x55cda4715990;
	Node0x55cda4715850 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then18:                                        \l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %0, metadata\l... !2589, metadata !DIExpression()) #17, !dbg !2594\l  %4 = bitcast %struct.BlockDriverInfo* %bdi.i to i8*, !dbg !2597\l  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17, !dbg !2597\l  call void @llvm.dbg.declare(metadata %struct.BlockDriverInfo* %bdi.i,\l... metadata !2592, metadata !DIExpression()) #17, !dbg !2598\l  %call.i = call i32 @bdrv_get_info(%struct.BlockDriverState* nonnull %0,\l... %struct.BlockDriverInfo* nonnull %bdi.i) #17, !dbg !2599\l  call void @llvm.dbg.value(metadata i32 %call.i, metadata !2593, metadata\l... !DIExpression()) #17, !dbg !2594\l  %cmp.i = icmp slt i32 %call.i, 0, !dbg !2600\l  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i, !dbg !2602\l|{<s0>T|<s1>F}}"];
	Node0x55cda4715850:s0 -> Node0x55cda4611940;
	Node0x55cda4715850:s1 -> Node0x55cda3d51b50;
	Node0x55cda3d51b50 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false.i:                                  \l  %cluster_size.i = getelementptr inbounds %struct.BlockDriverInfo,\l... %struct.BlockDriverInfo* %bdi.i, i64 0, i32 0, !dbg !2603\l  %5 = load i32, i32* %cluster_size.i, align 8, !dbg !2603\l  %cmp1.i = icmp eq i32 %5, 0, !dbg !2604\l  br i1 %cmp1.i, label %if.then.i, label %bdrv_get_cluster_size.exit, !dbg\l... !2605\l|{<s0>T|<s1>F}}"];
	Node0x55cda3d51b50:s0 -> Node0x55cda4611940;
	Node0x55cda3d51b50:s1 -> Node0x55cda43c49e0;
	Node0x55cda4611940 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then.i:                                        \l  %request_alignment.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %0, i64 0, i32 20, i32 0, !dbg !2606\l  %6 = load i32, i32* %request_alignment.i, align 8, !dbg !2606\l  br label %bdrv_get_cluster_size.exit, !dbg !2608\l}"];
	Node0x55cda4611940 -> Node0x55cda43c49e0;
	Node0x55cda43c49e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{bdrv_get_cluster_size.exit:                       \l  %retval.0.i = phi i32 [ %6, %if.then.i ], [ %5, %lor.lhs.false.i ], !dbg\l... !2609\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17, !dbg !2610\l  %conv = sext i32 %retval.0.i to i64, !dbg !2611\l  %call19 = call zeroext i1\l... @bdrv_mark_request_serialising(%struct.BdrvTrackedRequest* %req, i64 %conv),\l... !dbg !2612\l  call void @llvm.dbg.value(metadata i1 %call19, metadata !2561, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2565\l  br i1 %call19, label %lor.lhs.false, label %if.end32, !dbg !2613\l|{<s0>T|<s1>F}}"];
	Node0x55cda43c49e0:s0 -> Node0x55cda47167c0;
	Node0x55cda43c49e0:s1 -> Node0x55cda4715940;
	Node0x55cda47167c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false:                                    \l  %offset21 = getelementptr inbounds %struct.BdrvTrackedRequest,\l... %struct.BdrvTrackedRequest* %req, i64 0, i32 1, !dbg !2613\l  %7 = load i64, i64* %offset21, align 8, !dbg !2613\l  %overlap_offset = getelementptr inbounds %struct.BdrvTrackedRequest,\l... %struct.BdrvTrackedRequest* %req, i64 0, i32 5, !dbg !2613\l  %8 = load i64, i64* %overlap_offset, align 8, !dbg !2613\l  %cmp22 = icmp eq i64 %7, %8, !dbg !2613\l  br i1 %cmp22, label %land.lhs.true, label %if.else28, !dbg !2613\l|{<s0>T|<s1>F}}"];
	Node0x55cda47167c0:s0 -> Node0x55cda4716a30;
	Node0x55cda47167c0:s1 -> Node0x55cda4716770;
	Node0x55cda4716a30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true:                                    \l  %bytes24 = getelementptr inbounds %struct.BdrvTrackedRequest,\l... %struct.BdrvTrackedRequest* %req, i64 0, i32 2, !dbg !2613\l  %9 = load i64, i64* %bytes24, align 8, !dbg !2613\l  %overlap_bytes = getelementptr inbounds %struct.BdrvTrackedRequest,\l... %struct.BdrvTrackedRequest* %req, i64 0, i32 6, !dbg !2613\l  %10 = load i64, i64* %overlap_bytes, align 8, !dbg !2613\l  %cmp25 = icmp eq i64 %9, %10, !dbg !2613\l  br i1 %cmp25, label %if.end32, label %if.else28, !dbg !2616\l|{<s0>T|<s1>F}}"];
	Node0x55cda4716a30:s0 -> Node0x55cda4715940;
	Node0x55cda4716a30:s1 -> Node0x55cda4716770;
	Node0x55cda4716770 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else28:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([84 x i8], [84 x i8]*\l... @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.1, i64 0, i64 0), i32 1903, i8* getelementptr inbounds ([89 x i8], [89\l... x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0)) #16,\l... !dbg !2613\l  unreachable, !dbg !2613\l}"];
	Node0x55cda4715990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else30:                                        \l  call void @llvm.dbg.value(metadata %struct.BdrvTrackedRequest* %req,\l... metadata !2617, metadata !DIExpression()) #17, !dbg !2624\l  %bs1.i = getelementptr inbounds %struct.BdrvTrackedRequest,\l... %struct.BdrvTrackedRequest* %req, i64 0, i32 0, !dbg !2627\l  %11 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs1.i,\l... align 8, !dbg !2627\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %11, metadata\l... !2622, metadata !DIExpression()) #17, !dbg !2624\l  call void @llvm.dbg.value(metadata i8 0, metadata !2623, metadata\l... !DIExpression()) #17, !dbg !2624\l  %serialising_in_flight.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %11, i64 0, i32 46, !dbg !2628\l  %12 = load atomic i32, i32* %serialising_in_flight.i monotonic, align 4,\l... !dbg !2628\l  %tobool.i = icmp eq i32 %12, 0, !dbg !2631\l  br i1 %tobool.i, label %if.end32, label %if.end.i, !dbg !2632, !prof !2633\l|{<s0>T|<s1>F}}"];
	Node0x55cda4715990:s0 -> Node0x55cda4715940;
	Node0x55cda4715990:s1 -> Node0x55cda429f910;
	Node0x55cda429f910 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end.i:                                         \l  %reqs_lock.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %11, i64 0, i32 52, !dbg !2634\l  tail call void @qemu_co_mutex_lock(%struct.CoMutex* nonnull %reqs_lock.i)\l... #17, !dbg !2635\l  %call.i107 = tail call fastcc zeroext i1\l... @bdrv_wait_serialising_requests_locked(%struct.BlockDriverState* %11,\l... %struct.BdrvTrackedRequest* nonnull %req) #17, !dbg !2636\l  call void @llvm.dbg.value(metadata i1 %call.i107, metadata !2623, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)) #17, !dbg !2624\l  tail call void @qemu_co_mutex_unlock(%struct.CoMutex* nonnull %reqs_lock.i)\l... #17, !dbg !2637\l  br label %if.end32, !dbg !2638\l}"];
	Node0x55cda429f910 -> Node0x55cda4715940;
	Node0x55cda4715940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end32:                                         \l  %overlap_offset33 = getelementptr inbounds %struct.BdrvTrackedRequest,\l... %struct.BdrvTrackedRequest* %req, i64 0, i32 5, !dbg !2639\l  %13 = load i64, i64* %overlap_offset33, align 8, !dbg !2639\l  %cmp34 = icmp sgt i64 %13, %offset, !dbg !2639\l  br i1 %cmp34, label %if.else37, label %if.end38, !dbg !2642, !prof !2585\l|{<s0>T|<s1>F}}"];
	Node0x55cda4715940:s0 -> Node0x55cda4717ee0;
	Node0x55cda4715940:s1 -> Node0x55cda4717e90;
	Node0x55cda4717ee0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else37:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]*\l... @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.1, i64 0, i64 0), i32 1908, i8* getelementptr inbounds ([89 x i8], [89\l... x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0)) #16,\l... !dbg !2639\l  unreachable, !dbg !2639\l}"];
	Node0x55cda4717e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end38:                                         \l  %overlap_bytes41 = getelementptr inbounds %struct.BdrvTrackedRequest,\l... %struct.BdrvTrackedRequest* %req, i64 0, i32 6, !dbg !2643\l  %14 = load i64, i64* %overlap_bytes41, align 8, !dbg !2643\l  %add42 = add i64 %14, %13, !dbg !2643\l  %cmp43 = icmp ugt i64 %add, %add42, !dbg !2643\l  br i1 %cmp43, label %if.else46, label %if.end47, !dbg !2646, !prof !2585\l|{<s0>T|<s1>F}}"];
	Node0x55cda4717e90:s0 -> Node0x55cda47188a0;
	Node0x55cda4717e90:s1 -> Node0x55cda4718850;
	Node0x55cda47188a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else46:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([59 x i8], [59 x i8]*\l... @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.1, i64 0, i64 0), i32 1909, i8* getelementptr inbounds ([89 x i8], [89\l... x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0)) #16,\l... !dbg !2643\l  unreachable, !dbg !2643\l}"];
	Node0x55cda4718850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end47:                                         \l  %total_sectors = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %0, i64 0, i32 37, !dbg !2647\l  %15 = load i64, i64* %total_sectors, align 8, !dbg !2647\l  %cmp48 = icmp sgt i64 %div, %15, !dbg !2647\l  br i1 %cmp48, label %lor.lhs.false50, label %if.end55, !dbg !2647, !prof\l... !2585\l|{<s0>T|<s1>F}}"];
	Node0x55cda4718850:s0 -> Node0x55cda4719670;
	Node0x55cda4718850:s1 -> Node0x55cda47195d0;
	Node0x55cda4719670 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false50:                                  \l  %perm = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %child,\l... i64 0, i32 5, !dbg !2647\l  %16 = load i64, i64* %perm, align 8, !dbg !2647\l  %and51 = and i64 %16, 8, !dbg !2647\l  %tobool52 = icmp eq i64 %and51, 0, !dbg !2647\l  br i1 %tobool52, label %if.else54, label %if.end55, !dbg !2650\l|{<s0>T|<s1>F}}"];
	Node0x55cda4719670:s0 -> Node0x55cda4719620;
	Node0x55cda4719670:s1 -> Node0x55cda47195d0;
	Node0x55cda4719620 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else54:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([65 x i8], [65 x i8]*\l... @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.1, i64 0, i64 0), i32 1910, i8* getelementptr inbounds ([89 x i8], [89\l... x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0)) #16,\l... !dbg !2647\l  unreachable, !dbg !2647\l}"];
	Node0x55cda47195d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end55:                                         \l  %type = getelementptr inbounds %struct.BdrvTrackedRequest,\l... %struct.BdrvTrackedRequest* %req, i64 0, i32 3, !dbg !2651\l  %17 = load i32, i32* %type, align 8, !dbg !2651\l  switch i32 %17, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb\l    i32 3, label %sw.bb74\l  ], !dbg !2652, !prof !2653\l|{<s0>def|<s1>1|<s2>2|<s3>3}}"];
	Node0x55cda47195d0:s0 -> Node0x55cda471a860;
	Node0x55cda47195d0:s1 -> Node0x55cda471ac70;
	Node0x55cda47195d0:s2 -> Node0x55cda471ac70;
	Node0x55cda47195d0:s3 -> Node0x55cda471ce40;
	Node0x55cda471ac70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{sw.bb:                                            \l  %and56 = and i32 %flags, 64, !dbg !2654\l  %tobool57 = icmp eq i32 %and56, 0, !dbg !2654\l  %perm59 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %child, i64 0, i32 5, !dbg !2657\l  %18 = load i64, i64* %perm59, align 8, !dbg !2657\l  br i1 %tobool57, label %if.else65, label %if.then58, !dbg !2658, !prof !2572\l|{<s0>T|<s1>F}}"];
	Node0x55cda471ac70:s0 -> Node0x55cda471ae40;
	Node0x55cda471ac70:s1 -> Node0x55cda471ad60;
	Node0x55cda471ad60 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then58:                                        \l  %and60 = and i64 %18, 6, !dbg !2659\l  %tobool61 = icmp eq i64 %and60, 0, !dbg !2659\l  br i1 %tobool61, label %if.else63, label %if.end72, !dbg !2663\l|{<s0>T|<s1>F}}"];
	Node0x55cda471ad60:s0 -> Node0x55cda471b380;
	Node0x55cda471ad60:s1 -> Node0x55cda471add0;
	Node0x55cda471b380 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else63:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([58 x i8], [58 x i8]*\l... @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.1, i64 0, i64 0), i32 1916, i8* getelementptr inbounds ([89 x i8], [89\l... x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0)) #16,\l... !dbg !2659\l  unreachable, !dbg !2659\l}"];
	Node0x55cda471ae40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else65:                                        \l  %and67 = and i64 %18, 2, !dbg !2664\l  %tobool68 = icmp eq i64 %and67, 0, !dbg !2664\l  br i1 %tobool68, label %if.else70, label %if.end72, !dbg !2668, !prof !2585\l|{<s0>T|<s1>F}}"];
	Node0x55cda471ae40:s0 -> Node0x55cda471c5e0;
	Node0x55cda471ae40:s1 -> Node0x55cda471add0;
	Node0x55cda471c5e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else70:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]*\l... @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.1, i64 0, i64 0), i32 1918, i8* getelementptr inbounds ([89 x i8], [89\l... x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0)) #16,\l... !dbg !2664\l  unreachable, !dbg !2664\l}"];
	Node0x55cda471add0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end72:                                         \l  %before_write_notifiers = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %0, i64 0, i32 38, !dbg !2669\l  %19 = bitcast %struct.BdrvTrackedRequest* %req to i8*, !dbg !2670\l  %call73 = call i32\l... @notifier_with_return_list_notify(%struct.NotifierWithReturnList* nonnull\l... %before_write_notifiers, i8* %19) #17, !dbg !2671\l  br label %cleanup, !dbg !2672\l}"];
	Node0x55cda471add0 -> Node0x55cda47114c0;
	Node0x55cda471ce40 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{sw.bb74:                                          \l  %perm75 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %child, i64 0, i32 5, !dbg !2673\l  %20 = load i64, i64* %perm75, align 8, !dbg !2673\l  %and76 = and i64 %20, 8, !dbg !2673\l  %tobool77 = icmp eq i64 %and76, 0, !dbg !2673\l  br i1 %tobool77, label %if.else79, label %cleanup, !dbg !2676\l|{<s0>T|<s1>F}}"];
	Node0x55cda471ce40:s0 -> Node0x55cda471e4d0;
	Node0x55cda471ce40:s1 -> Node0x55cda47114c0;
	Node0x55cda471e4d0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else79:                                        \l  call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x i8]*\l... @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]*\l... @.str.1, i64 0, i64 0), i32 1923, i8* getelementptr inbounds ([89 x i8], [89\l... x i8]* @__PRETTY_FUNCTION__.bdrv_co_write_req_prepare, i64 0, i64 0)) #16,\l... !dbg !2673\l  unreachable, !dbg !2673\l}"];
	Node0x55cda471a860 [shape=record,penwidth=3.0, color="red",label="{sw.default:                                       \l  call void @abort() #16, !dbg !2677\l  unreachable, !dbg !2677\l}"];
	Node0x55cda47114c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  %retval.0 = phi i32 [ %call73, %if.end72 ], [ -1, %entry ], [ 0, %sw.bb74 ],\l... !dbg !2565\l  ret i32 %retval.0, !dbg !2678\l}"];
}
