digraph "CFG for 'bmdma_addr_write' function" {
	label="CFG for 'bmdma_addr_write' function";

	Node0x558923b7d6a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %_now.i.i = alloca %struct.timeval, align 8\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1429, metadata\l... !DIExpression()), !dbg !1438\l  call void @llvm.dbg.value(metadata i64 %addr, metadata !1430, metadata\l... !DIExpression()), !dbg !1438\l  call void @llvm.dbg.value(metadata i64 %data, metadata !1431, metadata\l... !DIExpression()), !dbg !1438\l  call void @llvm.dbg.value(metadata i32 %width, metadata !1432, metadata\l... !DIExpression()), !dbg !1438\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1433, metadata\l... !DIExpression()), !dbg !1438\l  %addr.tr = trunc i64 %addr to i32, !dbg !1439\l  %conv = shl i32 %addr.tr, 3, !dbg !1439\l  call void @llvm.dbg.value(metadata i32 %conv, metadata !1434, metadata\l... !DIExpression()), !dbg !1438\l  %mul1 = shl i32 %width, 3, !dbg !1440\l  %sh_prom = zext i32 %mul1 to i64, !dbg !1441\l  %notmask = shl nsw i64 -1, %sh_prom, !dbg !1442\l  %0 = trunc i64 %notmask to i32, !dbg !1443\l  %conv2 = xor i32 %0, -1, !dbg !1443\l  call void @llvm.dbg.value(metadata i32 %conv2, metadata !1435, metadata\l... !DIExpression()), !dbg !1438\l  call void @llvm.dbg.value(metadata i64 %data, metadata !1444, metadata\l... !DIExpression()) #14, !dbg !1450\l  call void @llvm.dbg.value(metadata i64 %data, metadata !1452, metadata\l... !DIExpression()) #14, !dbg !1465\l  %1 = load i32, i32* @trace_events_enabled_count, align 4, !dbg !1469\l  %tobool.i.i = icmp eq i32 %1, 0, !dbg !1469\l  %2 = load i16, i16* @_TRACE_BMDMA_ADDR_WRITE_DSTATE, align 2, !dbg !1469\l  %tobool4.i.i = icmp eq i16 %2, 0, !dbg !1469\l  %or.cond.i.i = or i1 %tobool.i.i, %tobool4.i.i, !dbg !1469\l  br i1 %or.cond.i.i, label %trace_bmdma_addr_write.exit, label\l... %land.lhs.true5.i.i, !dbg !1469, !prof !1470, !misexpect !1471\l|{<s0>T|<s1>F}}"];
	Node0x558923b7d6a0:s0 -> Node0x558923b8f960;
	Node0x558923b7d6a0:s1 -> Node0x558923bb14e0;
	Node0x558923bb14e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true5.i.i:                               \l  call void @llvm.dbg.value(metadata i32 32768, metadata !1472, metadata\l... !DIExpression()) #14, !dbg !1478\l  %3 = load i32, i32* @qemu_loglevel, align 4, !dbg !1480\l  %4 = trunc i32 %3 to i16, !dbg !1481\l  %cmp.i.i.i = icmp slt i16 %4, 0, !dbg !1481\l  br i1 %cmp.i.i.i, label %if.then.i.i, label %trace_bmdma_addr_write.exit,\l... !dbg !1482\l|{<s0>T|<s1>F}}"];
	Node0x558923bb14e0:s0 -> Node0x5589235b0660;
	Node0x558923bb14e0:s1 -> Node0x558923b8f960;
	Node0x5589235b0660 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then.i.i:                                      \l  %5 = bitcast %struct.timeval* %_now.i.i to i8*, !dbg !1483\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14, !dbg !1483\l  call void @llvm.dbg.declare(metadata %struct.timeval* %_now.i.i, metadata\l... !1455, metadata !DIExpression()) #14, !dbg !1484\l  %call7.i.i = call i32 @gettimeofday(%struct.timeval* nonnull %_now.i.i,\l... %struct.timezone* null) #14, !dbg !1485\l  %call8.i.i = tail call i32 @qemu_get_thread_id() #14, !dbg !1486\l  %tv_sec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval*\l... %_now.i.i, i64 0, i32 0, !dbg !1487\l  %6 = load i64, i64* %tv_sec.i.i, align 8, !dbg !1487\l  %tv_usec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval*\l... %_now.i.i, i64 0, i32 1, !dbg !1488\l  %7 = load i64, i64* %tv_usec.i.i, align 8, !dbg !1488\l  %call9.i.i = tail call i32 (i8*, ...) @qemu_log(i8* getelementptr inbounds\l... ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0), i32 %call8.i.i, i64 %6, i64\l... %7, i64 %data) #14, !dbg !1489\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14, !dbg !1490\l  br label %trace_bmdma_addr_write.exit, !dbg !1491\l}"];
	Node0x5589235b0660 -> Node0x558923b8f960;
	Node0x558923b8f960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{trace_bmdma_addr_write.exit:                      \l  %shl3 = shl i32 %conv2, %conv, !dbg !1492\l  %neg = xor i32 %shl3, -1, !dbg !1493\l  %addr4 = getelementptr inbounds i8, i8* %opaque, i64 60, !dbg !1494\l  %8 = bitcast i8* %addr4 to i32*, !dbg !1494\l  %9 = load i32, i32* %8, align 4, !dbg !1495\l  %and = and i32 %9, %neg, !dbg !1495\l  %conv5 = zext i32 %conv2 to i64, !dbg !1496\l  %and6 = and i64 %conv5, %data, !dbg !1497\l  %sh_prom7 = zext i32 %conv to i64, !dbg !1498\l  %shl8 = shl i64 %and6, %sh_prom7, !dbg !1498\l  %10 = trunc i64 %shl8 to i32, !dbg !1499\l  %11 = and i32 %10, -4, !dbg !1499\l  %conv12 = or i32 %and, %11, !dbg !1499\l  store i32 %conv12, i32* %8, align 4, !dbg !1499\l  ret void, !dbg !1500\l}"];
}
