digraph "CFG for 'serial_ioport_read' function" {
	label="CFG for 'serial_ioport_read' function";

	Node0x5588d40adc30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %_now.i.i = alloca %struct.timeval, align 8\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !964, metadata\l... !DIExpression()), !dbg !971\l  call void @llvm.dbg.value(metadata i64 %addr, metadata !965, metadata\l... !DIExpression()), !dbg !971\l  call void @llvm.dbg.value(metadata i32 %size, metadata !966, metadata\l... !DIExpression()), !dbg !971\l  %0 = bitcast i8* %opaque to %struct.SerialState*, !dbg !972\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !967,\l... metadata !DIExpression()), !dbg !971\l  %and = and i64 %addr, 7, !dbg !973\l  call void @llvm.dbg.value(metadata i64 %and, metadata !965, metadata\l... !DIExpression()), !dbg !971\l  switch i64 %and, label %sw.bb [\l    i64 7, label %sw.bb106\l    i64 1, label %sw.bb33\l    i64 2, label %sw.bb45\l    i64 3, label %sw.bb52\l    i64 4, label %sw.bb55\l    i64 5, label %sw.bb58\l    i64 6, label %sw.bb71\l  ], !dbg !974, !prof !975\l|{<s0>def|<s1>7|<s2>1|<s3>2|<s4>3|<s5>4|<s6>5|<s7>6}}"];
	Node0x5588d40adc30:s0 -> Node0x5588d40b9c90;
	Node0x5588d40adc30:s1 -> Node0x5588d40cbc20;
	Node0x5588d40adc30:s2 -> Node0x5588d40bff30;
	Node0x5588d40adc30:s3 -> Node0x5588d40c0e10;
	Node0x5588d40adc30:s4 -> Node0x5588d407a3d0;
	Node0x5588d40adc30:s5 -> Node0x5588d407a820;
	Node0x5588d40adc30:s6 -> Node0x5588d40bd4d0;
	Node0x5588d40adc30:s7 -> Node0x5588d407c820;
	Node0x5588d40b9c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{sw.bb:                                            \l  %1 = getelementptr inbounds i8, i8* %opaque, i64 143, !dbg !976\l  %2 = load i8, i8* %1, align 1, !dbg !976\l  %tobool = icmp slt i8 %2, 0, !dbg !979\l  br i1 %tobool, label %if.then, label %if.else, !dbg !980, !prof !981\l|{<s0>T|<s1>F}}"];
	Node0x5588d40b9c90:s0 -> Node0x5588d40b9dd0;
	Node0x5588d40b9c90:s1 -> Node0x5588d40b9eb0;
	Node0x5588d40b9dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.then:                                          \l  %divider = getelementptr inbounds i8, i8* %opaque, i64 136, !dbg !982\l  %3 = bitcast i8* %divider to i16*, !dbg !982\l  %4 = load i16, i16* %3, align 8, !dbg !982\l  %5 = and i16 %4, 255, !dbg !984\l  %and3 = zext i16 %5 to i32, !dbg !984\l  call void @llvm.dbg.value(metadata i32 %and3, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  br label %sw.epilog, !dbg !985\l}"];
	Node0x5588d40b9dd0 -> Node0x5588d40b9600;
	Node0x5588d40b9eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.else:                                          \l  %6 = getelementptr inbounds i8, i8* %opaque, i64 148, !dbg !986\l  %7 = load i8, i8* %6, align 4, !dbg !986\l  %8 = and i8 %7, 1, !dbg !989\l  %tobool6 = icmp eq i8 %8, 0, !dbg !989\l  br i1 %tobool6, label %if.else20, label %if.then7, !dbg !990, !prof !991\l|{<s0>T|<s1>F}}"];
	Node0x5588d40b9eb0:s0 -> Node0x5588d40bac50;
	Node0x5588d40b9eb0:s1 -> Node0x5588d40bab70;
	Node0x5588d40bab70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.then7:                                         \l  %recv_fifo = getelementptr inbounds i8, i8* %opaque, i64 256, !dbg !992\l  %9 = bitcast i8* %recv_fifo to %struct.Fifo8*, !dbg !992\l  %call = tail call zeroext i1 @fifo8_is_empty(%struct.Fifo8* nonnull %9) #14,\l... !dbg !994\l  br i1 %call, label %cond.end, label %cond.false, !dbg !994, !prof !995\l|{<s0>T|<s1>F}}"];
	Node0x5588d40bab70:s0 -> Node0x5588d40bb5a0;
	Node0x5588d40bab70:s1 -> Node0x5588d40bb520;
	Node0x5588d40bb520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{cond.false:                                       \l  %call10 = tail call zeroext i8 @fifo8_pop(%struct.Fifo8* nonnull %9) #14,\l... !dbg !996\l  %conv11 = zext i8 %call10 to i32, !dbg !996\l  br label %cond.end, !dbg !994\l}"];
	Node0x5588d40bb520 -> Node0x5588d40bb5a0;
	Node0x5588d40bb5a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{cond.end:                                         \l  %cond = phi i32 [ %conv11, %cond.false ], [ 0, %if.then7 ], !dbg !994\l  call void @llvm.dbg.value(metadata i32 %cond, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  %num = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !997\l  %10 = bitcast i8* %num to i32*, !dbg !997\l  %11 = load i32, i32* %10, align 16, !dbg !997\l  %cmp = icmp eq i32 %11, 0, !dbg !999\l  br i1 %cmp, label %if.then14, label %if.else18, !dbg !1000, !prof !1001\l|{<s0>T|<s1>F}}"];
	Node0x5588d40bb5a0:s0 -> Node0x5588d40bbfe0;
	Node0x5588d40bb5a0:s1 -> Node0x5588d40bc0c0;
	Node0x5588d40bbfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.then14:                                        \l  %12 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1002\l  %13 = load i8, i8* %12, align 1, !dbg !1004\l  %14 = and i8 %13, -18, !dbg !1004\l  store i8 %14, i8* %12, align 1, !dbg !1004\l  br label %if.end, !dbg !1005\l}"];
	Node0x5588d40bbfe0 -> Node0x5588d40bc050;
	Node0x5588d40bc0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.else18:                                        \l  %fifo_timeout_timer = getelementptr inbounds i8, i8* %opaque, i64 312, !dbg\l... !1006\l  %15 = bitcast i8* %fifo_timeout_timer to %struct.QEMUTimer**, !dbg !1006\l  %16 = load %struct.QEMUTimer*, %struct.QEMUTimer** %15, align 8, !dbg !1006\l  %call19 = tail call i64 @qemu_clock_get_ns(i32 1) #14, !dbg !1008\l  %char_transmit_time = getelementptr inbounds i8, i8* %opaque, i64 328, !dbg\l... !1009\l  %17 = bitcast i8* %char_transmit_time to i64*, !dbg !1009\l  %18 = load i64, i64* %17, align 8, !dbg !1009\l  %mul = shl i64 %18, 2, !dbg !1010\l  %add = add i64 %mul, %call19, !dbg !1011\l  tail call void @timer_mod(%struct.QEMUTimer* %16, i64 %add) #14, !dbg !1012\l  br label %if.end\l}"];
	Node0x5588d40bc0c0 -> Node0x5588d40bc050;
	Node0x5588d40bc050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.end:                                           \l  %timeout_ipending = getelementptr inbounds i8, i8* %opaque, i64 320, !dbg\l... !1013\l  %19 = bitcast i8* %timeout_ipending to i32*, !dbg !1013\l  store i32 0, i32* %19, align 16, !dbg !1014\l  br label %if.end26, !dbg !1015\l}"];
	Node0x5588d40bc050 -> Node0x5588d40babe0;
	Node0x5588d40bac50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{if.else20:                                        \l  %20 = getelementptr inbounds i8, i8* %opaque, i64 138, !dbg !1016\l  %21 = load i8, i8* %20, align 2, !dbg !1016\l  %conv21 = zext i8 %21 to i32, !dbg !1018\l  call void @llvm.dbg.value(metadata i32 %conv21, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  %22 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1019\l  %23 = load i8, i8* %22, align 1, !dbg !1020\l  %24 = and i8 %23, -18, !dbg !1020\l  store i8 %24, i8* %22, align 1, !dbg !1020\l  br label %if.end26\l}"];
	Node0x5588d40bac50 -> Node0x5588d40babe0;
	Node0x5588d40babe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.end26:                                         \l  %ret.0 = phi i32 [ %cond, %if.end ], [ %conv21, %if.else20 ], !dbg !1021\l  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1022,\l... metadata !DIExpression()) #14, !dbg !1028\l  call void @llvm.dbg.value(metadata i8 1, metadata !1027, metadata\l... !DIExpression()) #14, !dbg !1028\l  %25 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1030\l  %26 = load i8, i8* %25, align 1, !dbg !1030\l  %27 = and i8 %26, 4, !dbg !1032\l  %tobool.i = icmp eq i8 %27, 0, !dbg !1032\l  br i1 %tobool.i, label %if.else.i, label %land.lhs.true.i, !dbg !1033, !prof\l... !1034\l|{<s0>T|<s1>F}}"];
	Node0x5588d40babe0:s0 -> Node0x5588d422b350;
	Node0x5588d40babe0:s1 -> Node0x5588d40d60f0;
	Node0x5588d40d60f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{land.lhs.true.i:                                  \l  %28 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1035\l  %29 = load i8, i8* %28, align 1, !dbg !1035\l  %30 = and i8 %29, 30, !dbg !1036\l  %tobool3.i = icmp eq i8 %30, 0, !dbg !1036\l  br i1 %tobool3.i, label %if.else.i, label %if.end49.i, !dbg !1037, !prof\l... !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d40d60f0:s0 -> Node0x5588d422b350;
	Node0x5588d40d60f0:s1 -> Node0x5588d41307a0;
	Node0x5588d422b350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.else.i:                                        \l  %31 = and i8 %26, 1, !dbg !1039\l  %tobool7.i = icmp eq i8 %31, 0, !dbg !1039\l  br i1 %tobool7.i, label %if.else28.i, label %land.lhs.true8.i, !dbg !1041,\l... !prof !1034\l|{<s0>T|<s1>F}}"];
	Node0x5588d422b350:s0 -> Node0x5588d4258270;
	Node0x5588d422b350:s1 -> Node0x5588d425fba0;
	Node0x5588d425fba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{land.lhs.true8.i:                                 \l  %timeout_ipending.i = getelementptr inbounds i8, i8* %opaque, i64 320, !dbg\l... !1042\l  %32 = bitcast i8* %timeout_ipending.i to i32*, !dbg !1042\l  %33 = load i32, i32* %32, align 16, !dbg !1042\l  %tobool9.i = icmp eq i32 %33, 0, !dbg !1043\l  br i1 %tobool9.i, label %land.lhs.true16.i, label %if.end49.i, !dbg !1044,\l... !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d425fba0:s0 -> Node0x5588d40d6160;
	Node0x5588d425fba0:s1 -> Node0x5588d41307a0;
	Node0x5588d40d6160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{land.lhs.true16.i:                                \l  %34 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1045\l  %35 = load i8, i8* %34, align 1, !dbg !1045\l  %36 = and i8 %35, 1, !dbg !1047\l  %tobool20.i = icmp eq i8 %36, 0, !dbg !1047\l  br i1 %tobool20.i, label %if.else28.i, label %land.lhs.true21.i, !dbg !1048,\l... !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d40d6160:s0 -> Node0x5588d4258270;
	Node0x5588d40d6160:s1 -> Node0x5588d422d5e0;
	Node0x5588d422d5e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true21.i:                                \l  %37 = load i8, i8* %6, align 4, !dbg !1049\l  %38 = and i8 %37, 1, !dbg !1050\l  %tobool24.i = icmp eq i8 %38, 0, !dbg !1050\l  br i1 %tobool24.i, label %if.end49.i, label %lor.lhs.false.i, !dbg !1051\l|{<s0>T|<s1>F}}"];
	Node0x5588d422d5e0:s0 -> Node0x5588d41307a0;
	Node0x5588d422d5e0:s1 -> Node0x5588d4267690;
	Node0x5588d4267690 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false.i:                                  \l  %num.i = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !1052\l  %39 = bitcast i8* %num.i to i32*, !dbg !1052\l  %40 = load i32, i32* %39, align 16, !dbg !1052\l  %41 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1053\l  %42 = load i8, i8* %41, align 16, !dbg !1053\l  %conv25.i = zext i8 %42 to i32, !dbg !1054\l  %cmp.i = icmp ult i32 %40, %conv25.i, !dbg !1055\l  br i1 %cmp.i, label %if.else28.i, label %if.end49.i, !dbg !1056\l|{<s0>T|<s1>F}}"];
	Node0x5588d4267690:s0 -> Node0x5588d4258270;
	Node0x5588d4267690:s1 -> Node0x5588d41307a0;
	Node0x5588d4258270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.else28.i:                                      \l  %43 = and i8 %26, 2, !dbg !1057\l  %tobool32.i = icmp eq i8 %43, 0, !dbg !1057\l  br i1 %tobool32.i, label %if.else36.i, label %land.lhs.true33.i, !dbg !1059,\l... !prof !1060\l|{<s0>T|<s1>F}}"];
	Node0x5588d4258270:s0 -> Node0x5588d425f870;
	Node0x5588d4258270:s1 -> Node0x5588d425f520;
	Node0x5588d425f520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{land.lhs.true33.i:                                \l  %thr_ipending.i = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg !1061\l  %44 = bitcast i8* %thr_ipending.i to i32*, !dbg !1061\l  %45 = load i32, i32* %44, align 8, !dbg !1061\l  %tobool34.i = icmp eq i32 %45, 0, !dbg !1062\l  br i1 %tobool34.i, label %if.else36.i, label %if.end49.i, !dbg !1063, !prof\l... !1064\l|{<s0>T|<s1>F}}"];
	Node0x5588d425f520:s0 -> Node0x5588d425f870;
	Node0x5588d425f520:s1 -> Node0x5588d41307a0;
	Node0x5588d425f870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.else36.i:                                      \l  %46 = and i8 %26, 8, !dbg !1065\l  %tobool40.i = icmp eq i8 %46, 0, !dbg !1065\l  br i1 %tobool40.i, label %if.end49.i, label %land.lhs.true41.i, !dbg !1067,\l... !prof !1068\l|{<s0>T|<s1>F}}"];
	Node0x5588d425f870:s0 -> Node0x5588d41307a0;
	Node0x5588d425f870:s1 -> Node0x5588d4279d10;
	Node0x5588d4279d10 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true41.i:                                \l  %47 = getelementptr inbounds i8, i8* %opaque, i64 146, !dbg !1069\l  %48 = load i8, i8* %47, align 2, !dbg !1069\l  %49 = and i8 %48, 15, !dbg !1070\l  %tobool44.i = icmp eq i8 %49, 0, !dbg !1070\l  %spec.select.i = zext i1 %tobool44.i to i32, !dbg !1071\l  br label %if.end49.i, !dbg !1071\l}"];
	Node0x5588d4279d10 -> Node0x5588d41307a0;
	Node0x5588d41307a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{if.end49.i:                                       \l  %tmp_iir.0.i = phi i32 [ 6, %land.lhs.true.i ], [ 12, %land.lhs.true8.i ], [\l... 4, %land.lhs.true21.i ], [ 2, %land.lhs.true33.i ], [ %spec.select.i,\l... %land.lhs.true41.i ], [ 4, %lor.lhs.false.i ], [ 1, %if.else36.i ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !1027, metadata\l... !DIExpression()) #14, !dbg !1028\l  %50 = getelementptr inbounds i8, i8* %opaque, i64 142, !dbg !1072\l  %51 = load i8, i8* %50, align 2, !dbg !1072\l  %52 = and i8 %51, -16, !dbg !1073\l  %53 = trunc i32 %tmp_iir.0.i to i8, !dbg !1074\l  %conv53.i = or i8 %52, %53, !dbg !1074\l  store i8 %conv53.i, i8* %50, align 2, !dbg !1075\l  %cmp56.i = icmp ne i32 %tmp_iir.0.i, 1, !dbg !1076\l  %irq.i = getelementptr inbounds i8, i8* %opaque, i64 160, !dbg !1078\l  %54 = bitcast i8* %irq.i to %struct.IRQState**, !dbg !1078\l  %55 = load %struct.IRQState*, %struct.IRQState** %54, align 16, !dbg !1078\l  %.sink = zext i1 %cmp56.i to i32, !dbg !1079\l  tail call void @qemu_set_irq(%struct.IRQState* %55, i32 %.sink) #14, !dbg\l... !1078\l  %56 = getelementptr inbounds i8, i8* %opaque, i64 144, !dbg !1080\l  %57 = load i8, i8* %56, align 16, !dbg !1080\l  %58 = and i8 %57, 16, !dbg !1082\l  %tobool29 = icmp eq i8 %58, 0, !dbg !1082\l  br i1 %tobool29, label %if.then30, label %sw.epilog, !dbg !1083, !prof !991\l|{<s0>T|<s1>F}}"];
	Node0x5588d41307a0:s0 -> Node0x5588d40beab0;
	Node0x5588d41307a0:s1 -> Node0x5588d40b9600;
	Node0x5588d40beab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{if.then30:                                        \l  %chr = getelementptr inbounds i8, i8* %opaque, i64 168, !dbg !1084\l  %59 = bitcast i8* %chr to %struct.CharBackend*, !dbg !1084\l  tail call void @qemu_chr_fe_accept_input(%struct.CharBackend* nonnull %59)\l... #14, !dbg !1086\l  br label %sw.epilog, !dbg !1087\l}"];
	Node0x5588d40beab0 -> Node0x5588d40b9600;
	Node0x5588d40bff30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{sw.bb33:                                          \l  %60 = getelementptr inbounds i8, i8* %opaque, i64 143, !dbg !1088\l  %61 = load i8, i8* %60, align 1, !dbg !1088\l  %tobool37 = icmp slt i8 %61, 0, !dbg !1090\l  br i1 %tobool37, label %if.then38, label %if.else42, !dbg !1091, !prof !1092\l|{<s0>T|<s1>F}}"];
	Node0x5588d40bff30:s0 -> Node0x5588d40bffe0;
	Node0x5588d40bff30:s1 -> Node0x5588d40c0080;
	Node0x5588d40bffe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.then38:                                        \l  %divider39 = getelementptr inbounds i8, i8* %opaque, i64 136, !dbg !1093\l  %62 = bitcast i8* %divider39 to i16*, !dbg !1093\l  %63 = load i16, i16* %62, align 8, !dbg !1093\l  %64 = lshr i16 %63, 8, !dbg !1095\l  %65 = zext i16 %64 to i32, !dbg !1095\l  call void @llvm.dbg.value(metadata i32 %65, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  br label %sw.epilog, !dbg !1096\l}"];
	Node0x5588d40bffe0 -> Node0x5588d40b9600;
	Node0x5588d40c0080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{if.else42:                                        \l  %66 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1097\l  %67 = load i8, i8* %66, align 1, !dbg !1097\l  %conv43 = zext i8 %67 to i32, !dbg !1099\l  call void @llvm.dbg.value(metadata i32 %conv43, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  br label %sw.epilog\l}"];
	Node0x5588d40c0080 -> Node0x5588d40b9600;
	Node0x5588d40c0e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{sw.bb45:                                          \l  %68 = getelementptr inbounds i8, i8* %opaque, i64 142, !dbg !1100\l  %69 = load i8, i8* %68, align 2, !dbg !1100\l  %conv46 = zext i8 %69 to i32, !dbg !1101\l  call void @llvm.dbg.value(metadata i32 %conv46, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  %and47 = and i32 %conv46, 6, !dbg !1102\l  %cmp48 = icmp eq i32 %and47, 2, !dbg !1104\l  br i1 %cmp48, label %if.then50, label %sw.epilog, !dbg !1105, !prof !1106\l|{<s0>T|<s1>F}}"];
	Node0x5588d40c0e10:s0 -> Node0x5588d40c12a0;
	Node0x5588d40c0e10:s1 -> Node0x5588d40b9600;
	Node0x5588d40c12a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then50:                                        \l  %thr_ipending = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg !1107\l  %70 = bitcast i8* %thr_ipending to i32*, !dbg !1107\l  store i32 0, i32* %70, align 8, !dbg !1109\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1022,\l... metadata !DIExpression()) #14, !dbg !1110\l  call void @llvm.dbg.value(metadata i8 1, metadata !1027, metadata\l... !DIExpression()) #14, !dbg !1110\l  %71 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1112\l  %72 = load i8, i8* %71, align 1, !dbg !1112\l  %73 = and i8 %72, 4, !dbg !1113\l  %tobool.i152 = icmp eq i8 %73, 0, !dbg !1113\l  br i1 %tobool.i152, label %if.else.i157, label %land.lhs.true.i155, !dbg\l... !1114, !prof !1034\l|{<s0>T|<s1>F}}"];
	Node0x5588d40c12a0:s0 -> Node0x5588d42624e0;
	Node0x5588d40c12a0:s1 -> Node0x5588d4014480;
	Node0x5588d4014480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{land.lhs.true.i155:                               \l  %74 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1115\l  %75 = load i8, i8* %74, align 1, !dbg !1115\l  %76 = and i8 %75, 30, !dbg !1116\l  %tobool3.i154 = icmp eq i8 %76, 0, !dbg !1116\l  br i1 %tobool3.i154, label %if.else.i157, label %if.end49.i188, !dbg !1117,\l... !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d4014480:s0 -> Node0x5588d42624e0;
	Node0x5588d4014480:s1 -> Node0x5588d40d3230;
	Node0x5588d42624e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.else.i157:                                     \l  %77 = and i8 %72, 1, !dbg !1118\l  %tobool7.i156 = icmp eq i8 %77, 0, !dbg !1118\l  br i1 %tobool7.i156, label %if.else36.i178, label %land.lhs.true8.i160, !dbg\l... !1119, !prof !1034\l|{<s0>T|<s1>F}}"];
	Node0x5588d42624e0:s0 -> Node0x5588d425b0c0;
	Node0x5588d42624e0:s1 -> Node0x5588d4259b10;
	Node0x5588d4259b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{land.lhs.true8.i160:                              \l  %timeout_ipending.i158 = getelementptr inbounds i8, i8* %opaque, i64 320,\l... !dbg !1120\l  %78 = bitcast i8* %timeout_ipending.i158 to i32*, !dbg !1120\l  %79 = load i32, i32* %78, align 16, !dbg !1120\l  %tobool9.i159 = icmp eq i32 %79, 0, !dbg !1121\l  br i1 %tobool9.i159, label %land.lhs.true16.i163, label %if.end49.i188, !dbg\l... !1122, !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d4259b10:s0 -> Node0x5588d4259e60;
	Node0x5588d4259b10:s1 -> Node0x5588d40d3230;
	Node0x5588d4259e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{land.lhs.true16.i163:                             \l  %80 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1123\l  %81 = load i8, i8* %80, align 1, !dbg !1123\l  %82 = and i8 %81, 1, !dbg !1124\l  %tobool20.i162 = icmp eq i8 %82, 0, !dbg !1124\l  br i1 %tobool20.i162, label %if.else36.i178, label %land.lhs.true21.i166,\l... !dbg !1125, !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d4259e60:s0 -> Node0x5588d425b0c0;
	Node0x5588d4259e60:s1 -> Node0x5588d425a210;
	Node0x5588d425a210 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true21.i166:                             \l  %83 = getelementptr inbounds i8, i8* %opaque, i64 148, !dbg !1126\l  %84 = load i8, i8* %83, align 4, !dbg !1126\l  %85 = and i8 %84, 1, !dbg !1127\l  %tobool24.i165 = icmp eq i8 %85, 0, !dbg !1127\l  br i1 %tobool24.i165, label %if.end49.i188, label %lor.lhs.false.i171, !dbg\l... !1128\l|{<s0>T|<s1>F}}"];
	Node0x5588d425a210:s0 -> Node0x5588d40d3230;
	Node0x5588d425a210:s1 -> Node0x5588d425a610;
	Node0x5588d425a610 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false.i171:                               \l  %num.i167 = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !1129\l  %86 = bitcast i8* %num.i167 to i32*, !dbg !1129\l  %87 = load i32, i32* %86, align 16, !dbg !1129\l  %88 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1130\l  %89 = load i8, i8* %88, align 16, !dbg !1130\l  %conv25.i169 = zext i8 %89 to i32, !dbg !1131\l  %cmp.i170 = icmp ult i32 %87, %conv25.i169, !dbg !1132\l  br i1 %cmp.i170, label %if.else36.i178, label %if.end49.i188, !dbg !1133\l|{<s0>T|<s1>F}}"];
	Node0x5588d425a610:s0 -> Node0x5588d425b0c0;
	Node0x5588d425a610:s1 -> Node0x5588d40d3230;
	Node0x5588d425b0c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.else36.i178:                                   \l  %90 = and i8 %72, 8, !dbg !1134\l  %tobool40.i177 = icmp eq i8 %90, 0, !dbg !1134\l  br i1 %tobool40.i177, label %if.end49.i188, label %land.lhs.true41.i182,\l... !dbg !1135, !prof !1068\l|{<s0>T|<s1>F}}"];
	Node0x5588d425b0c0:s0 -> Node0x5588d40d3230;
	Node0x5588d425b0c0:s1 -> Node0x5588d425b340;
	Node0x5588d425b340 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true41.i182:                             \l  %91 = getelementptr inbounds i8, i8* %opaque, i64 146, !dbg !1136\l  %92 = load i8, i8* %91, align 2, !dbg !1136\l  %93 = and i8 %92, 15, !dbg !1137\l  %tobool44.i180 = icmp eq i8 %93, 0, !dbg !1137\l  %spec.select.i181 = zext i1 %tobool44.i180 to i32, !dbg !1138\l  br label %if.end49.i188, !dbg !1138\l}"];
	Node0x5588d425b340 -> Node0x5588d40d3230;
	Node0x5588d40d3230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end49.i188:                                    \l  %tmp_iir.0.i183 = phi i32 [ 6, %land.lhs.true.i155 ], [ 12,\l... %land.lhs.true8.i160 ], [ 4, %land.lhs.true21.i166 ], [ %spec.select.i181,\l... %land.lhs.true41.i182 ], [ 4, %lor.lhs.false.i171 ], [ 1, %if.else36.i178 ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !1027, metadata\l... !DIExpression()) #14, !dbg !1110\l  %94 = and i8 %69, -16, !dbg !1139\l  %95 = trunc i32 %tmp_iir.0.i183 to i8, !dbg !1140\l  %conv53.i185 = or i8 %94, %95, !dbg !1140\l  store i8 %conv53.i185, i8* %68, align 2, !dbg !1141\l  %cmp56.i186 = icmp eq i32 %tmp_iir.0.i183, 1, !dbg !1142\l  %irq.i187 = getelementptr inbounds i8, i8* %opaque, i64 160, !dbg !1143\l  %96 = bitcast i8* %irq.i187 to %struct.IRQState**, !dbg !1143\l  %97 = load %struct.IRQState*, %struct.IRQState** %96, align 16, !dbg !1143\l  br i1 %cmp56.i186, label %if.else59.i190, label %if.then58.i189, !dbg !1144,\l... !prof !1145\l|{<s0>T|<s1>F}}"];
	Node0x5588d40d3230:s0 -> Node0x5588d4262250;
	Node0x5588d40d3230:s1 -> Node0x5588d4261ec0;
	Node0x5588d4261ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.then58.i189:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %97, metadata !1146,\l... metadata !DIExpression()) #14, !dbg !1152\l  tail call void @qemu_set_irq(%struct.IRQState* %97, i32 1) #14, !dbg !1155\l  br label %sw.epilog, !dbg !1156\l}"];
	Node0x5588d4261ec0 -> Node0x5588d40b9600;
	Node0x5588d4262250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.else59.i190:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %97, metadata !1157,\l... metadata !DIExpression()) #14, !dbg !1160\l  tail call void @qemu_set_irq(%struct.IRQState* %97, i32 0) #14, !dbg !1163\l  br label %sw.epilog\l}"];
	Node0x5588d4262250 -> Node0x5588d40b9600;
	Node0x5588d407a3d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{sw.bb52:                                          \l  %98 = getelementptr inbounds i8, i8* %opaque, i64 143, !dbg !1164\l  %99 = load i8, i8* %98, align 1, !dbg !1164\l  %conv54 = zext i8 %99 to i32, !dbg !1165\l  call void @llvm.dbg.value(metadata i32 %conv54, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  br label %sw.epilog, !dbg !1166\l}"];
	Node0x5588d407a3d0 -> Node0x5588d40b9600;
	Node0x5588d407a820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{sw.bb55:                                          \l  %100 = getelementptr inbounds i8, i8* %opaque, i64 144, !dbg !1167\l  %101 = load i8, i8* %100, align 16, !dbg !1167\l  %conv57 = zext i8 %101 to i32, !dbg !1168\l  call void @llvm.dbg.value(metadata i32 %conv57, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  br label %sw.epilog, !dbg !1169\l}"];
	Node0x5588d407a820 -> Node0x5588d40b9600;
	Node0x5588d40bd4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{sw.bb58:                                          \l  %102 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1170\l  %103 = load i8, i8* %102, align 1, !dbg !1170\l  %conv60 = zext i8 %103 to i32, !dbg !1171\l  call void @llvm.dbg.value(metadata i32 %conv60, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  %and63 = and i32 %conv60, 18, !dbg !1172\l  %tobool64 = icmp eq i32 %and63, 0, !dbg !1172\l  br i1 %tobool64, label %sw.epilog, label %if.then65, !dbg !1174, !prof !1175\l|{<s0>T|<s1>F}}"];
	Node0x5588d40bd4d0:s0 -> Node0x5588d40b9600;
	Node0x5588d40bd4d0:s1 -> Node0x5588d407b7c0;
	Node0x5588d407b7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.then65:                                        \l  %and68 = and i8 %103, -19, !dbg !1176\l  store i8 %and68, i8* %102, align 1, !dbg !1176\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1022,\l... metadata !DIExpression()) #14, !dbg !1178\l  call void @llvm.dbg.value(metadata i8 1, metadata !1027, metadata\l... !DIExpression()) #14, !dbg !1178\l  %104 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1180\l  %105 = load i8, i8* %104, align 1, !dbg !1180\l  %106 = and i8 %105, 4, !dbg !1181\l  %tobool.i193 = icmp eq i8 %106, 0, !dbg !1181\l  %107 = and i8 %103, 12, !dbg !1182\l  %tobool3.i195 = icmp eq i8 %107, 0, !dbg !1182\l  %or.cond = or i1 %tobool.i193, %tobool3.i195, !dbg !1183\l  br i1 %or.cond, label %if.else.i198, label %if.end49.i229, !dbg !1183, !prof\l... !1184\l|{<s0>T|<s1>F}}"];
	Node0x5588d407b7c0:s0 -> Node0x5588d426f320;
	Node0x5588d407b7c0:s1 -> Node0x5588d4262200;
	Node0x5588d426f320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.else.i198:                                     \l  %108 = and i8 %105, 1, !dbg !1185\l  %tobool7.i197 = icmp eq i8 %108, 0, !dbg !1185\l  br i1 %tobool7.i197, label %if.else28.i214, label %land.lhs.true8.i201, !dbg\l... !1186, !prof !1034\l|{<s0>T|<s1>F}}"];
	Node0x5588d426f320:s0 -> Node0x5588d4270580;
	Node0x5588d426f320:s1 -> Node0x5588d426f5a0;
	Node0x5588d426f5a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true8.i201:                              \l  %timeout_ipending.i199 = getelementptr inbounds i8, i8* %opaque, i64 320,\l... !dbg !1187\l  %109 = bitcast i8* %timeout_ipending.i199 to i32*, !dbg !1187\l  %110 = load i32, i32* %109, align 16, !dbg !1187\l  %tobool9.i200 = icmp eq i32 %110, 0, !dbg !1188\l  br i1 %tobool9.i200, label %land.lhs.true16.i204, label %if.end49.i229, !dbg\l... !1189, !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d426f5a0:s0 -> Node0x5588d426f8f0;
	Node0x5588d426f5a0:s1 -> Node0x5588d4262200;
	Node0x5588d426f8f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true16.i204:                             \l  %111 = and i8 %103, 1, !dbg !1190\l  %tobool20.i203 = icmp eq i8 %111, 0, !dbg !1190\l  br i1 %tobool20.i203, label %if.else28.i214, label %land.lhs.true21.i207,\l... !dbg !1191, !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d426f8f0:s0 -> Node0x5588d4270580;
	Node0x5588d426f8f0:s1 -> Node0x5588d426fca0;
	Node0x5588d426fca0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true21.i207:                             \l  %112 = getelementptr inbounds i8, i8* %opaque, i64 148, !dbg !1192\l  %113 = load i8, i8* %112, align 4, !dbg !1192\l  %114 = and i8 %113, 1, !dbg !1193\l  %tobool24.i206 = icmp eq i8 %114, 0, !dbg !1193\l  br i1 %tobool24.i206, label %if.end49.i229, label %lor.lhs.false.i212, !dbg\l... !1194\l|{<s0>T|<s1>F}}"];
	Node0x5588d426fca0:s0 -> Node0x5588d4262200;
	Node0x5588d426fca0:s1 -> Node0x5588d42700a0;
	Node0x5588d42700a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false.i212:                               \l  %num.i208 = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !1195\l  %115 = bitcast i8* %num.i208 to i32*, !dbg !1195\l  %116 = load i32, i32* %115, align 16, !dbg !1195\l  %117 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1196\l  %118 = load i8, i8* %117, align 16, !dbg !1196\l  %conv25.i210 = zext i8 %118 to i32, !dbg !1197\l  %cmp.i211 = icmp ult i32 %116, %conv25.i210, !dbg !1198\l  br i1 %cmp.i211, label %if.else28.i214, label %if.end49.i229, !dbg !1199\l|{<s0>T|<s1>F}}"];
	Node0x5588d42700a0:s0 -> Node0x5588d4270580;
	Node0x5588d42700a0:s1 -> Node0x5588d4262200;
	Node0x5588d4270580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.else28.i214:                                   \l  %119 = and i8 %105, 2, !dbg !1200\l  %tobool32.i213 = icmp eq i8 %119, 0, !dbg !1200\l  br i1 %tobool32.i213, label %if.else36.i219, label %land.lhs.true33.i217,\l... !dbg !1201, !prof !1060\l|{<s0>T|<s1>F}}"];
	Node0x5588d4270580:s0 -> Node0x5588d426d320;
	Node0x5588d4270580:s1 -> Node0x5588d426d000;
	Node0x5588d426d000 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true33.i217:                             \l  %thr_ipending.i215 = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg\l... !1202\l  %120 = bitcast i8* %thr_ipending.i215 to i32*, !dbg !1202\l  %121 = load i32, i32* %120, align 8, !dbg !1202\l  %tobool34.i216 = icmp eq i32 %121, 0, !dbg !1203\l  br i1 %tobool34.i216, label %if.else36.i219, label %if.end49.i229, !dbg\l... !1204, !prof !1064\l|{<s0>T|<s1>F}}"];
	Node0x5588d426d000:s0 -> Node0x5588d426d320;
	Node0x5588d426d000:s1 -> Node0x5588d4262200;
	Node0x5588d426d320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.else36.i219:                                   \l  %122 = and i8 %105, 8, !dbg !1205\l  %tobool40.i218 = icmp eq i8 %122, 0, !dbg !1205\l  br i1 %tobool40.i218, label %if.end49.i229, label %land.lhs.true41.i223,\l... !dbg !1206, !prof !1068\l|{<s0>T|<s1>F}}"];
	Node0x5588d426d320:s0 -> Node0x5588d4262200;
	Node0x5588d426d320:s1 -> Node0x5588d426d5a0;
	Node0x5588d426d5a0 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true41.i223:                             \l  %123 = getelementptr inbounds i8, i8* %opaque, i64 146, !dbg !1207\l  %124 = load i8, i8* %123, align 2, !dbg !1207\l  %125 = and i8 %124, 15, !dbg !1208\l  %tobool44.i221 = icmp eq i8 %125, 0, !dbg !1208\l  %spec.select.i222 = zext i1 %tobool44.i221 to i32, !dbg !1209\l  br label %if.end49.i229, !dbg !1209\l}"];
	Node0x5588d426d5a0 -> Node0x5588d4262200;
	Node0x5588d4262200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.end49.i229:                                    \l  %tmp_iir.0.i224 = phi i32 [ 12, %land.lhs.true8.i201 ], [ 4,\l... %land.lhs.true21.i207 ], [ 2, %land.lhs.true33.i217 ], [ %spec.select.i222,\l... %land.lhs.true41.i223 ], [ 4, %lor.lhs.false.i212 ], [ 1, %if.else36.i219 ],\l... [ 6, %if.then65 ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !1027, metadata\l... !DIExpression()) #14, !dbg !1178\l  %126 = getelementptr inbounds i8, i8* %opaque, i64 142, !dbg !1210\l  %127 = load i8, i8* %126, align 2, !dbg !1210\l  %128 = and i8 %127, -16, !dbg !1211\l  %129 = trunc i32 %tmp_iir.0.i224 to i8, !dbg !1212\l  %conv53.i226 = or i8 %128, %129, !dbg !1212\l  store i8 %conv53.i226, i8* %126, align 2, !dbg !1213\l  %cmp56.i227 = icmp eq i32 %tmp_iir.0.i224, 1, !dbg !1214\l  %irq.i228 = getelementptr inbounds i8, i8* %opaque, i64 160, !dbg !1215\l  %130 = bitcast i8* %irq.i228 to %struct.IRQState**, !dbg !1215\l  %131 = load %struct.IRQState*, %struct.IRQState** %130, align 16, !dbg !1215\l  br i1 %cmp56.i227, label %if.else59.i231, label %if.then58.i230, !dbg !1216,\l... !prof !1145\l|{<s0>T|<s1>F}}"];
	Node0x5588d4262200:s0 -> Node0x5588d426f090;
	Node0x5588d4262200:s1 -> Node0x5588d40edc50;
	Node0x5588d40edc50 [shape=record,penwidth=3.0, color="red",label="{if.then58.i230:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %131, metadata !1146,\l... metadata !DIExpression()) #14, !dbg !1217\l  tail call void @qemu_set_irq(%struct.IRQState* %131, i32 1) #14, !dbg !1219\l  br label %sw.epilog, !dbg !1220\l}"];
	Node0x5588d40edc50 -> Node0x5588d40b9600;
	Node0x5588d426f090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.else59.i231:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %131, metadata !1157,\l... metadata !DIExpression()) #14, !dbg !1221\l  tail call void @qemu_set_irq(%struct.IRQState* %131, i32 0) #14, !dbg !1223\l  br label %sw.epilog\l}"];
	Node0x5588d426f090 -> Node0x5588d40b9600;
	Node0x5588d407c820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{sw.bb71:                                          \l  %132 = getelementptr inbounds i8, i8* %opaque, i64 144, !dbg !1224\l  %133 = load i8, i8* %132, align 16, !dbg !1224\l  %conv73 = zext i8 %133 to i32, !dbg !1226\l  %and74 = and i32 %conv73, 16, !dbg !1227\l  %tobool75 = icmp eq i32 %and74, 0, !dbg !1227\l  br i1 %tobool75, label %if.else89, label %if.then76, !dbg !1228, !prof !1229\l|{<s0>T|<s1>F}}"];
	Node0x5588d407c820:s0 -> Node0x5588d407c9f0;
	Node0x5588d407c820:s1 -> Node0x5588d407c910;
	Node0x5588d407c910 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then76:                                        \l  %and79 = shl nuw nsw i32 %conv73, 4, !dbg !1230\l  %shl = and i32 %and79, 192, !dbg !1230\l  call void @llvm.dbg.value(metadata i32 %shl, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  %and82 = shl nuw nsw i32 %conv73, 3, !dbg !1232\l  %shl83 = and i32 %and82, 16, !dbg !1232\l  %or = or i32 %shl, %shl83, !dbg !1233\l  call void @llvm.dbg.value(metadata i32 %or, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  %and86 = shl nuw nsw i32 %conv73, 5, !dbg !1234\l  %shl87 = and i32 %and86, 32, !dbg !1234\l  %or88 = or i32 %or, %shl87, !dbg !1235\l  call void @llvm.dbg.value(metadata i32 %or88, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  br label %sw.epilog, !dbg !1236\l}"];
	Node0x5588d407c910 -> Node0x5588d40b9600;
	Node0x5588d407c9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.else89:                                        \l  %poll_msl = getelementptr inbounds i8, i8* %opaque, i64 336, !dbg !1237\l  %134 = bitcast i8* %poll_msl to i32*, !dbg !1237\l  %135 = load i32, i32* %134, align 16, !dbg !1237\l  %cmp90 = icmp sgt i32 %135, -1, !dbg !1240\l  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !1241, !prof !1242\l|{<s0>T|<s1>F}}"];
	Node0x5588d407c9f0:s0 -> Node0x5588d40ca060;
	Node0x5588d407c9f0:s1 -> Node0x5588d40ca0b0;
	Node0x5588d40ca060 [shape=record,penwidth=3.0, color="red",label="{if.then92:                                        \l  tail call void @serial_update_msl(%struct.SerialState* nonnull %0), !dbg\l... !1243\l  br label %if.end93, !dbg !1243\l}"];
	Node0x5588d40ca060 -> Node0x5588d40ca0b0;
	Node0x5588d40ca0b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end93:                                         \l  %136 = getelementptr inbounds i8, i8* %opaque, i64 146, !dbg !1244\l  %137 = load i8, i8* %136, align 2, !dbg !1244\l  %conv94 = zext i8 %137 to i32, !dbg !1245\l  call void @llvm.dbg.value(metadata i32 %conv94, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  %and97 = and i32 %conv94, 15, !dbg !1246\l  %tobool98 = icmp eq i32 %and97, 0, !dbg !1246\l  br i1 %tobool98, label %sw.epilog, label %if.then99, !dbg !1248, !prof !1229\l|{<s0>T|<s1>F}}"];
	Node0x5588d40ca0b0:s0 -> Node0x5588d40b9600;
	Node0x5588d40ca0b0:s1 -> Node0x5588d3f8bd00;
	Node0x5588d3f8bd00 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then99:                                        \l  %and102 = and i8 %137, -16, !dbg !1249\l  store i8 %and102, i8* %136, align 2, !dbg !1249\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1022,\l... metadata !DIExpression()) #14, !dbg !1251\l  call void @llvm.dbg.value(metadata i8 1, metadata !1027, metadata\l... !DIExpression()) #14, !dbg !1251\l  %138 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1253\l  %139 = load i8, i8* %138, align 1, !dbg !1253\l  %140 = and i8 %139, 4, !dbg !1254\l  %tobool.i234 = icmp eq i8 %140, 0, !dbg !1254\l  br i1 %tobool.i234, label %if.else.i239, label %land.lhs.true.i237, !dbg\l... !1255, !prof !1034\l|{<s0>T|<s1>F}}"];
	Node0x5588d3f8bd00:s0 -> Node0x5588d426ecd0;
	Node0x5588d3f8bd00:s1 -> Node0x5588d426f040;
	Node0x5588d426f040 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true.i237:                               \l  %141 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1256\l  %142 = load i8, i8* %141, align 1, !dbg !1256\l  %143 = and i8 %142, 30, !dbg !1257\l  %tobool3.i236 = icmp eq i8 %143, 0, !dbg !1257\l  br i1 %tobool3.i236, label %if.else.i239, label %if.end49.i270, !dbg !1258,\l... !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d426f040:s0 -> Node0x5588d426ecd0;
	Node0x5588d426f040:s1 -> Node0x5588d426dee0;
	Node0x5588d426ecd0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else.i239:                                     \l  %144 = and i8 %139, 1, !dbg !1259\l  %tobool7.i238 = icmp eq i8 %144, 0, !dbg !1259\l  br i1 %tobool7.i238, label %if.else28.i255, label %land.lhs.true8.i242, !dbg\l... !1260, !prof !1034\l|{<s0>T|<s1>F}}"];
	Node0x5588d426ecd0:s0 -> Node0x5588d428ec30;
	Node0x5588d426ecd0:s1 -> Node0x5588d426ef50;
	Node0x5588d426ef50 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true8.i242:                              \l  %timeout_ipending.i240 = getelementptr inbounds i8, i8* %opaque, i64 320,\l... !dbg !1261\l  %145 = bitcast i8* %timeout_ipending.i240 to i32*, !dbg !1261\l  %146 = load i32, i32* %145, align 16, !dbg !1261\l  %tobool9.i241 = icmp eq i32 %146, 0, !dbg !1262\l  br i1 %tobool9.i241, label %land.lhs.true16.i245, label %if.end49.i270, !dbg\l... !1263, !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d426ef50:s0 -> Node0x5588d428dfa0;
	Node0x5588d426ef50:s1 -> Node0x5588d426dee0;
	Node0x5588d428dfa0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true16.i245:                             \l  %147 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1264\l  %148 = load i8, i8* %147, align 1, !dbg !1264\l  %149 = and i8 %148, 1, !dbg !1265\l  %tobool20.i244 = icmp eq i8 %149, 0, !dbg !1265\l  br i1 %tobool20.i244, label %if.else28.i255, label %land.lhs.true21.i248,\l... !dbg !1266, !prof !1038\l|{<s0>T|<s1>F}}"];
	Node0x5588d428dfa0:s0 -> Node0x5588d428ec30;
	Node0x5588d428dfa0:s1 -> Node0x5588d428e350;
	Node0x5588d428e350 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true21.i248:                             \l  %150 = getelementptr inbounds i8, i8* %opaque, i64 148, !dbg !1267\l  %151 = load i8, i8* %150, align 4, !dbg !1267\l  %152 = and i8 %151, 1, !dbg !1268\l  %tobool24.i247 = icmp eq i8 %152, 0, !dbg !1268\l  br i1 %tobool24.i247, label %if.end49.i270, label %lor.lhs.false.i253, !dbg\l... !1269\l|{<s0>T|<s1>F}}"];
	Node0x5588d428e350:s0 -> Node0x5588d426dee0;
	Node0x5588d428e350:s1 -> Node0x5588d428e750;
	Node0x5588d428e750 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false.i253:                               \l  %num.i249 = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !1270\l  %153 = bitcast i8* %num.i249 to i32*, !dbg !1270\l  %154 = load i32, i32* %153, align 16, !dbg !1270\l  %155 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1271\l  %156 = load i8, i8* %155, align 16, !dbg !1271\l  %conv25.i251 = zext i8 %156 to i32, !dbg !1272\l  %cmp.i252 = icmp ult i32 %154, %conv25.i251, !dbg !1273\l  br i1 %cmp.i252, label %if.else28.i255, label %if.end49.i270, !dbg !1274\l|{<s0>T|<s1>F}}"];
	Node0x5588d428e750:s0 -> Node0x5588d428ec30;
	Node0x5588d428e750:s1 -> Node0x5588d426dee0;
	Node0x5588d428ec30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else28.i255:                                   \l  %157 = and i8 %139, 2, !dbg !1275\l  %tobool32.i254 = icmp eq i8 %157, 0, !dbg !1275\l  br i1 %tobool32.i254, label %if.else36.i260, label %land.lhs.true33.i258,\l... !dbg !1276, !prof !1060\l|{<s0>T|<s1>F}}"];
	Node0x5588d428ec30:s0 -> Node0x5588d428f200;
	Node0x5588d428ec30:s1 -> Node0x5588d428eeb0;
	Node0x5588d428eeb0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true33.i258:                             \l  %thr_ipending.i256 = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg\l... !1277\l  %158 = bitcast i8* %thr_ipending.i256 to i32*, !dbg !1277\l  %159 = load i32, i32* %158, align 8, !dbg !1277\l  %tobool34.i257 = icmp eq i32 %159, 0, !dbg !1278\l  br i1 %tobool34.i257, label %if.else36.i260, label %if.end49.i270, !dbg\l... !1279, !prof !1064\l|{<s0>T|<s1>F}}"];
	Node0x5588d428eeb0:s0 -> Node0x5588d428f200;
	Node0x5588d428eeb0:s1 -> Node0x5588d426dee0;
	Node0x5588d428f200 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else36.i260:                                   \l  br label %if.end49.i270, !dbg !1280\l}"];
	Node0x5588d428f200 -> Node0x5588d426dee0;
	Node0x5588d426dee0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end49.i270:                                    \l  %tmp_iir.0.i265 = phi i32 [ 6, %land.lhs.true.i237 ], [ 12,\l... %land.lhs.true8.i242 ], [ 4, %land.lhs.true21.i248 ], [ 2,\l... %land.lhs.true33.i258 ], [ 4, %lor.lhs.false.i253 ], [ 1, %if.else36.i260 ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !1027, metadata\l... !DIExpression()) #14, !dbg !1251\l  %160 = getelementptr inbounds i8, i8* %opaque, i64 142, !dbg !1281\l  %161 = load i8, i8* %160, align 2, !dbg !1281\l  %162 = and i8 %161, -16, !dbg !1282\l  %163 = trunc i32 %tmp_iir.0.i265 to i8, !dbg !1283\l  %conv53.i267 = or i8 %162, %163, !dbg !1283\l  store i8 %conv53.i267, i8* %160, align 2, !dbg !1284\l  %cmp56.i268 = icmp eq i32 %tmp_iir.0.i265, 1, !dbg !1285\l  %irq.i269 = getelementptr inbounds i8, i8* %opaque, i64 160, !dbg !1286\l  %164 = bitcast i8* %irq.i269 to %struct.IRQState**, !dbg !1286\l  %165 = load %struct.IRQState*, %struct.IRQState** %164, align 16, !dbg !1286\l  br i1 %cmp56.i268, label %if.else59.i272, label %if.then58.i271, !dbg !1287,\l... !prof !1145\l|{<s0>T|<s1>F}}"];
	Node0x5588d426dee0:s0 -> Node0x5588d426ea40;
	Node0x5588d426dee0:s1 -> Node0x5588d426e6b0;
	Node0x5588d426e6b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then58.i271:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %165, metadata !1146,\l... metadata !DIExpression()) #14, !dbg !1288\l  tail call void @qemu_set_irq(%struct.IRQState* %165, i32 1) #14, !dbg !1290\l  br label %sw.epilog, !dbg !1291\l}"];
	Node0x5588d426e6b0 -> Node0x5588d40b9600;
	Node0x5588d426ea40 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else59.i272:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %165, metadata !1157,\l... metadata !DIExpression()) #14, !dbg !1292\l  tail call void @qemu_set_irq(%struct.IRQState* %165, i32 0) #14, !dbg !1294\l  br label %sw.epilog\l}"];
	Node0x5588d426ea40 -> Node0x5588d40b9600;
	Node0x5588d40cbc20 [shape=record,penwidth=3.0, color="red",label="{sw.bb106:                                         \l  %166 = getelementptr inbounds i8, i8* %opaque, i64 147, !dbg !1295\l  %167 = load i8, i8* %166, align 1, !dbg !1295\l  %conv107 = zext i8 %167 to i32, !dbg !1296\l  call void @llvm.dbg.value(metadata i32 %conv107, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  br label %sw.epilog, !dbg !1297\l}"];
	Node0x5588d40cbc20 -> Node0x5588d40b9600;
	Node0x5588d40b9600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{sw.epilog:                                        \l  %ret.1 = phi i32 [ %and3, %if.then ], [ %ret.0, %if.end49.i ], [ %ret.0,\l... %if.then30 ], [ %or88, %if.then76 ], [ %conv94, %if.end93 ], [ %conv60,\l... %sw.bb58 ], [ %conv57, %sw.bb55 ], [ %conv54, %sw.bb52 ], [ %conv46, %sw.bb45\l... ], [ %65, %if.then38 ], [ %conv43, %if.else42 ], [ %conv107, %sw.bb106 ], [\l... %conv46, %if.then58.i189 ], [ %conv46, %if.else59.i190 ], [ %conv60,\l... %if.then58.i230 ], [ %conv60, %if.else59.i231 ], [ %conv94, %if.then58.i271\l... ], [ %conv94, %if.else59.i272 ], !dbg !1298\l  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !968, metadata\l... !DIExpression()), !dbg !971\l  %conv108 = trunc i64 %and to i32, !dbg !1299\l  call void @llvm.dbg.value(metadata i64 %and, metadata !1300, metadata\l... !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert,\l... 16, DW_ATE_unsigned, DW_OP_stack_value)) #14, !dbg !1307\l  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !1306, metadata\l... !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)) #14, !dbg !1307\l  call void @llvm.dbg.value(metadata i64 %and, metadata !1309, metadata\l... !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert,\l... 16, DW_ATE_unsigned, DW_OP_stack_value)) #14, !dbg !1323\l  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !1312, metadata\l... !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)) #14, !dbg !1323\l  %168 = load i32, i32* @trace_events_enabled_count, align 4, !dbg !1327\l  %tobool.i.i = icmp eq i32 %168, 0, !dbg !1327\l  %169 = load i16, i16* @_TRACE_SERIAL_IOPORT_READ_DSTATE, align 2, !dbg !1327\l  %tobool4.i.i = icmp eq i16 %169, 0, !dbg !1327\l  %or.cond.i.i = or i1 %tobool.i.i, %tobool4.i.i, !dbg !1327\l  br i1 %or.cond.i.i, label %trace_serial_ioport_read.exit, label\l... %land.lhs.true5.i.i, !dbg !1327, !prof !1328, !misexpect !1329\l|{<s0>T|<s1>F}}"];
	Node0x5588d40b9600:s0 -> Node0x5588d40b03c0;
	Node0x5588d40b9600:s1 -> Node0x5588d40dae90;
	Node0x5588d40dae90 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true5.i.i:                               \l  call void @llvm.dbg.value(metadata i32 32768, metadata !1330, metadata\l... !DIExpression()) #14, !dbg !1336\l  %170 = load i32, i32* @qemu_loglevel, align 4, !dbg !1338\l  %171 = trunc i32 %170 to i16, !dbg !1339\l  %cmp.i.i.i = icmp slt i16 %171, 0, !dbg !1339\l  br i1 %cmp.i.i.i, label %if.then.i.i, label %trace_serial_ioport_read.exit,\l... !dbg !1340\l|{<s0>T|<s1>F}}"];
	Node0x5588d40dae90:s0 -> Node0x5588d4069140;
	Node0x5588d40dae90:s1 -> Node0x5588d40b03c0;
	Node0x5588d4069140 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then.i.i:                                      \l  %172 = bitcast %struct.timeval* %_now.i.i to i8*, !dbg !1341\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #14, !dbg !1341\l  call void @llvm.dbg.declare(metadata %struct.timeval* %_now.i.i, metadata\l... !1313, metadata !DIExpression()) #14, !dbg !1342\l  %call7.i.i = call i32 @gettimeofday(%struct.timeval* nonnull %_now.i.i,\l... %struct.timezone* null) #14, !dbg !1343\l  %call8.i.i = tail call i32 @qemu_get_thread_id() #14, !dbg !1344\l  %tv_sec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval*\l... %_now.i.i, i64 0, i32 0, !dbg !1345\l  %173 = load i64, i64* %tv_sec.i.i, align 8, !dbg !1345\l  %tv_usec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval*\l... %_now.i.i, i64 0, i32 1, !dbg !1346\l  %174 = load i64, i64* %tv_usec.i.i, align 8, !dbg !1346\l  %conv10.i.i = and i32 %ret.1, 255, !dbg !1347\l  %call11.i.i = tail call i32 (i8*, ...) @qemu_log(i8* getelementptr inbounds\l... ([61 x i8], [61 x i8]* @.str.50, i64 0, i64 0), i32 %call8.i.i, i64 %173, i64\l... %174, i32 %conv108, i32 %conv10.i.i) #14, !dbg !1348\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #14, !dbg !1349\l  br label %trace_serial_ioport_read.exit, !dbg !1350\l}"];
	Node0x5588d4069140 -> Node0x5588d40b03c0;
	Node0x5588d40b03c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{trace_serial_ioport_read.exit:                    \l  %conv110 = zext i32 %ret.1 to i64, !dbg !1351\l  ret i64 %conv110, !dbg !1352\l}"];
}
