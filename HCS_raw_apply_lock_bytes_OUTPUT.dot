digraph "CFG for 'raw_apply_lock_bytes' function" {
	label="CFG for 'raw_apply_lock_bytes' function";

	Node0x5558231082f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BDRVRawState* %s, metadata !2932,\l... metadata !DIExpression()), !dbg !2954\l  call void @llvm.dbg.value(metadata i32 %fd, metadata !2933, metadata\l... !DIExpression()), !dbg !2954\l  call void @llvm.dbg.value(metadata i64 %perm_lock_bits, metadata !2934,\l... metadata !DIExpression()), !dbg !2954\l  call void @llvm.dbg.value(metadata i64 %shared_perm_lock_bits, metadata\l... !2935, metadata !DIExpression()), !dbg !2954\l  call void @llvm.dbg.value(metadata i1 %unlock, metadata !2936, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2954\l  call void @llvm.dbg.value(metadata %struct.Error** %errp, metadata !2937,\l... metadata !DIExpression()), !dbg !2954\l  %tobool = icmp ne %struct.BDRVRawState* %s, null, !dbg !2955\l  br i1 %tobool, label %if.then, label %if.else, !dbg !2957, !prof !2958\l|{<s0>T|<s1>F}}"];
	Node0x5558231082f0:s0 -> Node0x555823123780;
	Node0x5558231082f0:s1 -> Node0x555823123860;
	Node0x555823123780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then:                                          \l  %locked_perm1 = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %s, i64 0, i32 7, !dbg !2959\l  %0 = load i64, i64* %locked_perm1, align 8, !dbg !2959\l  call void @llvm.dbg.value(metadata i64 %0, metadata !2940, metadata\l... !DIExpression()), !dbg !2954\l  %locked_shared_perm2 = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %s, i64 0, i32 8, !dbg !2961\l  %1 = load i64, i64* %locked_shared_perm2, align 8, !dbg !2961\l  call void @llvm.dbg.value(metadata i64 %1, metadata !2941, metadata\l... !DIExpression()), !dbg !2954\l  br label %if.end6, !dbg !2962\l}"];
	Node0x555823123780 -> Node0x5558231237f0;
	Node0x555823123860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.else:                                          \l  %. = select i1 %unlock, i64 31, i64 0, !prof !2963\l  br label %if.end6\l}"];
	Node0x555823123860 -> Node0x5558231237f0;
	Node0x5558231237f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end6:                                          \l  %locked_shared_perm.0 = phi i64 [ %1, %if.then ], [ %., %if.else ], !dbg\l... !2964\l  %locked_perm.0 = phi i64 [ %0, %if.then ], [ %., %if.else ], !dbg !2964\l  call void @llvm.dbg.value(metadata i64 %locked_perm.0, metadata !2940,\l... metadata !DIExpression()), !dbg !2954\l  call void @llvm.dbg.value(metadata i64 %locked_shared_perm.0, metadata\l... !2941, metadata !DIExpression()), !dbg !2954\l  call void @llvm.dbg.value(metadata i32 0, metadata !2939, metadata\l... !DIExpression()), !dbg !2954\l  %unlock.not = xor i1 %unlock, true, !dbg !2965\l  %locked_perm38 = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %s, i64 0, i32 7, !dbg !2968\l  br label %for.body, !dbg !2973\l}"];
	Node0x5558231237f0 -> Node0x555823125400;
	Node0x5558230e4130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{for.cond45.preheader:                             \l  call void @llvm.dbg.value(metadata i32 0, metadata !2939, metadata\l... !DIExpression()), !dbg !2954\l  %locked_shared_perm91 = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %s, i64 0, i32 8, !dbg !2974\l  br label %for.body50, !dbg !2981\l}"];
	Node0x5558230e4130 -> Node0x55582312d220;
	Node0x555823125400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %indvars.iv196 = phi i64 [ 0, %if.end6 ], [ %indvars.iv.next197, %for.inc ]\l  %shl190 = phi i64 [ 1, %if.end6 ], [ %shl, %for.inc ]\l  call void @llvm.dbg.value(metadata i64 %indvars.iv196, metadata !2939,\l... metadata !DIExpression()), !dbg !2954\l  %2 = add nuw nsw i64 %indvars.iv196, 100, !dbg !2982\l  call void @llvm.dbg.value(metadata i64 %2, metadata !2942, metadata\l... !DIExpression()), !dbg !2983\l  call void @llvm.dbg.value(metadata i64 %shl190, metadata !2946, metadata\l... !DIExpression()), !dbg !2983\l  %and = and i64 %shl190, %perm_lock_bits, !dbg !2984\l  %tobool9 = icmp ne i64 %and, 0, !dbg !2984\l  %and10 = and i64 %shl190, %locked_perm.0, !dbg !2985\l  %tobool11 = icmp eq i64 %and10, 0, !dbg !2985\l  %or.cond = and i1 %tobool9, %tobool11, !dbg !2986\l  br i1 %or.cond, label %if.then12, label %if.else21, !dbg !2986, !prof !2987\l|{<s0>T|<s1>F}}"];
	Node0x555823125400:s0 -> Node0x5558231266f0;
	Node0x555823125400:s1 -> Node0x5558231267d0;
	Node0x5558231266f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then12:                                        \l  %call = tail call i32 @qemu_lock_fd(i32 %fd, i64 %2, i64 1, i1 zeroext\l... false) #19, !dbg !2988\l  call void @llvm.dbg.value(metadata i32 %call, metadata !2938, metadata\l... !DIExpression()), !dbg !2954\l  %tobool13 = icmp eq i32 %call, 0, !dbg !2990\l  br i1 %tobool13, label %if.else15, label %if.then14, !dbg !2992, !prof !2993\l|{<s0>T|<s1>F}}"];
	Node0x5558231266f0:s0 -> Node0x555823127e50;
	Node0x5558231266f0:s1 -> Node0x555823127db0;
	Node0x555823127db0 [shape=record,penwidth=3.0, color="red",label="{if.then14:                                        \l  %.lcssa218 = phi i64 [ %2, %if.then12 ], !dbg !2982\l  %call.lcssa = phi i32 [ %call, %if.then12 ], !dbg !2988\l  %3 = trunc i64 %.lcssa218 to i32, !dbg !2994\l  tail call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([19 x\l... i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 772, i8* getelementptr inbounds\l... ([21 x i8], [21 x i8]* @__func__.raw_apply_lock_bytes, i64 0, i64 0), i8*\l... getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i32\l... %3) #19, !dbg !2994\l  br label %cleanup104, !dbg !2996\l}"];
	Node0x555823127db0 -> Node0x55582312c6e0;
	Node0x555823127e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else15:                                        \l  br i1 %tobool, label %if.then17, label %for.inc, !dbg !2997, !prof !2998\l|{<s0>T|<s1>F}}"];
	Node0x555823127e50:s0 -> Node0x555823128da0;
	Node0x555823127e50:s1 -> Node0x555823125350;
	Node0x555823128da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.then17:                                        \l  %4 = load i64, i64* %locked_perm38, align 8, !dbg !2999\l  %or = or i64 %4, %shl190, !dbg !2999\l  store i64 %or, i64* %locked_perm38, align 8, !dbg !2999\l  br label %for.inc, !dbg !3002\l}"];
	Node0x555823128da0 -> Node0x555823125350;
	Node0x5558231267d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else21:                                        \l  %or.cond170 = or i1 %tobool11, %unlock.not, !dbg !3003\l  %brmerge = or i1 %tobool9, %or.cond170, !dbg !3003\l  br i1 %brmerge, label %for.inc, label %if.then30, !dbg !3003, !prof !3004\l|{<s0>T|<s1>F}}"];
	Node0x5558231267d0:s0 -> Node0x555823125350;
	Node0x5558231267d0:s1 -> Node0x555823129870;
	Node0x555823129870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.then30:                                        \l  %call32 = tail call i32 @qemu_unlock_fd(i32 %fd, i64 %2, i64 1) #19, !dbg\l... !3005\l  call void @llvm.dbg.value(metadata i32 %call32, metadata !2938, metadata\l... !DIExpression()), !dbg !2954\l  %tobool33 = icmp eq i32 %call32, 0, !dbg !3006\l  br i1 %tobool33, label %if.else35, label %if.then34, !dbg !3007, !prof !3008\l|{<s0>T|<s1>F}}"];
	Node0x555823129870:s0 -> Node0x55582312b130;
	Node0x555823129870:s1 -> Node0x55582312b090;
	Node0x55582312b090 [shape=record,penwidth=3.0, color="red",label="{if.then34:                                        \l  %.lcssa217 = phi i64 [ %2, %if.then30 ], !dbg !2982\l  %call32.lcssa = phi i32 [ %call32, %if.then30 ], !dbg !3005\l  %5 = trunc i64 %.lcssa217 to i32, !dbg !3009\l  tail call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([19 x\l... i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 780, i8* getelementptr inbounds\l... ([21 x i8], [21 x i8]* @__func__.raw_apply_lock_bytes, i64 0, i64 0), i8*\l... getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0), i32\l... %5) #19, !dbg !3009\l  br label %cleanup104, !dbg !3011\l}"];
	Node0x55582312b090 -> Node0x55582312c6e0;
	Node0x55582312b130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.else35:                                        \l  br i1 %tobool, label %if.then37, label %for.inc, !dbg !3012, !prof !3008\l|{<s0>T|<s1>F}}"];
	Node0x55582312b130:s0 -> Node0x55582312b580;
	Node0x55582312b130:s1 -> Node0x555823125350;
	Node0x55582312b580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{if.then37:                                        \l  %neg = xor i64 %shl190, -1, !dbg !3013\l  %6 = load i64, i64* %locked_perm38, align 8, !dbg !3014\l  %and39 = and i64 %6, %neg, !dbg !3014\l  store i64 %and39, i64* %locked_perm38, align 8, !dbg !3014\l  br label %for.inc, !dbg !3015\l}"];
	Node0x55582312b580 -> Node0x555823125350;
	Node0x555823125350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %indvars.iv.next197 = add nuw nsw i64 %indvars.iv196, 1, !dbg !3016\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next197, metadata !2939,\l... metadata !DIExpression()), !dbg !2954\l  %shl = shl i64 2, %indvars.iv196, !dbg !3016\l  %exitcond199 = icmp eq i64 %indvars.iv.next197, 5, !dbg !3016\l  br i1 %exitcond199, label %for.cond45.preheader, label %for.body, !dbg\l... !2973, !prof !3017, !llvm.loop !3018\l|{<s0>T|<s1>F}}"];
	Node0x555823125350:s0 -> Node0x5558230e4130;
	Node0x555823125350:s1 -> Node0x555823125400;
	Node0x55582312d220 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body50:                                       \l  %indvars.iv = phi i64 [ 0, %for.cond45.preheader ], [ %indvars.iv.next,\l... %for.inc101 ]\l  %shl47188 = phi i64 [ 1, %for.cond45.preheader ], [ %shl47, %for.inc101 ]\l  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2939, metadata\l... !DIExpression()), !dbg !2954\l  %7 = add nuw nsw i64 %indvars.iv, 200, !dbg !3020\l  call void @llvm.dbg.value(metadata i64 %7, metadata !2947, metadata\l... !DIExpression()), !dbg !3021\l  call void @llvm.dbg.value(metadata i64 %shl47188, metadata !2951, metadata\l... !DIExpression()), !dbg !3021\l  %and56 = and i64 %shl47188, %shared_perm_lock_bits, !dbg !3022\l  %tobool57 = icmp ne i64 %and56, 0, !dbg !3022\l  %and59 = and i64 %shl47188, %locked_shared_perm.0, !dbg !3023\l  %tobool60 = icmp eq i64 %and59, 0, !dbg !3023\l  %or.cond171 = and i1 %tobool57, %tobool60, !dbg !3024\l  br i1 %or.cond171, label %if.then61, label %if.else73, !dbg !3024, !prof\l... !3025\l|{<s0>T|<s1>F}}"];
	Node0x55582312d220:s0 -> Node0x555823128050;
	Node0x55582312d220:s1 -> Node0x555823128130;
	Node0x555823128050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{if.then61:                                        \l  %call63 = tail call i32 @qemu_lock_fd(i32 %fd, i64 %7, i64 1, i1 zeroext\l... false) #19, !dbg !3026\l  call void @llvm.dbg.value(metadata i32 %call63, metadata !2938, metadata\l... !DIExpression()), !dbg !2954\l  %tobool64 = icmp eq i32 %call63, 0, !dbg !3028\l  br i1 %tobool64, label %if.else66, label %if.then65, !dbg !3030, !prof !3031\l|{<s0>T|<s1>F}}"];
	Node0x555823128050:s0 -> Node0x55582312f8f0;
	Node0x555823128050:s1 -> Node0x55582312f810;
	Node0x55582312f810 [shape=record,penwidth=3.0, color="red",label="{if.then65:                                        \l  %.lcssa215 = phi i64 [ %7, %if.then61 ], !dbg !3020\l  %call63.lcssa = phi i32 [ %call63, %if.then61 ], !dbg !3026\l  %8 = trunc i64 %.lcssa215 to i32, !dbg !3032\l  tail call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([19 x\l... i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 793, i8* getelementptr inbounds\l... ([21 x i8], [21 x i8]* @__func__.raw_apply_lock_bytes, i64 0, i64 0), i8*\l... getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i32\l... %8) #19, !dbg !3032\l  br label %cleanup104, !dbg !3034\l}"];
	Node0x55582312f810 -> Node0x55582312c6e0;
	Node0x55582312f8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{if.else66:                                        \l  br i1 %tobool, label %if.then68, label %for.inc101, !dbg !3035, !prof !3036\l|{<s0>T|<s1>F}}"];
	Node0x55582312f8f0:s0 -> Node0x5558231303b0;
	Node0x55582312f8f0:s1 -> Node0x55582312d190;
	Node0x5558231303b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.then68:                                        \l  %9 = load i64, i64* %locked_shared_perm91, align 8, !dbg !3037\l  %or70 = or i64 %9, %shl47188, !dbg !3037\l  store i64 %or70, i64* %locked_shared_perm91, align 8, !dbg !3037\l  br label %for.inc101, !dbg !3040\l}"];
	Node0x5558231303b0 -> Node0x55582312d190;
	Node0x555823128130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else73:                                        \l  %or.cond173 = or i1 %tobool60, %unlock.not, !dbg !3041\l  %brmerge174 = or i1 %tobool57, %or.cond173, !dbg !3041\l  br i1 %brmerge174, label %for.inc101, label %if.then82, !dbg !3041, !prof\l... !3042\l|{<s0>T|<s1>F}}"];
	Node0x555823128130:s0 -> Node0x55582312d190;
	Node0x555823128130:s1 -> Node0x555823130e80;
	Node0x555823130e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.then82:                                        \l  %call84 = tail call i32 @qemu_unlock_fd(i32 %fd, i64 %7, i64 1) #19, !dbg\l... !3043\l  call void @llvm.dbg.value(metadata i32 %call84, metadata !2938, metadata\l... !DIExpression()), !dbg !2954\l  %tobool85 = icmp eq i32 %call84, 0, !dbg !3044\l  br i1 %tobool85, label %if.else87, label %if.then86, !dbg !3045, !prof !3046\l|{<s0>T|<s1>F}}"];
	Node0x555823130e80:s0 -> Node0x555823131f90;
	Node0x555823130e80:s1 -> Node0x555823131eb0;
	Node0x555823131eb0 [shape=record,penwidth=3.0, color="red",label="{if.then86:                                        \l  %.lcssa = phi i64 [ %7, %if.then82 ], !dbg !3020\l  %call84.lcssa = phi i32 [ %call84, %if.then82 ], !dbg !3043\l  %10 = trunc i64 %.lcssa to i32, !dbg !3047\l  tail call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([19 x\l... i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 802, i8* getelementptr inbounds\l... ([21 x i8], [21 x i8]* @__func__.raw_apply_lock_bytes, i64 0, i64 0), i8*\l... getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0), i32\l... %10) #19, !dbg !3047\l  br label %cleanup104, !dbg !3049\l}"];
	Node0x555823131eb0 -> Node0x55582312c6e0;
	Node0x555823131f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.else87:                                        \l  br i1 %tobool, label %if.then89, label %for.inc101, !dbg !3050, !prof !3046\l|{<s0>T|<s1>F}}"];
	Node0x555823131f90:s0 -> Node0x555823132420;
	Node0x555823131f90:s1 -> Node0x55582312d190;
	Node0x555823132420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.then89:                                        \l  %neg90 = xor i64 %shl47188, -1, !dbg !3051\l  %11 = load i64, i64* %locked_shared_perm91, align 8, !dbg !3052\l  %and92 = and i64 %11, %neg90, !dbg !3052\l  store i64 %and92, i64* %locked_shared_perm91, align 8, !dbg !3052\l  br label %for.inc101, !dbg !3053\l}"];
	Node0x555823132420 -> Node0x55582312d190;
	Node0x55582312d190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc101:                                       \l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3054\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !2939,\l... metadata !DIExpression()), !dbg !2954\l  %shl47 = shl i64 2, %indvars.iv, !dbg !3054\l  %exitcond = icmp eq i64 %indvars.iv.next, 5, !dbg !3054\l  br i1 %exitcond, label %cleanup104.loopexit, label %for.body50, !dbg !2981,\l... !prof !3017, !llvm.loop !3055\l|{<s0>T|<s1>F}}"];
	Node0x55582312d190:s0 -> Node0x555823105230;
	Node0x55582312d190:s1 -> Node0x55582312d220;
	Node0x555823105230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{cleanup104.loopexit:                              \l  br label %cleanup104, !dbg !3057\l}"];
	Node0x555823105230 -> Node0x55582312c6e0;
	Node0x55582312c6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{cleanup104:                                       \l  %retval.4 = phi i32 [ %call32.lcssa, %if.then34 ], [ %call.lcssa, %if.then14\l... ], [ %call84.lcssa, %if.then86 ], [ %call63.lcssa, %if.then65 ], [ 0,\l... %cleanup104.loopexit ]\l  ret i32 %retval.4, !dbg !3057\l}"];
}
