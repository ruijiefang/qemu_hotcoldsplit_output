digraph "CFG for 'serial_ioport_write' function" {
	label="CFG for 'serial_ioport_write' function";

	Node0x5588d40dab30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %ssp.i368 = alloca %struct.QEMUSerialSetParams, align 4\l  %ssp.i242 = alloca %struct.QEMUSerialSetParams, align 4\l  %ssp.i = alloca %struct.QEMUSerialSetParams, align 4\l  %_now.i.i = alloca %struct.timeval, align 8\l  %break_enable = alloca i32, align 4\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !964, metadata\l... !DIExpression()), !dbg !979\l  call void @llvm.dbg.value(metadata i64 %addr, metadata !965, metadata\l... !DIExpression()), !dbg !979\l  call void @llvm.dbg.value(metadata i64 %val, metadata !966, metadata\l... !DIExpression()), !dbg !979\l  call void @llvm.dbg.value(metadata i32 %size, metadata !967, metadata\l... !DIExpression()), !dbg !979\l  %0 = bitcast i8* %opaque to %struct.SerialState*, !dbg !980\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !968,\l... metadata !DIExpression()), !dbg !979\l  %and = and i64 %addr, 7, !dbg !981\l  call void @llvm.dbg.value(metadata i64 %and, metadata !965, metadata\l... !DIExpression()), !dbg !979\l  %conv = trunc i64 %and to i32, !dbg !982\l  %conv1 = trunc i64 %val to i8, !dbg !983\l  call void @llvm.dbg.value(metadata i64 %and, metadata !984, metadata\l... !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert,\l... 16, DW_ATE_unsigned, DW_OP_stack_value)) #15, !dbg !991\l  call void @llvm.dbg.value(metadata i8 %conv1, metadata !990, metadata\l... !DIExpression()) #15, !dbg !991\l  call void @llvm.dbg.value(metadata i64 %and, metadata !993, metadata\l... !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert,\l... 16, DW_ATE_unsigned, DW_OP_stack_value)) #15, !dbg !1007\l  call void @llvm.dbg.value(metadata i8 %conv1, metadata !996, metadata\l... !DIExpression()) #15, !dbg !1007\l  %1 = load i32, i32* @trace_events_enabled_count, align 4, !dbg !1011\l  %tobool.i.i = icmp eq i32 %1, 0, !dbg !1011\l  %2 = load i16, i16* @_TRACE_SERIAL_IOPORT_WRITE_DSTATE, align 2, !dbg !1011\l  %tobool4.i.i = icmp eq i16 %2, 0, !dbg !1011\l  %or.cond.i.i = or i1 %tobool.i.i, %tobool4.i.i, !dbg !1011\l  br i1 %or.cond.i.i, label %trace_serial_ioport_write.exit, label\l... %land.lhs.true5.i.i, !dbg !1011, !prof !1012, !misexpect !1013\l|{<s0>T|<s1>F}}"];
	Node0x5588d40dab30:s0 -> Node0x5588d411d8c0;
	Node0x5588d40dab30:s1 -> Node0x5588d4101410;
	Node0x5588d4101410 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true5.i.i:                               \l  call void @llvm.dbg.value(metadata i32 32768, metadata !1014, metadata\l... !DIExpression()) #15, !dbg !1020\l  %3 = load i32, i32* @qemu_loglevel, align 4, !dbg !1022\l  %4 = trunc i32 %3 to i16, !dbg !1023\l  %cmp.i.i.i = icmp slt i16 %4, 0, !dbg !1023\l  br i1 %cmp.i.i.i, label %if.then.i.i, label %trace_serial_ioport_write.exit,\l... !dbg !1024\l|{<s0>T|<s1>F}}"];
	Node0x5588d4101410:s0 -> Node0x5588d40e4ec0;
	Node0x5588d4101410:s1 -> Node0x5588d411d8c0;
	Node0x5588d40e4ec0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then.i.i:                                      \l  %5 = bitcast %struct.timeval* %_now.i.i to i8*, !dbg !1025\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15, !dbg !1025\l  call void @llvm.dbg.declare(metadata %struct.timeval* %_now.i.i, metadata\l... !997, metadata !DIExpression()) #15, !dbg !1026\l  %call7.i.i = call i32 @gettimeofday(%struct.timeval* nonnull %_now.i.i,\l... %struct.timezone* null) #15, !dbg !1027\l  %call8.i.i = tail call i32 @qemu_get_thread_id() #15, !dbg !1028\l  %tv_sec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval*\l... %_now.i.i, i64 0, i32 0, !dbg !1029\l  %6 = load i64, i64* %tv_sec.i.i, align 8, !dbg !1029\l  %tv_usec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval*\l... %_now.i.i, i64 0, i32 1, !dbg !1030\l  %7 = load i64, i64* %tv_usec.i.i, align 8, !dbg !1030\l  %8 = trunc i64 %val to i32, !dbg !1031\l  %conv10.i.i = and i32 %8, 255, !dbg !1031\l  %call11.i.i = tail call i32 (i8*, ...) @qemu_log(i8* getelementptr inbounds\l... ([63 x i8], [63 x i8]* @.str.51, i64 0, i64 0), i32 %call8.i.i, i64 %6, i64\l... %7, i32 %conv, i32 %conv10.i.i) #15, !dbg !1032\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15, !dbg !1033\l  br label %trace_serial_ioport_write.exit, !dbg !1034\l}"];
	Node0x5588d40e4ec0 -> Node0x5588d411d8c0;
	Node0x5588d411d8c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{trace_serial_ioport_write.exit:                   \l  switch i64 %and, label %sw.bb [\l    i64 7, label %sw.bb158\l    i64 1, label %sw.bb38\l    i64 2, label %sw.bb97\l    i64 3, label %sw.bb126\l    i64 4, label %sw.bb137\l    i64 5, label %sw.epilog\l    i64 6, label %sw.epilog\l  ], !dbg !1035, !prof !1036\l|{<s0>def|<s1>7|<s2>1|<s3>2|<s4>3|<s5>4|<s6>5|<s7>6}}"];
	Node0x5588d411d8c0:s0 -> Node0x5588d40e5bf0;
	Node0x5588d411d8c0:s1 -> Node0x5588d40ff810;
	Node0x5588d411d8c0:s2 -> Node0x5588d40eeef0;
	Node0x5588d411d8c0:s3 -> Node0x5588d40f5cf0;
	Node0x5588d411d8c0:s4 -> Node0x5588d40f96c0;
	Node0x5588d411d8c0:s5 -> Node0x5588d40fb680;
	Node0x5588d411d8c0:s6 -> Node0x5588d3eef400;
	Node0x5588d411d8c0:s7 -> Node0x5588d3eef400;
	Node0x5588d40e5bf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{sw.bb:                                            \l  %9 = getelementptr inbounds i8, i8* %opaque, i64 143, !dbg !1037\l  %10 = load i8, i8* %9, align 1, !dbg !1037\l  %tobool = icmp slt i8 %10, 0, !dbg !1039\l  br i1 %tobool, label %if.then, label %if.else13, !dbg !1040, !prof !1041\l|{<s0>T|<s1>F}}"];
	Node0x5588d40e5bf0:s0 -> Node0x5588d40e5ce0;
	Node0x5588d40e5bf0:s1 -> Node0x5588d40e5da0;
	Node0x5588d40e5ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{if.then:                                          \l  %cmp = icmp eq i32 %size, 1, !dbg !1042\l  br i1 %cmp, label %if.then5, label %if.else, !dbg !1045, !prof !1046\l|{<s0>T|<s1>F}}"];
	Node0x5588d40e5ce0:s0 -> Node0x5588d40e6260;
	Node0x5588d40e5ce0:s1 -> Node0x5588d40e6340;
	Node0x5588d40e6260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{if.then5:                                         \l  %divider = getelementptr inbounds i8, i8* %opaque, i64 136, !dbg !1047\l  %11 = bitcast i8* %divider to i16*, !dbg !1047\l  %12 = load i16, i16* %11, align 8, !dbg !1047\l  %13 = and i16 %12, -256, !dbg !1049\l  %14 = trunc i64 %val to i16, !dbg !1050\l  %conv9 = or i16 %13, %14, !dbg !1050\l  store i16 %conv9, i16* %11, align 8, !dbg !1051\l  br label %if.end, !dbg !1052\l}"];
	Node0x5588d40e6260 -> Node0x5588d40e62d0;
	Node0x5588d40e6340 [shape=record,penwidth=3.0, color="red",label="{if.else:                                          \l  %conv11 = trunc i64 %val to i16, !dbg !1053\l  %divider12 = getelementptr inbounds i8, i8* %opaque, i64 136, !dbg !1055\l  %15 = bitcast i8* %divider12 to i16*, !dbg !1055\l  store i16 %conv11, i16* %15, align 8, !dbg !1056\l  br label %if.end\l}"];
	Node0x5588d40e6340 -> Node0x5588d40e62d0;
	Node0x5588d40e62d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{if.end:                                           \l  %16 = phi i16 [ %conv11, %if.else ], [ %conv9, %if.then5 ], !dbg !1057\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1062,\l... metadata !DIExpression()) #15, !dbg !1078\l  %17 = bitcast %struct.QEMUSerialSetParams* %ssp.i to i8*, !dbg !1079\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15, !dbg !1079\l  call void @llvm.dbg.declare(metadata %struct.QEMUSerialSetParams* %ssp.i,\l... metadata !1068, metadata !DIExpression()) #15, !dbg !1080\l  call void @llvm.dbg.value(metadata i32 1, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1078\l  %conv.i = zext i8 %10 to i32, !dbg !1081\l  %and.i = and i32 %conv.i, 8, !dbg !1083\l  %tobool.i = icmp eq i32 %and.i, 0, !dbg !1083\l  call void @llvm.dbg.value(metadata i32 undef, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1078\l  call void @llvm.dbg.value(metadata i32 undef, metadata !1064, metadata\l... !DIExpression()) #15, !dbg !1078\l  %18 = and i8 %10, 4, !dbg !1084\l  %tobool11.i = icmp eq i8 %18, 0, !dbg !1084\l  %.52.i = select i1 %tobool11.i, i32 1, i32 2, !prof !1086\l  call void @llvm.dbg.value(metadata i32 %.52.i, metadata !1066, metadata\l... !DIExpression()) #15, !dbg !1078\l  %19 = and i8 %10, 3, !dbg !1087\l  %narrow.i = add nuw nsw i8 %19, 5, !dbg !1088\l  %add.i = zext i8 %narrow.i to i32, !dbg !1088\l  call void @llvm.dbg.value(metadata i32 %add.i, metadata !1065, metadata\l... !DIExpression()) #15, !dbg !1078\l  %cmp.i = icmp eq i16 %16, 0, !dbg !1089\l  br i1 %cmp.i, label %serial_update_parameters.exit, label %cond.false.i,\l... !dbg !1090, !prof !1091\l|{<s0>T|<s1>F}}"];
	Node0x5588d40e62d0:s0 -> Node0x5588d42a7590;
	Node0x5588d40e62d0:s1 -> Node0x5588d4106890;
	Node0x5588d4106890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{cond.false.i:                                     \l  %baudbase.i = getelementptr inbounds i8, i8* %opaque, i64 228, !dbg !1092\l  %20 = bitcast i8* %baudbase.i to i32*, !dbg !1092\l  %21 = load i32, i32* %20, align 4, !dbg !1092\l  %conv22.i = uitofp i32 %21 to float, !dbg !1093\l  %conv25.i = uitofp i16 %16 to float, !dbg !1094\l  %div.i = fdiv float %conv22.i, %conv25.i, !dbg !1095\l  br label %serial_update_parameters.exit, !dbg !1090\l}"];
	Node0x5588d4106890 -> Node0x5588d42a7590;
	Node0x5588d42a7590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{serial_update_parameters.exit:                    \l  %cond.i = phi float [ %div.i, %cond.false.i ], [ 3.500000e+03, %if.end ],\l... !dbg !1090\l  %frame_size.0.i = select i1 %tobool.i, i32 1, i32 2, !dbg !1096, !prof !1086\l  call void @llvm.dbg.value(metadata i32 %frame_size.0.i, metadata !1067,\l... metadata !DIExpression()) #15, !dbg !1078\l  %and3.i = and i32 %conv.i, 16, !dbg !1096\l  %tobool4.i = icmp eq i32 %and3.i, 0, !dbg !1096\l  %..i = select i1 %tobool4.i, i32 79, i32 69, !dbg !1096, !prof !1097\l  %parity.0.i = select i1 %tobool.i, i32 78, i32 %..i, !dbg !1096, !prof !1086\l  call void @llvm.dbg.value(metadata i32 %parity.0.i, metadata !1064, metadata\l... !DIExpression()) #15, !dbg !1078\l  %add18.i = add nuw nsw i32 %.52.i, %add.i, !dbg !1098\l  %add19.i = add nuw nsw i32 %add18.i, %frame_size.0.i, !dbg !1099\l  call void @llvm.dbg.value(metadata i32 %add19.i, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1078\l  call void @llvm.dbg.value(metadata float %cond.i, metadata !1063, metadata\l... !DIExpression()) #15, !dbg !1078\l  %conv26.i = fptosi float %cond.i to i32, !dbg !1100\l  %speed27.i = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i, i64 0, i32 0, !dbg !1101\l  store i32 %conv26.i, i32* %speed27.i, align 4, !dbg !1102\l  %parity28.i = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i, i64 0, i32 1, !dbg !1103\l  store i32 %parity.0.i, i32* %parity28.i, align 4, !dbg !1104\l  %data_bits29.i = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i, i64 0, i32 2, !dbg !1105\l  store i32 %add.i, i32* %data_bits29.i, align 4, !dbg !1106\l  %stop_bits30.i = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i, i64 0, i32 3, !dbg !1107\l  store i32 %.52.i, i32* %stop_bits30.i, align 4, !dbg !1108\l  %div31.i = fdiv float 1.000000e+09, %cond.i, !dbg !1109\l  %conv32.i = sitofp i32 %add19.i to float, !dbg !1110\l  %mul.i = fmul float %div31.i, %conv32.i, !dbg !1111\l  %conv33.i = fptoui float %mul.i to i64, !dbg !1112\l  %char_transmit_time.i = getelementptr inbounds i8, i8* %opaque, i64 328,\l... !dbg !1113\l  %22 = bitcast i8* %char_transmit_time.i to i64*, !dbg !1113\l  store i64 %conv33.i, i64* %22, align 8, !dbg !1114\l  %chr.i = getelementptr inbounds i8, i8* %opaque, i64 168, !dbg !1115\l  %23 = bitcast i8* %chr.i to %struct.CharBackend*, !dbg !1115\l  %call.i = call i32 @qemu_chr_fe_ioctl(%struct.CharBackend* nonnull %23, i32\l... 1, i8* nonnull %17) #15, !dbg !1116\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15, !dbg !1117\l  br label %sw.epilog, !dbg !1118\l}"];
	Node0x5588d42a7590 -> Node0x5588d3eef400;
	Node0x5588d40e5da0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else13:                                        \l  %24 = getelementptr inbounds i8, i8* %opaque, i64 139, !dbg !1119\l  store i8 %conv1, i8* %24, align 1, !dbg !1121\l  %25 = getelementptr inbounds i8, i8* %opaque, i64 148, !dbg !1122\l  %26 = load i8, i8* %25, align 4, !dbg !1122\l  %27 = and i8 %26, 1, !dbg !1124\l  %tobool17 = icmp eq i8 %27, 0, !dbg !1124\l  br i1 %tobool17, label %if.end25, label %if.then18, !dbg !1125, !prof !1126\l|{<s0>T|<s1>F}}"];
	Node0x5588d40e5da0:s0 -> Node0x5588d4094620;
	Node0x5588d40e5da0:s1 -> Node0x5588d40945b0;
	Node0x5588d40945b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.then18:                                        \l  %xmit_fifo = getelementptr inbounds i8, i8* %opaque, i64 280, !dbg !1127\l  %28 = bitcast i8* %xmit_fifo to %struct.Fifo8*, !dbg !1127\l  %call = tail call zeroext i1 @fifo8_is_full(%struct.Fifo8* nonnull %28) #15,\l... !dbg !1130\l  br i1 %call, label %if.then19, label %if.end22, !dbg !1131, !prof !1132\l|{<s0>T|<s1>F}}"];
	Node0x5588d40945b0:s0 -> Node0x5588d4094d00;
	Node0x5588d40945b0:s1 -> Node0x5588d4094d50;
	Node0x5588d4094d00 [shape=record,penwidth=3.0, color="red",label="{if.then19:                                        \l  %call21 = tail call zeroext i8 @fifo8_pop(%struct.Fifo8* nonnull %28) #15,\l... !dbg !1133\l  br label %if.end22, !dbg !1135\l}"];
	Node0x5588d4094d00 -> Node0x5588d4094d50;
	Node0x5588d4094d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.end22:                                         \l  %29 = load i8, i8* %24, align 1, !dbg !1136\l  tail call void @fifo8_push(%struct.Fifo8* nonnull %28, i8 zeroext %29) #15,\l... !dbg !1137\l  br label %if.end25, !dbg !1138\l}"];
	Node0x5588d4094d50 -> Node0x5588d4094620;
	Node0x5588d4094620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end25:                                         \l  %thr_ipending = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg !1139\l  %30 = bitcast i8* %thr_ipending to i32*, !dbg !1139\l  store i32 0, i32* %30, align 8, !dbg !1140\l  %31 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1141\l  %32 = load i8, i8* %31, align 1, !dbg !1142\l  %33 = and i8 %32, -97, !dbg !1143\l  store i8 %33, i8* %31, align 1, !dbg !1143\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1144,\l... metadata !DIExpression()) #15, !dbg !1148\l  call void @llvm.dbg.value(metadata i8 1, metadata !1147, metadata\l... !DIExpression()) #15, !dbg !1148\l  %34 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1150\l  %35 = load i8, i8* %34, align 1, !dbg !1150\l  %36 = and i8 %35, 4, !dbg !1152\l  %tobool.i239 = icmp eq i8 %36, 0, !dbg !1152\l  %37 = and i8 %32, 30, !dbg !1153\l  %tobool3.i = icmp eq i8 %37, 0, !dbg !1153\l  %or.cond405 = or i1 %tobool.i239, %tobool3.i, !dbg !1154\l  br i1 %or.cond405, label %if.else.i, label %if.end49.i, !dbg !1154, !prof\l... !1155\l|{<s0>T|<s1>F}}"];
	Node0x5588d4094620:s0 -> Node0x5588d42a7d80;
	Node0x5588d4094620:s1 -> Node0x5588d42667e0;
	Node0x5588d42a7d80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else.i:                                        \l  %38 = and i8 %35, 1, !dbg !1156\l  %tobool7.i = icmp eq i8 %38, 0, !dbg !1156\l  br i1 %tobool7.i, label %if.else36.i, label %land.lhs.true8.i, !dbg !1158,\l... !prof !1159\l|{<s0>T|<s1>F}}"];
	Node0x5588d42a7d80:s0 -> Node0x5588d4276710;
	Node0x5588d42a7d80:s1 -> Node0x5588d4298020;
	Node0x5588d4298020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{land.lhs.true8.i:                                 \l  %timeout_ipending.i = getelementptr inbounds i8, i8* %opaque, i64 320, !dbg\l... !1160\l  %39 = bitcast i8* %timeout_ipending.i to i32*, !dbg !1160\l  %40 = load i32, i32* %39, align 16, !dbg !1160\l  %tobool9.i = icmp eq i32 %40, 0, !dbg !1161\l  br i1 %tobool9.i, label %land.lhs.true16.i, label %if.end49.i, !dbg !1162,\l... !prof !1163\l|{<s0>T|<s1>F}}"];
	Node0x5588d4298020:s0 -> Node0x5588d42a0630;
	Node0x5588d4298020:s1 -> Node0x5588d42667e0;
	Node0x5588d42a0630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{land.lhs.true16.i:                                \l  %41 = and i8 %32, 1, !dbg !1164\l  %tobool20.i = icmp eq i8 %41, 0, !dbg !1164\l  br i1 %tobool20.i, label %if.else36.i, label %land.lhs.true21.i, !dbg !1166,\l... !prof !1163\l|{<s0>T|<s1>F}}"];
	Node0x5588d42a0630:s0 -> Node0x5588d4276710;
	Node0x5588d42a0630:s1 -> Node0x5588d42a09e0;
	Node0x5588d42a09e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true21.i:                                \l  %42 = load i8, i8* %25, align 4, !dbg !1167\l  %43 = and i8 %42, 1, !dbg !1168\l  %tobool24.i = icmp eq i8 %43, 0, !dbg !1168\l  br i1 %tobool24.i, label %if.end49.i, label %lor.lhs.false.i, !dbg !1169\l|{<s0>T|<s1>F}}"];
	Node0x5588d42a09e0:s0 -> Node0x5588d42667e0;
	Node0x5588d42a09e0:s1 -> Node0x5588d42a0de0;
	Node0x5588d42a0de0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false.i:                                  \l  %num.i = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !1170\l  %44 = bitcast i8* %num.i to i32*, !dbg !1170\l  %45 = load i32, i32* %44, align 16, !dbg !1170\l  %46 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1171\l  %47 = load i8, i8* %46, align 16, !dbg !1171\l  %conv25.i240 = zext i8 %47 to i32, !dbg !1172\l  %cmp.i241 = icmp ult i32 %45, %conv25.i240, !dbg !1173\l  br i1 %cmp.i241, label %if.else36.i, label %if.end49.i, !dbg !1174\l|{<s0>T|<s1>F}}"];
	Node0x5588d42a0de0:s0 -> Node0x5588d4276710;
	Node0x5588d42a0de0:s1 -> Node0x5588d42667e0;
	Node0x5588d4276710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else36.i:                                      \l  %48 = and i8 %35, 8, !dbg !1175\l  %tobool40.i = icmp eq i8 %48, 0, !dbg !1175\l  br i1 %tobool40.i, label %if.end49.i, label %land.lhs.true41.i, !dbg !1178,\l... !prof !1179\l|{<s0>T|<s1>F}}"];
	Node0x5588d4276710:s0 -> Node0x5588d42667e0;
	Node0x5588d4276710:s1 -> Node0x5588d4276990;
	Node0x5588d4276990 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true41.i:                                \l  %49 = getelementptr inbounds i8, i8* %opaque, i64 146, !dbg !1180\l  %50 = load i8, i8* %49, align 2, !dbg !1180\l  %51 = and i8 %50, 15, !dbg !1181\l  %tobool44.i = icmp eq i8 %51, 0, !dbg !1181\l  %spec.select.i = zext i1 %tobool44.i to i32, !dbg !1182\l  br label %if.end49.i, !dbg !1182\l}"];
	Node0x5588d4276990 -> Node0x5588d42667e0;
	Node0x5588d42667e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end49.i:                                       \l  %tmp_iir.0.i = phi i32 [ 12, %land.lhs.true8.i ], [ 4, %land.lhs.true21.i ],\l... [ %spec.select.i, %land.lhs.true41.i ], [ 4, %lor.lhs.false.i ], [ 1,\l... %if.else36.i ], [ 6, %if.end25 ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !1147, metadata\l... !DIExpression()) #15, !dbg !1148\l  %52 = getelementptr inbounds i8, i8* %opaque, i64 142, !dbg !1183\l  %53 = load i8, i8* %52, align 2, !dbg !1183\l  %54 = and i8 %53, -16, !dbg !1184\l  %55 = trunc i32 %tmp_iir.0.i to i8, !dbg !1185\l  %conv53.i = or i8 %54, %55, !dbg !1185\l  store i8 %conv53.i, i8* %52, align 2, !dbg !1186\l  %cmp56.i = icmp ne i32 %tmp_iir.0.i, 1, !dbg !1187\l  %irq.i = getelementptr inbounds i8, i8* %opaque, i64 160, !dbg !1189\l  %56 = bitcast i8* %irq.i to %struct.IRQState**, !dbg !1189\l  %57 = load %struct.IRQState*, %struct.IRQState** %56, align 16, !dbg !1189\l  %.sink = zext i1 %cmp56.i to i32, !dbg !1190\l  tail call void @qemu_set_irq(%struct.IRQState* %57, i32 %.sink) #15, !dbg\l... !1189\l  %tsr_retry = getelementptr inbounds i8, i8* %opaque, i64 232, !dbg !1191\l  %58 = bitcast i8* %tsr_retry to i32*, !dbg !1191\l  %59 = load i32, i32* %58, align 8, !dbg !1191\l  %cmp33 = icmp eq i32 %59, 0, !dbg !1193\l  br i1 %cmp33, label %if.then35, label %sw.epilog, !dbg !1194, !prof !1195\l|{<s0>T|<s1>F}}"];
	Node0x5588d42667e0:s0 -> Node0x5588d4096de0;
	Node0x5588d42667e0:s1 -> Node0x5588d3eef400;
	Node0x5588d4096de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then35:                                        \l  tail call fastcc void @serial_xmit(%struct.SerialState* nonnull %0), !dbg\l... !1196\l  br label %sw.epilog, !dbg !1198\l}"];
	Node0x5588d4096de0 -> Node0x5588d3eef400;
	Node0x5588d40eeef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{sw.bb38:                                          \l  %60 = getelementptr inbounds i8, i8* %opaque, i64 143, !dbg !1199\l  %61 = load i8, i8* %60, align 1, !dbg !1199\l  %tobool42 = icmp slt i8 %61, 0, !dbg !1200\l  br i1 %tobool42, label %if.then43, label %if.else51, !dbg !1201, !prof !1202\l|{<s0>T|<s1>F}}"];
	Node0x5588d40eeef0:s0 -> Node0x5588d40eefe0;
	Node0x5588d40eeef0:s1 -> Node0x5588d40ef080;
	Node0x5588d40eefe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{if.then43:                                        \l  %divider44 = getelementptr inbounds i8, i8* %opaque, i64 136, !dbg !1203\l  %62 = bitcast i8* %divider44 to i16*, !dbg !1203\l  %63 = load i16, i16* %62, align 8, !dbg !1203\l  %64 = and i16 %63, 255, !dbg !1205\l  %val.tr = trunc i64 %val to i16, !dbg !1206\l  %65 = shl i16 %val.tr, 8, !dbg !1206\l  %conv49 = or i16 %64, %65, !dbg !1206\l  store i16 %conv49, i16* %62, align 8, !dbg !1207\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1062,\l... metadata !DIExpression()) #15, !dbg !1208\l  %66 = bitcast %struct.QEMUSerialSetParams* %ssp.i242 to i8*, !dbg !1210\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #15, !dbg !1210\l  call void @llvm.dbg.declare(metadata %struct.QEMUSerialSetParams* %ssp.i242,\l... metadata !1068, metadata !DIExpression()) #15, !dbg !1211\l  call void @llvm.dbg.value(metadata i32 1, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1208\l  %conv.i244 = zext i8 %61 to i32, !dbg !1212\l  %and.i245 = and i32 %conv.i244, 8, !dbg !1213\l  %tobool.i246 = icmp eq i32 %and.i245, 0, !dbg !1213\l  call void @llvm.dbg.value(metadata i32 undef, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1208\l  call void @llvm.dbg.value(metadata i32 undef, metadata !1064, metadata\l... !DIExpression()) #15, !dbg !1208\l  %67 = and i8 %61, 4, !dbg !1214\l  %tobool11.i247 = icmp eq i8 %67, 0, !dbg !1214\l  %.52.i248 = select i1 %tobool11.i247, i32 1, i32 2, !prof !1086\l  call void @llvm.dbg.value(metadata i32 %.52.i248, metadata !1066, metadata\l... !DIExpression()) #15, !dbg !1208\l  %68 = and i8 %61, 3, !dbg !1215\l  %narrow.i249 = add nuw nsw i8 %68, 5, !dbg !1216\l  %add.i250 = zext i8 %narrow.i249 to i32, !dbg !1216\l  call void @llvm.dbg.value(metadata i32 %add.i250, metadata !1065, metadata\l... !DIExpression()) #15, !dbg !1208\l  %cmp.i252 = icmp eq i16 %conv49, 0, !dbg !1217\l  br i1 %cmp.i252, label %serial_update_parameters.exit278, label\l... %cond.false.i257, !dbg !1218, !prof !1091\l|{<s0>T|<s1>F}}"];
	Node0x5588d40eefe0:s0 -> Node0x5588d40ec350;
	Node0x5588d40eefe0:s1 -> Node0x5588d42c1640;
	Node0x5588d42c1640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{cond.false.i257:                                  \l  %baudbase.i253 = getelementptr inbounds i8, i8* %opaque, i64 228, !dbg !1219\l  %69 = bitcast i8* %baudbase.i253 to i32*, !dbg !1219\l  %70 = load i32, i32* %69, align 4, !dbg !1219\l  %conv22.i254 = uitofp i32 %70 to float, !dbg !1220\l  %conv25.i255 = uitofp i16 %conv49 to float, !dbg !1221\l  %div.i256 = fdiv float %conv22.i254, %conv25.i255, !dbg !1222\l  br label %serial_update_parameters.exit278, !dbg !1218\l}"];
	Node0x5588d42c1640 -> Node0x5588d40ec350;
	Node0x5588d40ec350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{serial_update_parameters.exit278:                 \l  %cond.i258 = phi float [ %div.i256, %cond.false.i257 ], [ 3.500000e+03,\l... %if.then43 ], !dbg !1218\l  %frame_size.0.i259 = select i1 %tobool.i246, i32 1, i32 2, !dbg !1223, !prof\l... !1086\l  call void @llvm.dbg.value(metadata i32 %frame_size.0.i259, metadata !1067,\l... metadata !DIExpression()) #15, !dbg !1208\l  %and3.i260 = and i32 %conv.i244, 16, !dbg !1223\l  %tobool4.i261 = icmp eq i32 %and3.i260, 0, !dbg !1223\l  %..i262 = select i1 %tobool4.i261, i32 79, i32 69, !dbg !1223, !prof !1097\l  %parity.0.i263 = select i1 %tobool.i246, i32 78, i32 %..i262, !dbg !1223,\l... !prof !1086\l  call void @llvm.dbg.value(metadata i32 %parity.0.i263, metadata !1064,\l... metadata !DIExpression()) #15, !dbg !1208\l  %add18.i264 = add nuw nsw i32 %.52.i248, %add.i250, !dbg !1224\l  %add19.i265 = add nuw nsw i32 %add18.i264, %frame_size.0.i259, !dbg !1225\l  call void @llvm.dbg.value(metadata i32 %add19.i265, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1208\l  call void @llvm.dbg.value(metadata float %cond.i258, metadata !1063,\l... metadata !DIExpression()) #15, !dbg !1208\l  %conv26.i266 = fptosi float %cond.i258 to i32, !dbg !1226\l  %speed27.i267 = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i242, i64 0, i32 0, !dbg !1227\l  store i32 %conv26.i266, i32* %speed27.i267, align 4, !dbg !1228\l  %parity28.i268 = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i242, i64 0, i32 1, !dbg !1229\l  store i32 %parity.0.i263, i32* %parity28.i268, align 4, !dbg !1230\l  %data_bits29.i269 = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i242, i64 0, i32 2, !dbg !1231\l  store i32 %add.i250, i32* %data_bits29.i269, align 4, !dbg !1232\l  %stop_bits30.i270 = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i242, i64 0, i32 3, !dbg !1233\l  store i32 %.52.i248, i32* %stop_bits30.i270, align 4, !dbg !1234\l  %div31.i271 = fdiv float 1.000000e+09, %cond.i258, !dbg !1235\l  %conv32.i272 = sitofp i32 %add19.i265 to float, !dbg !1236\l  %mul.i273 = fmul float %div31.i271, %conv32.i272, !dbg !1237\l  %conv33.i274 = fptoui float %mul.i273 to i64, !dbg !1238\l  %char_transmit_time.i275 = getelementptr inbounds i8, i8* %opaque, i64 328,\l... !dbg !1239\l  %71 = bitcast i8* %char_transmit_time.i275 to i64*, !dbg !1239\l  store i64 %conv33.i274, i64* %71, align 8, !dbg !1240\l  %chr.i276 = getelementptr inbounds i8, i8* %opaque, i64 168, !dbg !1241\l  %72 = bitcast i8* %chr.i276 to %struct.CharBackend*, !dbg !1241\l  %call.i277 = call i32 @qemu_chr_fe_ioctl(%struct.CharBackend* nonnull %72,\l... i32 1, i8* nonnull %66) #15, !dbg !1242\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #15, !dbg !1243\l  br label %sw.epilog, !dbg !1244\l}"];
	Node0x5588d40ec350 -> Node0x5588d3eef400;
	Node0x5588d40ef080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.else51:                                        \l  %73 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1245\l  %74 = load i8, i8* %73, align 1, !dbg !1245\l  %75 = xor i8 %74, %conv1, !dbg !1246\l  %conv54 = and i8 %75, 15, !dbg !1246\l  call void @llvm.dbg.value(metadata i8 %conv54, metadata !969, metadata\l... !DIExpression()), !dbg !1247\l  %conv56 = and i8 %conv1, 15, !dbg !1248\l  store i8 %conv56, i8* %73, align 1, !dbg !1249\l  %conv58 = zext i8 %conv54 to i32, !dbg !1250\l  %and59 = and i32 %conv58, 8, !dbg !1252\l  %tobool60 = icmp eq i32 %and59, 0, !dbg !1252\l  br i1 %tobool60, label %if.end73, label %land.lhs.true, !dbg !1253, !prof\l... !1254\l|{<s0>T|<s1>F}}"];
	Node0x5588d40ef080:s0 -> Node0x5588d40f1320;
	Node0x5588d40ef080:s1 -> Node0x5588d40f1390;
	Node0x5588d40f1390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{land.lhs.true:                                    \l  %poll_msl = getelementptr inbounds i8, i8* %opaque, i64 336, !dbg !1255\l  %76 = bitcast i8* %poll_msl to i32*, !dbg !1255\l  %77 = load i32, i32* %76, align 16, !dbg !1255\l  %cmp61 = icmp sgt i32 %77, -1, !dbg !1256\l  br i1 %cmp61, label %if.then63, label %if.end73, !dbg !1257, !prof !1258\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f1390:s0 -> Node0x5588d40f12b0;
	Node0x5588d40f1390:s1 -> Node0x5588d40f1320;
	Node0x5588d40f12b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then63:                                        \l  %and66238 = and i64 %val, 8, !dbg !1259\l  %tobool67 = icmp eq i64 %and66238, 0, !dbg !1259\l  br i1 %tobool67, label %if.else70, label %if.then68, !dbg !1262\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f12b0:s0 -> Node0x5588d40f1e50;
	Node0x5588d40f12b0:s1 -> Node0x5588d40f1db0;
	Node0x5588d40f1db0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then68:                                        \l  store i32 1, i32* %76, align 16, !dbg !1263\l  tail call void @serial_update_msl(%struct.SerialState* nonnull %0), !dbg\l... !1265\l  br label %if.end73, !dbg !1266\l}"];
	Node0x5588d40f1db0 -> Node0x5588d40f1320;
	Node0x5588d40f1e50 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else70:                                        \l  %modem_status_poll = getelementptr inbounds i8, i8* %opaque, i64 344, !dbg\l... !1267\l  %78 = bitcast i8* %modem_status_poll to %struct.QEMUTimer**, !dbg !1267\l  %79 = load %struct.QEMUTimer*, %struct.QEMUTimer** %78, align 8, !dbg !1267\l  tail call void @timer_del(%struct.QEMUTimer* %79) #15, !dbg !1269\l  store i32 0, i32* %76, align 16, !dbg !1270\l  br label %if.end73\l}"];
	Node0x5588d40f1e50 -> Node0x5588d40f1320;
	Node0x5588d40f1320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end73:                                         \l  %and75 = and i32 %conv58, 2, !dbg !1271\l  %tobool76 = icmp eq i32 %and75, 0, !dbg !1271\l  br i1 %tobool76, label %if.end92, label %if.then77, !dbg !1273, !prof !1274\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f1320:s0 -> Node0x5588d40f38c0;
	Node0x5588d40f1320:s1 -> Node0x5588d40f3870;
	Node0x5588d40f3870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.then77:                                        \l  %80 = load i8, i8* %73, align 1, !dbg !1275\l  %81 = and i8 %80, 2, !dbg !1278\l  %tobool81 = icmp eq i8 %81, 0, !dbg !1278\l  br i1 %tobool81, label %if.else89, label %land.lhs.true82, !dbg !1279, !prof\l... !1280\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f3870:s0 -> Node0x5588d40f3e80;
	Node0x5588d40f3870:s1 -> Node0x5588d40f3ef0;
	Node0x5588d40f3ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{land.lhs.true82:                                  \l  %82 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1281\l  %83 = load i8, i8* %82, align 1, !dbg !1281\l  %84 = and i8 %83, 32, !dbg !1282\l  %tobool86 = icmp eq i8 %84, 0, !dbg !1282\l  br i1 %tobool86, label %if.else89, label %if.end92.sink.split, !dbg !1283,\l... !prof !1284\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f3ef0:s0 -> Node0x5588d40f3e80;
	Node0x5588d40f3ef0:s1 -> Node0x5588d422add0;
	Node0x5588d40f3e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{if.else89:                                        \l  br label %if.end92.sink.split\l}"];
	Node0x5588d40f3e80 -> Node0x5588d422add0;
	Node0x5588d422add0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end92.sink.split:                              \l  %.sink406 = phi i32 [ 0, %if.else89 ], [ 1, %land.lhs.true82 ]\l  %thr_ipending88 = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg !1285\l  %85 = bitcast i8* %thr_ipending88 to i32*, !dbg !1285\l  store i32 %.sink406, i32* %85, align 8, !dbg !1285\l  br label %if.end92, !dbg !1286\l}"];
	Node0x5588d422add0 -> Node0x5588d40f38c0;
	Node0x5588d40f38c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end92:                                         \l  %tobool93 = icmp eq i8 %conv54, 0, !dbg !1286\l  br i1 %tobool93, label %sw.epilog, label %if.then94, !dbg !1288, !prof !1289\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f38c0:s0 -> Node0x5588d3eef400;
	Node0x5588d40f38c0:s1 -> Node0x5588d40f54a0;
	Node0x5588d40f54a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.then94:                                        \l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1144,\l... metadata !DIExpression()) #15, !dbg !1290\l  call void @llvm.dbg.value(metadata i8 1, metadata !1147, metadata\l... !DIExpression()) #15, !dbg !1290\l  %86 = load i8, i8* %73, align 1, !dbg !1293\l  %87 = and i8 %86, 4, !dbg !1294\l  %tobool.i280 = icmp eq i8 %87, 0, !dbg !1294\l  br i1 %tobool.i280, label %if.else.i285, label %land.lhs.true.i283, !dbg\l... !1295, !prof !1159\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f54a0:s0 -> Node0x5588d42ca200;
	Node0x5588d40f54a0:s1 -> Node0x5588d42a3bb0;
	Node0x5588d42a3bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{land.lhs.true.i283:                               \l  %88 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1296\l  %89 = load i8, i8* %88, align 1, !dbg !1296\l  %90 = and i8 %89, 30, !dbg !1297\l  %tobool3.i282 = icmp eq i8 %90, 0, !dbg !1297\l  br i1 %tobool3.i282, label %if.else.i285, label %if.end49.i316, !dbg !1298,\l... !prof !1163\l|{<s0>T|<s1>F}}"];
	Node0x5588d42a3bb0:s0 -> Node0x5588d42ca200;
	Node0x5588d42a3bb0:s1 -> Node0x5588d4121720;
	Node0x5588d42ca200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.else.i285:                                     \l  %91 = and i8 %86, 1, !dbg !1299\l  %tobool7.i284 = icmp eq i8 %91, 0, !dbg !1299\l  br i1 %tobool7.i284, label %if.else28.i301, label %land.lhs.true8.i288, !dbg\l... !1300, !prof !1159\l|{<s0>T|<s1>F}}"];
	Node0x5588d42ca200:s0 -> Node0x5588d42cb460;
	Node0x5588d42ca200:s1 -> Node0x5588d42ca480;
	Node0x5588d42ca480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{land.lhs.true8.i288:                              \l  %timeout_ipending.i286 = getelementptr inbounds i8, i8* %opaque, i64 320,\l... !dbg !1301\l  %92 = bitcast i8* %timeout_ipending.i286 to i32*, !dbg !1301\l  %93 = load i32, i32* %92, align 16, !dbg !1301\l  %tobool9.i287 = icmp eq i32 %93, 0, !dbg !1302\l  br i1 %tobool9.i287, label %land.lhs.true16.i291, label %if.end49.i316, !dbg\l... !1303, !prof !1163\l|{<s0>T|<s1>F}}"];
	Node0x5588d42ca480:s0 -> Node0x5588d42ca7d0;
	Node0x5588d42ca480:s1 -> Node0x5588d4121720;
	Node0x5588d42ca7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{land.lhs.true16.i291:                             \l  %94 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1304\l  %95 = load i8, i8* %94, align 1, !dbg !1304\l  %96 = and i8 %95, 1, !dbg !1305\l  %tobool20.i290 = icmp eq i8 %96, 0, !dbg !1305\l  br i1 %tobool20.i290, label %if.else28.i301, label %land.lhs.true21.i294,\l... !dbg !1306, !prof !1163\l|{<s0>T|<s1>F}}"];
	Node0x5588d42ca7d0:s0 -> Node0x5588d42cb460;
	Node0x5588d42ca7d0:s1 -> Node0x5588d42cab80;
	Node0x5588d42cab80 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true21.i294:                             \l  %97 = getelementptr inbounds i8, i8* %opaque, i64 148, !dbg !1307\l  %98 = load i8, i8* %97, align 4, !dbg !1307\l  %99 = and i8 %98, 1, !dbg !1308\l  %tobool24.i293 = icmp eq i8 %99, 0, !dbg !1308\l  br i1 %tobool24.i293, label %if.end49.i316, label %lor.lhs.false.i299, !dbg\l... !1309\l|{<s0>T|<s1>F}}"];
	Node0x5588d42cab80:s0 -> Node0x5588d4121720;
	Node0x5588d42cab80:s1 -> Node0x5588d42caf80;
	Node0x5588d42caf80 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false.i299:                               \l  %num.i295 = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !1310\l  %100 = bitcast i8* %num.i295 to i32*, !dbg !1310\l  %101 = load i32, i32* %100, align 16, !dbg !1310\l  %102 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1311\l  %103 = load i8, i8* %102, align 16, !dbg !1311\l  %conv25.i297 = zext i8 %103 to i32, !dbg !1312\l  %cmp.i298 = icmp ult i32 %101, %conv25.i297, !dbg !1313\l  br i1 %cmp.i298, label %if.else28.i301, label %if.end49.i316, !dbg !1314\l|{<s0>T|<s1>F}}"];
	Node0x5588d42caf80:s0 -> Node0x5588d42cb460;
	Node0x5588d42caf80:s1 -> Node0x5588d4121720;
	Node0x5588d42cb460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.else28.i301:                                   \l  %104 = and i8 %86, 2, !dbg !1315\l  %tobool32.i300 = icmp eq i8 %104, 0, !dbg !1315\l  br i1 %tobool32.i300, label %if.else36.i306, label %land.lhs.true33.i304,\l... !dbg !1316, !prof !1317\l|{<s0>T|<s1>F}}"];
	Node0x5588d42cb460:s0 -> Node0x5588d42cba30;
	Node0x5588d42cb460:s1 -> Node0x5588d42cb6e0;
	Node0x5588d42cb6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{land.lhs.true33.i304:                             \l  %thr_ipending.i302 = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg\l... !1318\l  %105 = bitcast i8* %thr_ipending.i302 to i32*, !dbg !1318\l  %106 = load i32, i32* %105, align 8, !dbg !1318\l  %tobool34.i303 = icmp eq i32 %106, 0, !dbg !1319\l  br i1 %tobool34.i303, label %if.else36.i306, label %if.end49.i316, !dbg\l... !1320, !prof !1321\l|{<s0>T|<s1>F}}"];
	Node0x5588d42cb6e0:s0 -> Node0x5588d42cba30;
	Node0x5588d42cb6e0:s1 -> Node0x5588d4121720;
	Node0x5588d42cba30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else36.i306:                                   \l  %107 = and i8 %86, 8, !dbg !1322\l  %tobool40.i305 = icmp eq i8 %107, 0, !dbg !1322\l  br i1 %tobool40.i305, label %if.end49.i316, label %land.lhs.true41.i310,\l... !dbg !1323, !prof !1179\l|{<s0>T|<s1>F}}"];
	Node0x5588d42cba30:s0 -> Node0x5588d4121720;
	Node0x5588d42cba30:s1 -> Node0x5588d42cbcb0;
	Node0x5588d42cbcb0 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true41.i310:                             \l  %108 = getelementptr inbounds i8, i8* %opaque, i64 146, !dbg !1324\l  %109 = load i8, i8* %108, align 2, !dbg !1324\l  %110 = and i8 %109, 15, !dbg !1325\l  %tobool44.i308 = icmp eq i8 %110, 0, !dbg !1325\l  %spec.select.i309 = zext i1 %tobool44.i308 to i32, !dbg !1326\l  br label %if.end49.i316, !dbg !1326\l}"];
	Node0x5588d42cbcb0 -> Node0x5588d4121720;
	Node0x5588d4121720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{if.end49.i316:                                    \l  %tmp_iir.0.i311 = phi i32 [ 6, %land.lhs.true.i283 ], [ 12,\l... %land.lhs.true8.i288 ], [ 4, %land.lhs.true21.i294 ], [ 2,\l... %land.lhs.true33.i304 ], [ %spec.select.i309, %land.lhs.true41.i310 ], [ 4,\l... %lor.lhs.false.i299 ], [ 1, %if.else36.i306 ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !1147, metadata\l... !DIExpression()) #15, !dbg !1290\l  %111 = getelementptr inbounds i8, i8* %opaque, i64 142, !dbg !1327\l  %112 = load i8, i8* %111, align 2, !dbg !1327\l  %113 = and i8 %112, -16, !dbg !1328\l  %114 = trunc i32 %tmp_iir.0.i311 to i8, !dbg !1329\l  %conv53.i313 = or i8 %113, %114, !dbg !1329\l  store i8 %conv53.i313, i8* %111, align 2, !dbg !1330\l  %cmp56.i314 = icmp eq i32 %tmp_iir.0.i311, 1, !dbg !1331\l  %irq.i315 = getelementptr inbounds i8, i8* %opaque, i64 160, !dbg !1332\l  %115 = bitcast i8* %irq.i315 to %struct.IRQState**, !dbg !1332\l  %116 = load %struct.IRQState*, %struct.IRQState** %115, align 16, !dbg !1332\l  br i1 %cmp56.i314, label %if.else59.i318, label %if.then58.i317, !dbg !1333,\l... !prof !1334\l|{<s0>T|<s1>F}}"];
	Node0x5588d4121720:s0 -> Node0x5588d42c9f70;
	Node0x5588d4121720:s1 -> Node0x5588d42c9be0;
	Node0x5588d42c9be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.then58.i317:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %116, metadata !1335,\l... metadata !DIExpression()) #15, !dbg !1341\l  tail call void @qemu_set_irq(%struct.IRQState* %116, i32 1) #15, !dbg !1344\l  br label %sw.epilog, !dbg !1345\l}"];
	Node0x5588d42c9be0 -> Node0x5588d3eef400;
	Node0x5588d42c9f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.else59.i318:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %116, metadata !1346,\l... metadata !DIExpression()) #15, !dbg !1349\l  tail call void @qemu_set_irq(%struct.IRQState* %116, i32 0) #15, !dbg !1352\l  br label %sw.epilog\l}"];
	Node0x5588d42c9f70 -> Node0x5588d3eef400;
	Node0x5588d40f5cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{sw.bb97:                                          \l  %117 = getelementptr inbounds i8, i8* %opaque, i64 148, !dbg !1353\l  %118 = load i8, i8* %117, align 4, !dbg !1353\l  %conv99 = zext i8 %118 to i64, !dbg !1355\l  %xor100 = xor i64 %conv99, %val, !dbg !1356\l  %and101 = and i64 %xor100, 1, !dbg !1357\l  %tobool102 = icmp eq i64 %and101, 0, !dbg !1357\l  %or104 = or i64 %val, 6, !dbg !1358\l  %spec.select = select i1 %tobool102, i64 %val, i64 %or104, !dbg !1360, !prof\l... !1361\l  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !966, metadata\l... !DIExpression()), !dbg !979\l  %and106 = and i64 %spec.select, 2, !dbg !1362\l  %tobool107 = icmp eq i64 %and106, 0, !dbg !1362\l  br i1 %tobool107, label %if.end113, label %if.then108, !dbg !1364, !prof\l... !1365\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f5cf0:s0 -> Node0x5588d40f6a60;
	Node0x5588d40f5cf0:s1 -> Node0x5588d40f6a10;
	Node0x5588d40f6a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{if.then108:                                       \l  %119 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1366\l  %120 = load i8, i8* %119, align 1, !dbg !1368\l  %121 = and i8 %120, -18, !dbg !1368\l  store i8 %121, i8* %119, align 1, !dbg !1368\l  %fifo_timeout_timer = getelementptr inbounds i8, i8* %opaque, i64 312, !dbg\l... !1369\l  %122 = bitcast i8* %fifo_timeout_timer to %struct.QEMUTimer**, !dbg !1369\l  %123 = load %struct.QEMUTimer*, %struct.QEMUTimer** %122, align 8, !dbg !1369\l  tail call void @timer_del(%struct.QEMUTimer* %123) #15, !dbg !1370\l  %timeout_ipending = getelementptr inbounds i8, i8* %opaque, i64 320, !dbg\l... !1371\l  %124 = bitcast i8* %timeout_ipending to i32*, !dbg !1371\l  store i32 0, i32* %124, align 16, !dbg !1372\l  %recv_fifo = getelementptr inbounds i8, i8* %opaque, i64 256, !dbg !1373\l  %125 = bitcast i8* %recv_fifo to %struct.Fifo8*, !dbg !1373\l  tail call void @fifo8_reset(%struct.Fifo8* nonnull %125) #15, !dbg !1374\l  br label %if.end113, !dbg !1375\l}"];
	Node0x5588d40f6a10 -> Node0x5588d40f6a60;
	Node0x5588d40f6a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{if.end113:                                        \l  %and114 = and i64 %spec.select, 4, !dbg !1376\l  %tobool115 = icmp eq i64 %and114, 0, !dbg !1376\l  br i1 %tobool115, label %if.end123, label %if.then116, !dbg !1378, !prof\l... !1365\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f6a60:s0 -> Node0x5588d40f8780;
	Node0x5588d40f6a60:s1 -> Node0x5588d40f8730;
	Node0x5588d40f8730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{if.then116:                                       \l  %126 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1379\l  %127 = load i8, i8* %126, align 1, !dbg !1381\l  %128 = or i8 %127, 32, !dbg !1381\l  store i8 %128, i8* %126, align 1, !dbg !1381\l  %thr_ipending121 = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg\l... !1382\l  %129 = bitcast i8* %thr_ipending121 to i32*, !dbg !1382\l  store i32 1, i32* %129, align 8, !dbg !1383\l  %xmit_fifo122 = getelementptr inbounds i8, i8* %opaque, i64 280, !dbg !1384\l  %130 = bitcast i8* %xmit_fifo122 to %struct.Fifo8*, !dbg !1384\l  tail call void @fifo8_reset(%struct.Fifo8* nonnull %130) #15, !dbg !1385\l  br label %if.end123, !dbg !1386\l}"];
	Node0x5588d40f8730 -> Node0x5588d40f8780;
	Node0x5588d40f8780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{if.end123:                                        \l  %131 = trunc i64 %spec.select to i8, !dbg !1387\l  %conv125 = and i8 %131, -55, !dbg !1387\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1388,\l... metadata !DIExpression()), !dbg !1394\l  call void @llvm.dbg.value(metadata i8 %conv125, metadata !1393, metadata\l... !DIExpression()), !dbg !1394\l  store i8 %conv125, i8* %117, align 4, !dbg !1396\l  %conv.i321 = zext i8 %conv125 to i32, !dbg !1397\l  %and.i322 = and i32 %conv.i321, 1, !dbg !1399\l  %tobool.i323 = icmp eq i32 %and.i322, 0, !dbg !1399\l  %132 = getelementptr inbounds i8, i8* %opaque, i64 142, !dbg !1400\l  %133 = load i8, i8* %132, align 2, !dbg !1400\l  br i1 %tobool.i323, label %if.else.i326, label %if.then.i, !dbg !1401, !prof\l... !1402\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f8780:s0 -> Node0x5588d4274ff0;
	Node0x5588d40f8780:s1 -> Node0x5588d42c9ea0;
	Node0x5588d42c9ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.then.i:                                        \l  %134 = or i8 %133, -64, !dbg !1403\l  store i8 %134, i8* %132, align 2, !dbg !1403\l  %135 = lshr i32 %conv.i321, 6, !dbg !1405\l  switch i32 %135, label %sw.epilog15.i [\l    i32 0, label %sw.bb.i\l    i32 1, label %sw.bb5.i\l    i32 2, label %sw.bb7.i\l    i32 3, label %sw.bb9.i\l  ], !dbg !1405, !prof !1406\l|{<s0>def|<s1>0|<s2>1|<s3>2|<s4>3}}"];
	Node0x5588d42c9ea0:s0 -> Node0x5588d4274f20;
	Node0x5588d42c9ea0:s1 -> Node0x5588d4274ce0;
	Node0x5588d42c9ea0:s2 -> Node0x5588d4274a70;
	Node0x5588d42c9ea0:s3 -> Node0x5588d4274800;
	Node0x5588d42c9ea0:s4 -> Node0x5588d42744f0;
	Node0x5588d4274ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{sw.bb.i:                                          \l  %136 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1407\l  store i8 1, i8* %136, align 16, !dbg !1409\l  br label %serial_write_fcr.exit, !dbg !1410\l}"];
	Node0x5588d4274ce0 -> Node0x5588d42744a0;
	Node0x5588d4274a70 [shape=record,penwidth=3.0, color="red",label="{sw.bb5.i:                                         \l  %137 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1411\l  store i8 4, i8* %137, align 16, !dbg !1412\l  br label %serial_write_fcr.exit, !dbg !1413\l}"];
	Node0x5588d4274a70 -> Node0x5588d42744a0;
	Node0x5588d4274800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{sw.bb7.i:                                         \l  %138 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1414\l  store i8 8, i8* %138, align 16, !dbg !1415\l  br label %serial_write_fcr.exit, !dbg !1416\l}"];
	Node0x5588d4274800 -> Node0x5588d42744a0;
	Node0x5588d42744f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{sw.bb9.i:                                         \l  %139 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1417\l  store i8 14, i8* %139, align 16, !dbg !1418\l  br label %serial_write_fcr.exit, !dbg !1419\l}"];
	Node0x5588d42744f0 -> Node0x5588d42744a0;
	Node0x5588d4274f20 [shape=record,penwidth=3.0, color="red",label="{sw.epilog15.i:                                    \l  unreachable\l}"];
	Node0x5588d4274ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{if.else.i326:                                     \l  %and13.i = and i8 %133, 63, !dbg !1420\l  store i8 %and13.i, i8* %132, align 2, !dbg !1420\l  br label %serial_write_fcr.exit\l}"];
	Node0x5588d4274ff0 -> Node0x5588d42744a0;
	Node0x5588d42744a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{serial_write_fcr.exit:                            \l  %140 = phi i8 [ %134, %sw.bb.i ], [ %134, %sw.bb5.i ], [ %134, %sw.bb7.i ],\l... [ %134, %sw.bb9.i ], [ %and13.i, %if.else.i326 ]\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1144,\l... metadata !DIExpression()) #15, !dbg !1422\l  call void @llvm.dbg.value(metadata i8 1, metadata !1147, metadata\l... !DIExpression()) #15, !dbg !1422\l  %141 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1424\l  %142 = load i8, i8* %141, align 1, !dbg !1424\l  %143 = and i8 %142, 4, !dbg !1425\l  %tobool.i328 = icmp eq i8 %143, 0, !dbg !1425\l  br i1 %tobool.i328, label %if.else.i333, label %land.lhs.true.i331, !dbg\l... !1426, !prof !1159\l|{<s0>T|<s1>F}}"];
	Node0x5588d42744a0:s0 -> Node0x5588d40b3520;
	Node0x5588d42744a0:s1 -> Node0x5588d40892e0;
	Node0x5588d40892e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{land.lhs.true.i331:                               \l  %144 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1427\l  %145 = load i8, i8* %144, align 1, !dbg !1427\l  %146 = and i8 %145, 30, !dbg !1428\l  %tobool3.i330 = icmp eq i8 %146, 0, !dbg !1428\l  br i1 %tobool3.i330, label %if.else.i333, label %if.end49.i364, !dbg !1429,\l... !prof !1163\l|{<s0>T|<s1>F}}"];
	Node0x5588d40892e0:s0 -> Node0x5588d40b3520;
	Node0x5588d40892e0:s1 -> Node0x5588d408dd90;
	Node0x5588d40b3520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{if.else.i333:                                     \l  %147 = and i8 %142, 1, !dbg !1430\l  %tobool7.i332 = icmp eq i8 %147, 0, !dbg !1430\l  br i1 %tobool7.i332, label %if.else28.i349, label %land.lhs.true8.i336, !dbg\l... !1431, !prof !1159\l|{<s0>T|<s1>F}}"];
	Node0x5588d40b3520:s0 -> Node0x5588d42b2480;
	Node0x5588d40b3520:s1 -> Node0x5588d40ff6a0;
	Node0x5588d40ff6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{land.lhs.true8.i336:                              \l  %timeout_ipending.i334 = getelementptr inbounds i8, i8* %opaque, i64 320,\l... !dbg !1432\l  %148 = bitcast i8* %timeout_ipending.i334 to i32*, !dbg !1432\l  %149 = load i32, i32* %148, align 16, !dbg !1432\l  %tobool9.i335 = icmp eq i32 %149, 0, !dbg !1433\l  br i1 %tobool9.i335, label %land.lhs.true16.i339, label %if.end49.i364, !dbg\l... !1434, !prof !1163\l|{<s0>T|<s1>F}}"];
	Node0x5588d40ff6a0:s0 -> Node0x5588d4089120;
	Node0x5588d40ff6a0:s1 -> Node0x5588d408dd90;
	Node0x5588d4089120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{land.lhs.true16.i339:                             \l  %150 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1435\l  %151 = load i8, i8* %150, align 1, !dbg !1435\l  %152 = and i8 %151, 1, !dbg !1436\l  %tobool20.i338 = icmp eq i8 %152, 0, !dbg !1436\l  br i1 %tobool20.i338, label %if.else28.i349, label %land.lhs.true21.i342,\l... !dbg !1437, !prof !1163\l|{<s0>T|<s1>F}}"];
	Node0x5588d4089120:s0 -> Node0x5588d42b2480;
	Node0x5588d4089120:s1 -> Node0x5588d40d7b50;
	Node0x5588d40d7b50 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true21.i342:                             \l  %153 = and i8 %131, 1, !dbg !1438\l  %tobool24.i341 = icmp eq i8 %153, 0, !dbg !1438\l  br i1 %tobool24.i341, label %if.end49.i364, label %lor.lhs.false.i347, !dbg\l... !1439\l|{<s0>T|<s1>F}}"];
	Node0x5588d40d7b50:s0 -> Node0x5588d408dd90;
	Node0x5588d40d7b50:s1 -> Node0x5588d42b2080;
	Node0x5588d42b2080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{lor.lhs.false.i347:                               \l  %num.i343 = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !1440\l  %154 = bitcast i8* %num.i343 to i32*, !dbg !1440\l  %155 = load i32, i32* %154, align 16, !dbg !1440\l  %156 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1441\l  %157 = load i8, i8* %156, align 16, !dbg !1441\l  %conv25.i345 = zext i8 %157 to i32, !dbg !1442\l  %cmp.i346 = icmp ult i32 %155, %conv25.i345, !dbg !1443\l  br i1 %cmp.i346, label %if.else28.i349, label %if.end49.i364, !dbg !1444\l|{<s0>T|<s1>F}}"];
	Node0x5588d42b2080:s0 -> Node0x5588d42b2480;
	Node0x5588d42b2080:s1 -> Node0x5588d408dd90;
	Node0x5588d42b2480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{if.else28.i349:                                   \l  %158 = and i8 %142, 2, !dbg !1445\l  %tobool32.i348 = icmp eq i8 %158, 0, !dbg !1445\l  br i1 %tobool32.i348, label %if.else36.i354, label %land.lhs.true33.i352,\l... !dbg !1446, !prof !1317\l|{<s0>T|<s1>F}}"];
	Node0x5588d42b2480:s0 -> Node0x5588d42b2a50;
	Node0x5588d42b2480:s1 -> Node0x5588d42b2700;
	Node0x5588d42b2700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{land.lhs.true33.i352:                             \l  %thr_ipending.i350 = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg\l... !1447\l  %159 = bitcast i8* %thr_ipending.i350 to i32*, !dbg !1447\l  %160 = load i32, i32* %159, align 8, !dbg !1447\l  %tobool34.i351 = icmp eq i32 %160, 0, !dbg !1448\l  br i1 %tobool34.i351, label %if.else36.i354, label %if.end49.i364, !dbg\l... !1449, !prof !1321\l|{<s0>T|<s1>F}}"];
	Node0x5588d42b2700:s0 -> Node0x5588d42b2a50;
	Node0x5588d42b2700:s1 -> Node0x5588d408dd90;
	Node0x5588d42b2a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.else36.i354:                                   \l  %161 = and i8 %142, 8, !dbg !1450\l  %tobool40.i353 = icmp eq i8 %161, 0, !dbg !1450\l  br i1 %tobool40.i353, label %if.end49.i364, label %land.lhs.true41.i358,\l... !dbg !1451, !prof !1179\l|{<s0>T|<s1>F}}"];
	Node0x5588d42b2a50:s0 -> Node0x5588d408dd90;
	Node0x5588d42b2a50:s1 -> Node0x5588d42b2cd0;
	Node0x5588d42b2cd0 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true41.i358:                             \l  %162 = getelementptr inbounds i8, i8* %opaque, i64 146, !dbg !1452\l  %163 = load i8, i8* %162, align 2, !dbg !1452\l  %164 = and i8 %163, 15, !dbg !1453\l  %tobool44.i356 = icmp eq i8 %164, 0, !dbg !1453\l  %spec.select.i357 = zext i1 %tobool44.i356 to i32, !dbg !1454\l  br label %if.end49.i364, !dbg !1454\l}"];
	Node0x5588d42b2cd0 -> Node0x5588d408dd90;
	Node0x5588d408dd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{if.end49.i364:                                    \l  %tmp_iir.0.i359 = phi i32 [ 6, %land.lhs.true.i331 ], [ 12,\l... %land.lhs.true8.i336 ], [ 4, %land.lhs.true21.i342 ], [ 2,\l... %land.lhs.true33.i352 ], [ %spec.select.i357, %land.lhs.true41.i358 ], [ 4,\l... %lor.lhs.false.i347 ], [ 1, %if.else36.i354 ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !1147, metadata\l... !DIExpression()) #15, !dbg !1422\l  %165 = and i8 %140, -16, !dbg !1455\l  %166 = trunc i32 %tmp_iir.0.i359 to i8, !dbg !1456\l  %conv53.i361 = or i8 %165, %166, !dbg !1456\l  store i8 %conv53.i361, i8* %132, align 2, !dbg !1457\l  %cmp56.i362 = icmp eq i32 %tmp_iir.0.i359, 1, !dbg !1458\l  %irq.i363 = getelementptr inbounds i8, i8* %opaque, i64 160, !dbg !1459\l  %167 = bitcast i8* %irq.i363 to %struct.IRQState**, !dbg !1459\l  %168 = load %struct.IRQState*, %struct.IRQState** %167, align 16, !dbg !1459\l  br i1 %cmp56.i362, label %if.else59.i366, label %if.then58.i365, !dbg !1460,\l... !prof !1334\l|{<s0>T|<s1>F}}"];
	Node0x5588d408dd90:s0 -> Node0x5588d4072f80;
	Node0x5588d408dd90:s1 -> Node0x5588d422b300;
	Node0x5588d422b300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{if.then58.i365:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %168, metadata !1335,\l... metadata !DIExpression()) #15, !dbg !1461\l  tail call void @qemu_set_irq(%struct.IRQState* %168, i32 1) #15, !dbg !1463\l  br label %sw.epilog, !dbg !1464\l}"];
	Node0x5588d422b300 -> Node0x5588d3eef400;
	Node0x5588d4072f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{if.else59.i366:                                   \l  call void @llvm.dbg.value(metadata %struct.IRQState* %168, metadata !1346,\l... metadata !DIExpression()) #15, !dbg !1465\l  tail call void @qemu_set_irq(%struct.IRQState* %168, i32 0) #15, !dbg !1467\l  br label %sw.epilog\l}"];
	Node0x5588d4072f80 -> Node0x5588d3eef400;
	Node0x5588d40f96c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{sw.bb126:                                         \l  %169 = bitcast i32* %break_enable to i8*, !dbg !1468\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %169) #15, !dbg !1468\l  %170 = getelementptr inbounds i8, i8* %opaque, i64 143, !dbg !1469\l  store i8 %conv1, i8* %170, align 1, !dbg !1470\l  call void @llvm.dbg.value(metadata %struct.SerialState* %0, metadata !1062,\l... metadata !DIExpression()) #15, !dbg !1471\l  %171 = bitcast %struct.QEMUSerialSetParams* %ssp.i368 to i8*, !dbg !1473\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #15, !dbg !1473\l  call void @llvm.dbg.declare(metadata %struct.QEMUSerialSetParams* %ssp.i368,\l... metadata !1068, metadata !DIExpression()) #15, !dbg !1474\l  call void @llvm.dbg.value(metadata i32 1, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1471\l  %172 = trunc i64 %val to i32, !dbg !1475\l  %and.i371 = and i32 %172, 8, !dbg !1476\l  %tobool.i372 = icmp eq i32 %and.i371, 0, !dbg !1476\l  call void @llvm.dbg.value(metadata i32 undef, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1471\l  call void @llvm.dbg.value(metadata i32 undef, metadata !1064, metadata\l... !DIExpression()) #15, !dbg !1471\l  %173 = and i8 %conv1, 4, !dbg !1477\l  %tobool11.i373 = icmp eq i8 %173, 0, !dbg !1477\l  %.52.i374 = select i1 %tobool11.i373, i32 1, i32 2, !prof !1086\l  call void @llvm.dbg.value(metadata i32 %.52.i374, metadata !1066, metadata\l... !DIExpression()) #15, !dbg !1471\l  %174 = and i8 %conv1, 3, !dbg !1478\l  %narrow.i375 = add nuw nsw i8 %174, 5, !dbg !1479\l  %add.i376 = zext i8 %narrow.i375 to i32, !dbg !1479\l  call void @llvm.dbg.value(metadata i32 %add.i376, metadata !1065, metadata\l... !DIExpression()) #15, !dbg !1471\l  %divider.i377 = getelementptr inbounds i8, i8* %opaque, i64 136, !dbg !1480\l  %175 = bitcast i8* %divider.i377 to i16*, !dbg !1480\l  %176 = load i16, i16* %175, align 8, !dbg !1480\l  %cmp.i378 = icmp eq i16 %176, 0, !dbg !1481\l  br i1 %cmp.i378, label %serial_update_parameters.exit404, label\l... %cond.false.i383, !dbg !1482, !prof !1091\l|{<s0>T|<s1>F}}"];
	Node0x5588d40f96c0:s0 -> Node0x5588d42c0490;
	Node0x5588d40f96c0:s1 -> Node0x5588d4274730;
	Node0x5588d4274730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{cond.false.i383:                                  \l  %baudbase.i379 = getelementptr inbounds i8, i8* %opaque, i64 228, !dbg !1483\l  %177 = bitcast i8* %baudbase.i379 to i32*, !dbg !1483\l  %178 = load i32, i32* %177, align 4, !dbg !1483\l  %conv22.i380 = uitofp i32 %178 to float, !dbg !1484\l  %conv25.i381 = uitofp i16 %176 to float, !dbg !1485\l  %div.i382 = fdiv float %conv22.i380, %conv25.i381, !dbg !1486\l  br label %serial_update_parameters.exit404, !dbg !1482\l}"];
	Node0x5588d4274730 -> Node0x5588d42c0490;
	Node0x5588d42c0490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{serial_update_parameters.exit404:                 \l  %cond.i384 = phi float [ %div.i382, %cond.false.i383 ], [ 3.500000e+03,\l... %sw.bb126 ], !dbg !1482\l  %frame_size.0.i385 = select i1 %tobool.i372, i32 1, i32 2, !dbg !1487, !prof\l... !1086\l  call void @llvm.dbg.value(metadata i32 %frame_size.0.i385, metadata !1067,\l... metadata !DIExpression()) #15, !dbg !1471\l  %and3.i386 = and i32 %172, 16, !dbg !1487\l  %tobool4.i387 = icmp eq i32 %and3.i386, 0, !dbg !1487\l  %..i388 = select i1 %tobool4.i387, i32 79, i32 69, !dbg !1487, !prof !1097\l  %parity.0.i389 = select i1 %tobool.i372, i32 78, i32 %..i388, !dbg !1487,\l... !prof !1086\l  call void @llvm.dbg.value(metadata i32 %parity.0.i389, metadata !1064,\l... metadata !DIExpression()) #15, !dbg !1471\l  %add18.i390 = add nuw nsw i32 %.52.i374, %add.i376, !dbg !1488\l  %add19.i391 = add nuw nsw i32 %add18.i390, %frame_size.0.i385, !dbg !1489\l  call void @llvm.dbg.value(metadata i32 %add19.i391, metadata !1067, metadata\l... !DIExpression()) #15, !dbg !1471\l  call void @llvm.dbg.value(metadata float %cond.i384, metadata !1063,\l... metadata !DIExpression()) #15, !dbg !1471\l  %conv26.i392 = fptosi float %cond.i384 to i32, !dbg !1490\l  %speed27.i393 = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i368, i64 0, i32 0, !dbg !1491\l  store i32 %conv26.i392, i32* %speed27.i393, align 4, !dbg !1492\l  %parity28.i394 = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i368, i64 0, i32 1, !dbg !1493\l  store i32 %parity.0.i389, i32* %parity28.i394, align 4, !dbg !1494\l  %data_bits29.i395 = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i368, i64 0, i32 2, !dbg !1495\l  store i32 %add.i376, i32* %data_bits29.i395, align 4, !dbg !1496\l  %stop_bits30.i396 = getelementptr inbounds %struct.QEMUSerialSetParams,\l... %struct.QEMUSerialSetParams* %ssp.i368, i64 0, i32 3, !dbg !1497\l  store i32 %.52.i374, i32* %stop_bits30.i396, align 4, !dbg !1498\l  %div31.i397 = fdiv float 1.000000e+09, %cond.i384, !dbg !1499\l  %conv32.i398 = sitofp i32 %add19.i391 to float, !dbg !1500\l  %mul.i399 = fmul float %div31.i397, %conv32.i398, !dbg !1501\l  %conv33.i400 = fptoui float %mul.i399 to i64, !dbg !1502\l  %char_transmit_time.i401 = getelementptr inbounds i8, i8* %opaque, i64 328,\l... !dbg !1503\l  %179 = bitcast i8* %char_transmit_time.i401 to i64*, !dbg !1503\l  store i64 %conv33.i400, i64* %179, align 8, !dbg !1504\l  %chr.i402 = getelementptr inbounds i8, i8* %opaque, i64 168, !dbg !1505\l  %180 = bitcast i8* %chr.i402 to %struct.CharBackend*, !dbg !1505\l  %call.i403 = call i32 @qemu_chr_fe_ioctl(%struct.CharBackend* nonnull %180,\l... i32 1, i8* nonnull %171) #15, !dbg !1506\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #15, !dbg !1507\l  %shr = lshr i64 %val, 6, !dbg !1508\l  %181 = trunc i64 %shr to i32, !dbg !1509\l  %conv130 = and i32 %181, 1, !dbg !1509\l  call void @llvm.dbg.value(metadata i32 %conv130, metadata !973, metadata\l... !DIExpression()), !dbg !1510\l  store i32 %conv130, i32* %break_enable, align 4, !dbg !1511\l  %last_break_enable = getelementptr inbounds i8, i8* %opaque, i64 224, !dbg\l... !1512\l  %182 = bitcast i8* %last_break_enable to i32*, !dbg !1512\l  %183 = load i32, i32* %182, align 16, !dbg !1512\l  %cmp131 = icmp eq i32 %conv130, %183, !dbg !1514\l  br i1 %cmp131, label %if.end136, label %if.then133, !dbg !1515, !prof !1516\l|{<s0>T|<s1>F}}"];
	Node0x5588d42c0490:s0 -> Node0x5588d40fa6a0;
	Node0x5588d42c0490:s1 -> Node0x5588d40fa630;
	Node0x5588d40fa630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{if.then133:                                       \l  store i32 %conv130, i32* %182, align 16, !dbg !1517\l  call void @llvm.dbg.value(metadata i32* %break_enable, metadata !973,\l... metadata !DIExpression(DW_OP_deref)), !dbg !1510\l  %call135 = call i32 @qemu_chr_fe_ioctl(%struct.CharBackend* nonnull %180,\l... i32 2, i8* nonnull %169) #15, !dbg !1519\l  br label %if.end136, !dbg !1520\l}"];
	Node0x5588d40fa630 -> Node0x5588d40fa6a0;
	Node0x5588d40fa6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{if.end136:                                        \l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169) #15, !dbg !1521\l  br label %sw.epilog, !dbg !1522\l}"];
	Node0x5588d40fa6a0 -> Node0x5588d3eef400;
	Node0x5588d40fb680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{sw.bb137:                                         \l  %184 = getelementptr inbounds i8, i8* %opaque, i64 144, !dbg !1523\l  %185 = load i8, i8* %184, align 16, !dbg !1523\l  call void @llvm.dbg.value(metadata i8 %185, metadata !975, metadata\l... !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1524\l  %conv140 = and i8 %conv1, 31, !dbg !1525\l  store i8 %conv140, i8* %184, align 16, !dbg !1526\l  %and142 = and i64 %val, 16, !dbg !1527\l  %tobool143 = icmp eq i64 %and142, 0, !dbg !1527\l  br i1 %tobool143, label %if.end145, label %sw.epilog, !dbg !1529, !prof !1530\l|{<s0>T|<s1>F}}"];
	Node0x5588d40fb680:s0 -> Node0x5588d40fc500;
	Node0x5588d40fb680:s1 -> Node0x5588d3eef400;
	Node0x5588d40fc500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{if.end145:                                        \l  %poll_msl146 = getelementptr inbounds i8, i8* %opaque, i64 336, !dbg !1531\l  %186 = bitcast i8* %poll_msl146 to i32*, !dbg !1531\l  %187 = load i32, i32* %186, align 16, !dbg !1531\l  %cmp147 = icmp slt i32 %187, 0, !dbg !1533\l  %cmp152 = icmp eq i8 %185, %conv140, !dbg !1534\l  %or.cond = or i1 %cmp152, %cmp147, !dbg !1535\l  br i1 %or.cond, label %sw.epilog, label %if.then154, !dbg !1535, !prof !1536\l|{<s0>T|<s1>F}}"];
	Node0x5588d40fc500:s0 -> Node0x5588d3eef400;
	Node0x5588d40fc500:s1 -> Node0x5588d40fcc80;
	Node0x5588d40fcc80 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then154:                                       \l  tail call fastcc void @serial_update_tiocm(%struct.SerialState* nonnull %0),\l... !dbg !1537\l  %modem_status_poll155 = getelementptr inbounds i8, i8* %opaque, i64 344,\l... !dbg !1539\l  %188 = bitcast i8* %modem_status_poll155 to %struct.QEMUTimer**, !dbg !1539\l  %189 = load %struct.QEMUTimer*, %struct.QEMUTimer** %188, align 8, !dbg !1539\l  %call156 = tail call i64 @qemu_clock_get_ns(i32 1) #15, !dbg !1540\l  %char_transmit_time = getelementptr inbounds i8, i8* %opaque, i64 328, !dbg\l... !1541\l  %190 = bitcast i8* %char_transmit_time to i64*, !dbg !1541\l  %191 = load i64, i64* %190, align 8, !dbg !1541\l  %add = add i64 %191, %call156, !dbg !1542\l  tail call void @timer_mod(%struct.QEMUTimer* %189, i64 %add) #15, !dbg !1543\l  br label %sw.epilog, !dbg !1544\l}"];
	Node0x5588d40fcc80 -> Node0x5588d3eef400;
	Node0x5588d40ff810 [shape=record,penwidth=3.0, color="red",label="{sw.bb158:                                         \l  %192 = getelementptr inbounds i8, i8* %opaque, i64 147, !dbg !1545\l  store i8 %conv1, i8* %192, align 1, !dbg !1546\l  br label %sw.epilog, !dbg !1547\l}"];
	Node0x5588d40ff810 -> Node0x5588d3eef400;
	Node0x5588d3eef400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{sw.epilog:                                        \l  ret void, !dbg !1548\l}"];
}
