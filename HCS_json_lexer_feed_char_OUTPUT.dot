digraph "CFG for 'json_lexer_feed_char' function" {
	label="CFG for 'json_lexer_feed_char' function";

	Node0x561af6558490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.JSONLexer* %lexer, metadata !122,\l... metadata !DIExpression()), !dbg !129\l  call void @llvm.dbg.value(metadata i8 %ch, metadata !123, metadata\l... !DIExpression()), !dbg !129\l  call void @llvm.dbg.value(metadata i1 %flush, metadata !124, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !129\l  call void @llvm.dbg.value(metadata i8 0, metadata !126, metadata\l... !DIExpression()), !dbg !129\l  %x = getelementptr inbounds %struct.JSONLexer, %struct.JSONLexer* %lexer,\l... i64 0, i32 3, !dbg !130\l  %0 = load i32, i32* %x, align 8, !dbg !131\l  %inc = add i32 %0, 1, !dbg !131\l  store i32 %inc, i32* %x, align 8, !dbg !131\l  %cmp = icmp eq i8 %ch, 10, !dbg !132\l  br i1 %cmp, label %if.then, label %if.end, !dbg !134, !prof !135\l|{<s0>T|<s1>F}}"];
	Node0x561af6558490:s0 -> Node0x561af655a330;
	Node0x561af6558490:s1 -> Node0x561af655a380;
	Node0x561af655a330 [shape=record,penwidth=3.0, color="red",label="{if.then:                                          \l  store i32 0, i32* %x, align 8, !dbg !136\l  %y = getelementptr inbounds %struct.JSONLexer, %struct.JSONLexer* %lexer,\l... i64 0, i32 4, !dbg !138\l  %1 = load i32, i32* %y, align 4, !dbg !139\l  %inc3 = add i32 %1, 1, !dbg !139\l  store i32 %inc3, i32* %y, align 4, !dbg !139\l  br label %if.end, !dbg !140\l}"];
	Node0x561af655a330 -> Node0x561af655a380;
	Node0x561af655a380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.end:                                           \l  %state = getelementptr inbounds %struct.JSONLexer, %struct.JSONLexer*\l... %lexer, i64 0, i32 1, !dbg !129\l  %start_state = getelementptr inbounds %struct.JSONLexer, %struct.JSONLexer*\l... %lexer, i64 0, i32 0, !dbg !129\l  %idxprom3.i = zext i8 %ch to i64, !dbg !141\l  %not.flush.i = xor i1 %flush, true, !dbg !141\l  %token = getelementptr inbounds %struct.JSONLexer, %struct.JSONLexer*\l... %lexer, i64 0, i32 2, !dbg !154\l  %y28 = getelementptr inbounds %struct.JSONLexer, %struct.JSONLexer* %lexer,\l... i64 0, i32 4, !dbg !157\l  br label %while.cond, !dbg !159\l}"];
	Node0x561af655a380 -> Node0x561af655b6f0;
	Node0x561af655b6f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %char_consumed.0 = phi i32 [ 0, %if.end ], [ %frombool7.i, %sw.epilog ],\l... !dbg !129\l  br i1 %flush, label %cond.true, label %cond.false, !dbg !160, !prof !161\l|{<s0>T|<s1>F}}"];
	Node0x561af655b6f0:s0 -> Node0x561af655b950;
	Node0x561af655b6f0:s1 -> Node0x561af655b9d0;
	Node0x561af655b950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{cond.true:                                        \l  %2 = load i32, i32* %state, align 4, !dbg !162\l  %3 = load i32, i32* %start_state, align 8, !dbg !163\l  %cmp5 = icmp ne i32 %2, %3, !dbg !164\l  %conv6 = zext i1 %cmp5 to i32, !dbg !164\l  br label %cond.end, !dbg !160\l}"];
	Node0x561af655b950 -> Node0x561af655ba50;
	Node0x561af655b9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cond.false:                                       \l  call void @llvm.dbg.value(metadata i8 undef, metadata !126, metadata\l... !DIExpression()), !dbg !129\l  %4 = xor i32 %char_consumed.0, 1, !dbg !165\l  br label %cond.end, !dbg !160\l}"];
	Node0x561af655b9d0 -> Node0x561af655ba50;
	Node0x561af655ba50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cond.end:                                         \l  %cond = phi i32 [ %conv6, %cond.true ], [ %4, %cond.false ], !dbg !160\l  %tobool8 = icmp eq i32 %cond, 0, !dbg !159\l  br i1 %tobool8, label %while.end, label %while.body, !dbg !159, !prof !166\l|{<s0>T|<s1>F}}"];
	Node0x561af655ba50:s0 -> Node0x561af655b8a0;
	Node0x561af655ba50:s1 -> Node0x561af6554800;
	Node0x561af6554800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{while.body:                                       \l  call void @llvm.dbg.value(metadata i8* undef, metadata !126, metadata\l... !DIExpression(DW_OP_deref)), !dbg !129\l  call void @llvm.dbg.value(metadata %struct.JSONLexer* %lexer, metadata !147,\l... metadata !DIExpression()) #4, !dbg !141\l  call void @llvm.dbg.value(metadata i8 %ch, metadata !148, metadata\l... !DIExpression()) #4, !dbg !141\l  call void @llvm.dbg.value(metadata i1 %flush, metadata !149, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)) #4, !dbg !141\l  call void @llvm.dbg.value(metadata i8* undef, metadata !150, metadata\l... !DIExpression()) #4, !dbg !141\l  %5 = load i32, i32* %state, align 4, !dbg !167\l  %cmp.i = icmp ult i32 %5, 18, !dbg !167\l  br i1 %cmp.i, label %next_state.exit, label %if.else.i, !dbg !170, !prof !171\l|{<s0>T|<s1>F}}"];
	Node0x561af6554800:s0 -> Node0x561af6562110;
	Node0x561af6554800:s1 -> Node0x561af65749b0;
	Node0x561af65749b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else.i:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x\l... i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x\l... i8]* @.str.1, i64 0, i64 0), i32 269, i8* getelementptr inbounds ([54 x i8],\l... [54 x i8]* @__PRETTY_FUNCTION__.next_state, i64 0, i64 0)) #5, !dbg !167\l  unreachable, !dbg !167\l}"];
	Node0x561af6562110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{next_state.exit:                                  \l  %conv.i92 = zext i32 %5 to i64, !dbg !167\l  %arrayidx4.i = getelementptr [18 x [256 x i8]], [18 x [256 x i8]]* bitcast\l... (\<\{ [256 x i8], [256 x i8], [256 x i8], [256 x i8], [256 x i8], [256 x i8],\l... [256 x i8], [256 x i8], \<\{ [58 x i8], [198 x i8] \}\>, \<\{ [58 x i8], [198 x i8]\l... \}\>, \<\{ [58 x i8], [198 x i8] \}\>, [256 x i8], [256 x i8], \<\{ [58 x i8], [198 x\l... i8] \}\>, [256 x i8], [256 x i8], \<\{ [126 x i8], [130 x i8] \}\>, \<\{ [126 x i8],\l... [130 x i8] \}\> \}\>* @json_lexer to [18 x [256 x i8]]*), i64 0, i64 %conv.i92,\l... i64 %idxprom3.i, !dbg !172\l  %6 = load i8, i8* %arrayidx4.i, align 1, !dbg !172\l  call void @llvm.dbg.value(metadata i8 %6, metadata !151, metadata\l... !DIExpression()) #4, !dbg !141\l  %tobool6.i = icmp sgt i8 %6, -1, !dbg !173\l  %7 = and i1 %tobool6.i, %not.flush.i, !dbg !173\l  %frombool7.i = zext i1 %7 to i32, !dbg !174\l  %8 = and i8 %6, 127, !dbg !175\l  %conv10 = zext i8 %8 to i32, !dbg !176\l  call void @llvm.dbg.value(metadata i32 %conv10, metadata !125, metadata\l... !DIExpression()), !dbg !129\l  call void @llvm.dbg.value(metadata i1 %7, metadata !126, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !129\l  %notlhs = xor i1 %tobool6.i, true, !dbg !177\l  %tobool11 = or i1 %notlhs, %flush, !dbg !177\l  br i1 %tobool11, label %if.end17, label %if.end15, !dbg !178, !prof !179\l|{<s0>T|<s1>F}}"];
	Node0x561af6562110:s0 -> Node0x561af655df50;
	Node0x561af6562110:s1 -> Node0x561af655e2c0;
	Node0x561af655e2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.end15:                                         \l  %9 = load %struct._GString*, %struct._GString** %token, align 8, !dbg !180\l  call void @llvm.dbg.value(metadata %struct._GString* %9, metadata !181,\l... metadata !DIExpression()) #4, !dbg !187\l  call void @llvm.dbg.value(metadata i8 %ch, metadata !186, metadata\l... !DIExpression()) #4, !dbg !187\l  %len.i = getelementptr inbounds %struct._GString, %struct._GString* %9, i64\l... 0, i32 1, !dbg !189\l  %10 = load i64, i64* %len.i, align 8, !dbg !189\l  %add.i = add i64 %10, 1, !dbg !191\l  %allocated_len.i = getelementptr inbounds %struct._GString,\l... %struct._GString* %9, i64 0, i32 2, !dbg !192\l  %11 = load i64, i64* %allocated_len.i, align 8, !dbg !192\l  %cmp.i79 = icmp ult i64 %add.i, %11, !dbg !193\l  br i1 %cmp.i79, label %if.then.i, label %if.else.i81, !dbg !194, !prof !195\l|{<s0>T|<s1>F}}"];
	Node0x561af655e2c0:s0 -> Node0x561af66306c0;
	Node0x561af655e2c0:s1 -> Node0x561af6568b70;
	Node0x561af66306c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.then.i:                                        \l  %str.i = getelementptr inbounds %struct._GString, %struct._GString* %9, i64\l... 0, i32 0, !dbg !196\l  %12 = load i8*, i8** %str.i, align 8, !dbg !196\l  store i64 %add.i, i64* %len.i, align 8, !dbg !198\l  %arrayidx.i = getelementptr i8, i8* %12, i64 %10, !dbg !199\l  store i8 %ch, i8* %arrayidx.i, align 1, !dbg !200\l  %13 = load i8*, i8** %str.i, align 8, !dbg !201\l  %14 = load i64, i64* %len.i, align 8, !dbg !202\l  %arrayidx4.i80 = getelementptr i8, i8* %13, i64 %14, !dbg !203\l  store i8 0, i8* %arrayidx4.i80, align 1, !dbg !204\l  br label %if.end17, !dbg !205\l}"];
	Node0x561af66306c0 -> Node0x561af655df50;
	Node0x561af6568b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.else.i81:                                      \l  %call.i = tail call %struct._GString* @g_string_insert_c(%struct._GString*\l... %9, i64 -1, i8 signext %ch) #4, !dbg !206\l  br label %if.end17\l}"];
	Node0x561af6568b70 -> Node0x561af655df50;
	Node0x561af655df50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{if.end17:                                         \l  switch i8 %8, label %sw.epilog [\l    i8 100, label %sw.bb\l    i8 101, label %sw.bb\l    i8 102, label %sw.bb\l    i8 103, label %sw.bb\l    i8 104, label %sw.bb\l    i8 105, label %sw.bb\l    i8 110, label %sw.bb\l    i8 106, label %sw.bb\l    i8 107, label %sw.bb\l    i8 108, label %sw.bb\l    i8 109, label %sw.bb\l    i8 16, label %sw.bb21\l    i8 0, label %sw.bb25\l    i8 1, label %sw.bb29\l  ], !dbg !207, !prof !208\l|{<s0>def|<s1>100|<s2>101|<s3>102|<s4>103|<s5>104|<s6>105|<s7>110|<s8>106|<s9>107|<s10>108|<s11>109|<s12>16|<s13>0|<s14>1}}"];
	Node0x561af655df50:s0 -> Node0x561af62ff090;
	Node0x561af655df50:s1 -> Node0x561af655f840;
	Node0x561af655df50:s2 -> Node0x561af655f840;
	Node0x561af655df50:s3 -> Node0x561af655f840;
	Node0x561af655df50:s4 -> Node0x561af655f840;
	Node0x561af655df50:s5 -> Node0x561af655f840;
	Node0x561af655df50:s6 -> Node0x561af655f840;
	Node0x561af655df50:s7 -> Node0x561af655f840;
	Node0x561af655df50:s8 -> Node0x561af655f840;
	Node0x561af655df50:s9 -> Node0x561af655f840;
	Node0x561af655df50:s10 -> Node0x561af655f840;
	Node0x561af655df50:s11 -> Node0x561af655f840;
	Node0x561af655df50:s12 -> Node0x561af6560a10;
	Node0x561af655df50:s13 -> Node0x561af6562900;
	Node0x561af655df50:s14 -> Node0x561af6562d80;
	Node0x561af655f840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{sw.bb:                                            \l  %15 = load %struct._GString*, %struct._GString** %token, align 8, !dbg !209\l  %16 = load i32, i32* %x, align 8, !dbg !210\l  %17 = load i32, i32* %y28, align 4, !dbg !211\l  tail call void @json_message_process_token(%struct.JSONLexer* nonnull\l... %lexer, %struct._GString* %15, i32 %conv10, i32 %16, i32 %17) #4, !dbg !212\l  br label %sw.bb21, !dbg !212\l}"];
	Node0x561af655f840 -> Node0x561af6560a10;
	Node0x561af6560a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{sw.bb21:                                          \l  %18 = load %struct._GString*, %struct._GString** %token, align 8, !dbg !213\l  %call23 = tail call %struct._GString* @g_string_truncate(%struct._GString*\l... %18, i64 0) #4, !dbg !214\l  %19 = load i32, i32* %start_state, align 8, !dbg !215\l  call void @llvm.dbg.value(metadata i32 %19, metadata !125, metadata\l... !DIExpression()), !dbg !129\l  br label %sw.epilog, !dbg !216\l}"];
	Node0x561af6560a10 -> Node0x561af62ff090;
	Node0x561af6562900 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{sw.bb25:                                          \l  %20 = load %struct._GString*, %struct._GString** %token, align 8, !dbg !217\l  %21 = load i32, i32* %x, align 8, !dbg !218\l  %22 = load i32, i32* %y28, align 4, !dbg !219\l  tail call void @json_message_process_token(%struct.JSONLexer* nonnull\l... %lexer, %struct._GString* %20, i32 0, i32 %21, i32 %22) #4, !dbg !220\l  call void @llvm.dbg.value(metadata i32 1, metadata !125, metadata\l... !DIExpression()), !dbg !129\l  br label %sw.bb29, !dbg !221\l}"];
	Node0x561af6562900 -> Node0x561af6562d80;
	Node0x561af6562d80 [shape=record,penwidth=3.0, color="red",label="{sw.bb29:                                          \l  call void @llvm.dbg.value(metadata i32 1, metadata !125, metadata\l... !DIExpression()), !dbg !129\l  %23 = load %struct._GString*, %struct._GString** %token, align 8, !dbg !222\l  %call31 = tail call %struct._GString* @g_string_truncate(%struct._GString*\l... %23, i64 0) #4, !dbg !223\l  br label %sw.epilog, !dbg !224\l}"];
	Node0x561af6562d80 -> Node0x561af62ff090;
	Node0x561af62ff090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{sw.epilog:                                        \l  %new_state.1 = phi i32 [ %conv10, %if.end17 ], [ 1, %sw.bb29 ], [ %19,\l... %sw.bb21 ], !dbg !225\l  call void @llvm.dbg.value(metadata i32 %new_state.1, metadata !125, metadata\l... !DIExpression()), !dbg !129\l  store i32 %new_state.1, i32* %state, align 4, !dbg !226\l  br label %while.cond, !dbg !159, !llvm.loop !227\l}"];
	Node0x561af62ff090 -> Node0x561af655b6f0;
	Node0x561af655b8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{while.end:                                        \l  %24 = load %struct._GString*, %struct._GString** %token, align 8, !dbg !229\l  %len = getelementptr inbounds %struct._GString, %struct._GString* %24, i64\l... 0, i32 1, !dbg !231\l  %25 = load i64, i64* %len, align 8, !dbg !231\l  %cmp34 = icmp ugt i64 %25, 67108864, !dbg !232\l  br i1 %cmp34, label %if.then36, label %if.end45, !dbg !233, !prof !135\l|{<s0>T|<s1>F}}"];
	Node0x561af655b8a0:s0 -> Node0x561af6563a70;
	Node0x561af655b8a0:s1 -> Node0x561af6563ac0;
	Node0x561af6563a70 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then36:                                        \l  %26 = load i32, i32* %state, align 4, !dbg !234\l  %27 = load i32, i32* %x, align 8, !dbg !236\l  %28 = load i32, i32* %y28, align 4, !dbg !237\l  tail call void @json_message_process_token(%struct.JSONLexer* nonnull\l... %lexer, %struct._GString* %24, i32 %26, i32 %27, i32 %28) #4, !dbg !238\l  %29 = load %struct._GString*, %struct._GString** %token, align 8, !dbg !239\l  %call42 = tail call %struct._GString* @g_string_truncate(%struct._GString*\l... %29, i64 0) #4, !dbg !240\l  %30 = load i32, i32* %start_state, align 8, !dbg !241\l  store i32 %30, i32* %state, align 4, !dbg !242\l  br label %if.end45, !dbg !243\l}"];
	Node0x561af6563a70 -> Node0x561af6563ac0;
	Node0x561af6563ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.end45:                                         \l  ret void, !dbg !244\l}"];
}
