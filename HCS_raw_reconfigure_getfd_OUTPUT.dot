digraph "CFG for 'raw_reconfigure_getfd' function" {
	label="CFG for 'raw_reconfigure_getfd' function";

	Node0x555823089890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2859, metadata !DIExpression()), !dbg !2948\l  call void @llvm.dbg.value(metadata i32 %flags, metadata !2860, metadata\l... !DIExpression()), !dbg !2948\l  call void @llvm.dbg.value(metadata i32* %open_flags, metadata !2861,\l... metadata !DIExpression()), !dbg !2948\l  call void @llvm.dbg.value(metadata i64 %perm, metadata !2862, metadata\l... !DIExpression()), !dbg !2948\l  call void @llvm.dbg.value(metadata i1 %force_dup, metadata !2863, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2948\l  call void @llvm.dbg.value(metadata %struct.Error** %errp, metadata !2864,\l... metadata !DIExpression()), !dbg !2948\l  %opaque = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 8, !dbg !2949\l  %0 = bitcast i8** %opaque to %struct.BDRVRawState**, !dbg !2949\l  %1 = load %struct.BDRVRawState*, %struct.BDRVRawState** %0, align 8, !dbg\l... !2949\l  call void @llvm.dbg.value(metadata %struct.BDRVRawState* %1, metadata !2865,\l... metadata !DIExpression()), !dbg !2948\l  call void @llvm.dbg.value(metadata i32 -1, metadata !2939, metadata\l... !DIExpression()), !dbg !2948\l  %and = and i64 %perm, 14, !dbg !2950\l  %tobool = icmp ne i64 %and, 0, !dbg !2951\l  call void @llvm.dbg.value(metadata i1 %tobool, metadata !2941, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2948\l  call void @llvm.dbg.value(metadata i32 265216, metadata !2942, metadata\l... !DIExpression()), !dbg !2948\l  store i32 0, i32* %open_flags, align 4, !dbg !2952\l  %type = getelementptr inbounds %struct.BDRVRawState, %struct.BDRVRawState*\l... %1, i64 0, i32 2, !dbg !2953\l  %2 = load i32, i32* %type, align 8, !dbg !2953\l  %cmp = icmp eq i32 %2, 1, !dbg !2955\l  %spec.store.select = select i1 %cmp, i32 2048, i32 0, !dbg !2956, !prof !2957\l  call void @llvm.dbg.value(metadata i32 %flags, metadata !2958, metadata\l... !DIExpression()) #19, !dbg !2966\l  call void @llvm.dbg.value(metadata i32* %open_flags, metadata !2963,\l... metadata !DIExpression()) #19, !dbg !2966\l  call void @llvm.dbg.value(metadata i1 %tobool, metadata !2964, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)) #19, !dbg !2966\l  call void @llvm.dbg.value(metadata i8 0, metadata !2965, metadata\l... !DIExpression()) #19, !dbg !2966\l  %and1.i = and i32 %flags, 131072, !dbg !2968\l  %tobool.i = icmp eq i32 %and1.i, 0, !dbg !2968\l  %and6.i = and i32 %flags, 2, !dbg !2970\l  %tobool7.i = icmp ne i32 %and6.i, 0, !dbg !2970\l  %read_write.0.i = select i1 %tobool.i, i1 %tobool7.i, i1 %tobool, !dbg\l... !2970, !prof !2957\l  call void @llvm.dbg.value(metadata i8 undef, metadata !2965, metadata\l... !DIExpression()) #19, !dbg !2966\l  %or.i = or i32 %spec.store.select, 2, !dbg !2971\l  %storemerge.i = select i1 %read_write.0.i, i32 %or.i, i32\l... %spec.store.select, !dbg !2971, !prof !2972\l  %and15.i = shl i32 %flags, 9, !dbg !2973\l  %3 = and i32 %and15.i, 16384, !dbg !2973\l  %4 = or i32 %storemerge.i, %3, !dbg !2973\l  store i32 %4, i32* %open_flags, align 4, !dbg !2966\l  %open_flags4 = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %1, i64 0, i32 3, !dbg !2974\l  %5 = load i32, i32* %open_flags4, align 4, !dbg !2974\l  %and5 = and i32 %5, 8192, !dbg !2974\l  %cmp6 = icmp eq i32 %and5, 0, !dbg !2974\l  br i1 %cmp6, label %if.end8, label %if.else, !dbg !2977, !prof !2978\l|{<s0>T|<s1>F}}"];
	Node0x555823089890:s0 -> Node0x5558230923a0;
	Node0x555823089890:s1 -> Node0x555823092430;
	Node0x555823092430 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x\l... i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x\l... i8]* @.str.3, i64 0, i64 0), i32 947, i8* getelementptr inbounds ([85 x i8],\l... [85 x i8]* @__PRETTY_FUNCTION__.raw_reconfigure_getfd, i64 0, i64 0)) #20,\l... !dbg !2974\l  unreachable, !dbg !2974\l}"];
	Node0x5558230923a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end8:                                          \l  %force_dup.not = xor i1 %force_dup, true, !dbg !2979\l  %cmp11 = icmp eq i32 %4, %5, !dbg !2981\l  %or.cond = and i1 %cmp11, %force_dup.not, !dbg !2979\l  br i1 %or.cond, label %if.then12, label %if.end14, !dbg !2979, !prof !2982\l|{<s0>T|<s1>F}}"];
	Node0x5558230923a0:s0 -> Node0x555823094310;
	Node0x5558230923a0:s1 -> Node0x555823094400;
	Node0x555823094310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.then12:                                        \l  %fd13 = getelementptr inbounds %struct.BDRVRawState, %struct.BDRVRawState*\l... %1, i64 0, i32 0, !dbg !2983\l  %6 = load i32, i32* %fd13, align 8, !dbg !2983\l  br label %cleanup48, !dbg !2985\l}"];
	Node0x555823094310 -> Node0x555823095120;
	Node0x555823094400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{if.end14:                                         \l  %7 = xor i32 %4, %5, !dbg !2986\l  %8 = and i32 %7, -265217, !dbg !2986\l  %cmp19 = icmp eq i32 %8, 0, !dbg !2986\l  br i1 %cmp19, label %if.then20, label %if.then32, !dbg !2988, !prof !2989\l|{<s0>T|<s1>F}}"];
	Node0x555823094400:s0 -> Node0x5558230955f0;
	Node0x555823094400:s1 -> Node0x5558230981c0;
	Node0x5558230955f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then20:                                        \l  %fd21 = getelementptr inbounds %struct.BDRVRawState, %struct.BDRVRawState*\l... %1, i64 0, i32 0, !dbg !2990\l  %9 = load i32, i32* %fd21, align 8, !dbg !2990\l  %call = tail call i32 @qemu_dup(i32 %9) #19, !dbg !2992\l  call void @llvm.dbg.value(metadata i32 %call, metadata !2939, metadata\l... !DIExpression()), !dbg !2948\l  %cmp22 = icmp sgt i32 %call, -1, !dbg !2993\l  br i1 %cmp22, label %if.then23, label %if.end30, !dbg !2995\l|{<s0>T|<s1>F}}"];
	Node0x5558230955f0:s0 -> Node0x555823097010;
	Node0x5558230955f0:s1 -> Node0x555823095640;
	Node0x555823097010 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then23:                                        \l  %10 = load i32, i32* %open_flags, align 4, !dbg !2996\l  %call24 = tail call i32 @fcntl_setfl(i32 %call, i32 %10) #19, !dbg !2998\l  call void @llvm.dbg.value(metadata i32 %call24, metadata !2940, metadata\l... !DIExpression()), !dbg !2948\l  %tobool25 = icmp eq i32 %call24, 0, !dbg !2999\l  br i1 %tobool25, label %cleanup48, label %if.then26, !dbg !3001\l|{<s0>T|<s1>F}}"];
	Node0x555823097010:s0 -> Node0x555823095120;
	Node0x555823097010:s1 -> Node0x555823097890;
	Node0x555823097890 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then26:                                        \l  %call27 = tail call i32 @qemu_close(i32 %call) #19, !dbg !3002\l  call void @llvm.dbg.value(metadata i32 -1, metadata !2939, metadata\l... !DIExpression()), !dbg !2948\l  br label %if.then32, !dbg !3004\l}"];
	Node0x555823097890 -> Node0x5558230981c0;
	Node0x555823095640 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end30:                                         \l  call void @llvm.dbg.value(metadata i32 %call, metadata !2939, metadata\l... !DIExpression()), !dbg !2948\l  %cmp31 = icmp eq i32 %call, -1, !dbg !3005\l  br i1 %cmp31, label %if.then32, label %cleanup48, !dbg !3006, !prof !3007\l|{<s0>T|<s1>F}}"];
	Node0x555823095640:s0 -> Node0x5558230981c0;
	Node0x555823095640:s1 -> Node0x555823095120;
	Node0x5558230981c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{if.then32:                                        \l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2943, metadata !DIExpression(DW_OP_plus_uconst, 49, DW_OP_stack_value)),\l... !dbg !3008\l  call void @llvm.dbg.value(metadata i32 0, metadata !2940, metadata\l... !DIExpression()), !dbg !2948\l  %11 = load i32, i32* %open_flags, align 4, !dbg !3009\l  %and36 = and i32 %11, 64, !dbg !3009\l  %tobool37 = icmp eq i32 %and36, 0, !dbg !3009\l  br i1 %tobool37, label %if.end40, label %if.else39, !dbg !3014, !prof !3015\l|{<s0>T|<s1>F}}"];
	Node0x5558230981c0:s0 -> Node0x555823099a30;
	Node0x5558230981c0:s1 -> Node0x555823099a80;
	Node0x555823099a80 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else39:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x\l... i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x\l... i8]* @.str.3, i64 0, i64 0), i32 972, i8* getelementptr inbounds ([85 x i8],\l... [85 x i8]* @__PRETTY_FUNCTION__.raw_reconfigure_getfd, i64 0, i64 0)) #20,\l... !dbg !3009\l  unreachable, !dbg !3009\l}"];
	Node0x555823099a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{if.end40:                                         \l  %arraydecay = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 12, i64 0, !dbg !3016\l  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !2943, metadata\l... !DIExpression()), !dbg !3008\l  %call41 = tail call i32 (i8*, i32, ...) @qemu_open(i8* nonnull %arraydecay,\l... i32 %11) #19, !dbg !3017\l  call void @llvm.dbg.value(metadata i32 %call41, metadata !2939, metadata\l... !DIExpression()), !dbg !2948\l  %cmp42 = icmp eq i32 %call41, -1, !dbg !3018\l  br i1 %cmp42, label %cleanup, label %cleanup48, !dbg !3020, !prof !2989\l|{<s0>T|<s1>F}}"];
	Node0x555823099a30:s0 -> Node0x55582309c2d0;
	Node0x555823099a30:s1 -> Node0x555823095120;
	Node0x55582309c2d0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{cleanup:                                          \l  %call44 = tail call i32* @__errno_location() #21, !dbg !3021\l  %12 = load i32, i32* %call44, align 4, !dbg !3021\l  tail call void (%struct.Error**, i8*, i32, i8*, i32, i8*, ...)\l... @error_setg_errno_internal(%struct.Error** %errp, i8* getelementptr inbounds\l... ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 975, i8* getelementptr\l... inbounds ([22 x i8], [22 x i8]* @__func__.raw_reconfigure_getfd, i64 0, i64\l... 0), i32 %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64\l... 0, i64 0)) #19, !dbg !3021\l  call void @llvm.dbg.value(metadata i32 -1, metadata !2939, metadata\l... !DIExpression()), !dbg !2948\l  br label %cleanup48\l}"];
	Node0x55582309c2d0 -> Node0x555823095120;
	Node0x555823095120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup48:                                        \l  %retval.1 = phi i32 [ -1, %cleanup ], [ %6, %if.then12 ], [ %call, %if.end30\l... ], [ %call, %if.then23 ], [ %call41, %if.end40 ], !dbg !2948\l  ret i32 %retval.1, !dbg !3023\l}"];
}
