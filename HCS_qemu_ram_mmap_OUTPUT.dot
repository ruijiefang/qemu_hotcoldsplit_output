digraph "CFG for 'qemu_ram_mmap' function" {
	label="CFG for 'qemu_ram_mmap' function";

	Node0x55f82f2bdcb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata i32 %fd, metadata !52, metadata\l... !DIExpression()), !dbg !75\l  call void @llvm.dbg.value(metadata i64 %size, metadata !53, metadata\l... !DIExpression()), !dbg !75\l  call void @llvm.dbg.value(metadata i64 %align, metadata !54, metadata\l... !DIExpression()), !dbg !75\l  call void @llvm.dbg.value(metadata i1 %shared, metadata !55, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !75\l  call void @llvm.dbg.value(metadata i1 %is_pmem, metadata !56, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !75\l  call void @llvm.dbg.value(metadata i32 0, metadata !58, metadata\l... !DIExpression()), !dbg !75\l  %add = add i64 %align, %size, !dbg !76\l  call void @llvm.dbg.value(metadata i64 %add, metadata !62, metadata\l... !DIExpression()), !dbg !75\l  call void @llvm.dbg.value(metadata i32 -1, metadata !59, metadata\l... !DIExpression()), !dbg !75\l  %0 = load i64, i64* @qemu_real_host_page_size, align 8, !dbg !77\l  call void @llvm.dbg.value(metadata i64 %0, metadata !61, metadata\l... !DIExpression()), !dbg !75\l  call void @llvm.dbg.value(metadata i32 34, metadata !57, metadata\l... !DIExpression()), !dbg !75\l  %call = tail call i8* @mmap64(i8* null, i64 %add, i32 0, i32 34, i32 -1, i64\l... 0) #9, !dbg !78\l  call void @llvm.dbg.value(metadata i8* %call, metadata !63, metadata\l... !DIExpression()), !dbg !75\l  %cmp = icmp eq i8* %call, inttoptr (i64 -1 to i8*), !dbg !79\l  br i1 %cmp, label %cleanup, label %if.end, !dbg !81, !prof !82\l|{<s0>T|<s1>F}}"];
	Node0x55f82f2bdcb0:s0 -> Node0x55f82f2cb2a0;
	Node0x55f82f2bdcb0:s1 -> Node0x55f82f2c9c20;
	Node0x55f82f2c9c20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  call void @llvm.dbg.value(metadata i64 %align, metadata !83, metadata\l... !DIExpression()) #9, !dbg !93\l  %1 = tail call i64 @llvm.ctpop.i64(i64 %align) #9, !dbg !97, !range !98\l  %2 = icmp eq i64 %1, 1, !dbg !97\l  br i1 %2, label %if.end4, label %if.else, !dbg !99, !prof !100\l|{<s0>T|<s1>F}}"];
	Node0x55f82f2c9c20:s0 -> Node0x55f82f2cb9d0;
	Node0x55f82f2c9c20:s1 -> Node0x55f82f2cba40;
	Node0x55f82f2cba40 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x\l... i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x\l... i8]* @.str.2, i64 0, i64 0), i32 136, i8* getelementptr inbounds ([55 x i8],\l... [55 x i8]* @__PRETTY_FUNCTION__.qemu_ram_mmap, i64 0, i64 0)) #10, !dbg !101\l  unreachable, !dbg !101\l}"];
	Node0x55f82f2cb9d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end4:                                          \l  %cmp5 = icmp ugt i64 %0, %align, !dbg !102\l  br i1 %cmp5, label %if.else7, label %if.end8, !dbg !105, !prof !82\l|{<s0>T|<s1>F}}"];
	Node0x55f82f2cb9d0:s0 -> Node0x55f82f2cdb10;
	Node0x55f82f2cb9d0:s1 -> Node0x55f82f2cdac0;
	Node0x55f82f2cdb10 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else7:                                         \l  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x\l... i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x\l... i8]* @.str.2, i64 0, i64 0), i32 138, i8* getelementptr inbounds ([55 x i8],\l... [55 x i8]* @__PRETTY_FUNCTION__.qemu_ram_mmap, i64 0, i64 0)) #10, !dbg !102\l  unreachable, !dbg !102\l}"];
	Node0x55f82f2cdac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end8:                                          \l  call void @llvm.dbg.value(metadata i32 16, metadata !57, metadata\l... !DIExpression()), !dbg !75\l  %cmp9 = icmp eq i32 %fd, -1, !dbg !106\l  %or = select i1 %cmp9, i32 48, i32 16, !dbg !107, !prof !100\l  call void @llvm.dbg.value(metadata i32 %or, metadata !57, metadata\l... !DIExpression()), !dbg !75\l  %cond10 = select i1 %shared, i32 1, i32 2, !dbg !108, !prof !82\l  %or11 = or i32 %cond10, %or, !dbg !109\l  call void @llvm.dbg.value(metadata i32 %or11, metadata !57, metadata\l... !DIExpression()), !dbg !75\l  call void @llvm.dbg.value(metadata i32 0, metadata !58, metadata\l... !DIExpression()), !dbg !75\l  %3 = ptrtoint i8* %call to i64, !dbg !110\l  %add16 = add i64 %align, -1, !dbg !110\l  %sub = add i64 %add16, %3, !dbg !110\l  %4 = urem i64 %sub, %align, !dbg !110\l  %mul = sub i64 %sub, %4, !dbg !110\l  %sub17 = sub i64 %mul, %3, !dbg !111\l  call void @llvm.dbg.value(metadata i64 %sub17, metadata !60, metadata\l... !DIExpression()), !dbg !75\l  %add.ptr = getelementptr i8, i8* %call, i64 %sub17, !dbg !112\l  %call19 = tail call i8* @mmap64(i8* %add.ptr, i64 %size, i32 3, i32 %or11,\l... i32 %fd, i64 0) #9, !dbg !113\l  call void @llvm.dbg.value(metadata i8* %call19, metadata !64, metadata\l... !DIExpression()), !dbg !75\l  %cmp39 = icmp eq i8* %call19, inttoptr (i64 -1 to i8*), !dbg !114\l  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !116, !prof !82\l|{<s0>T|<s1>F}}"];
	Node0x55f82f2cdac0:s0 -> Node0x55f82f2c94d0;
	Node0x55f82f2cdac0:s1 -> Node0x55f82f2d96b0;
	Node0x55f82f2c94d0 [shape=record,penwidth=3.0, color="red",label="{if.then41:                                        \l  %call42 = tail call i32 @munmap(i8* %call, i64 %add) #9, !dbg !117\l  br label %cleanup, !dbg !119\l}"];
	Node0x55f82f2c94d0 -> Node0x55f82f2cb2a0;
	Node0x55f82f2d96b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end43:                                         \l  %cmp44 = icmp eq i64 %sub17, 0, !dbg !120\l  br i1 %cmp44, label %if.end48, label %if.then46, !dbg !122, !prof !123\l|{<s0>T|<s1>F}}"];
	Node0x55f82f2d96b0:s0 -> Node0x55f82f2da5c0;
	Node0x55f82f2d96b0:s1 -> Node0x55f82f2da570;
	Node0x55f82f2da570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then46:                                        \l  %call47 = tail call i32 @munmap(i8* %call, i64 %sub17) #9, !dbg !124\l  br label %if.end48, !dbg !126\l}"];
	Node0x55f82f2da570 -> Node0x55f82f2da5c0;
	Node0x55f82f2da5c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end48:                                         \l  %sub49 = sub i64 %add, %sub17, !dbg !127\l  call void @llvm.dbg.value(metadata i64 %sub49, metadata !62, metadata\l... !DIExpression()), !dbg !75\l  %add50 = add i64 %0, %size, !dbg !128\l  %cmp51 = icmp ugt i64 %sub49, %add50, !dbg !130\l  br i1 %cmp51, label %if.then53, label %cleanup, !dbg !131, !prof !100\l|{<s0>T|<s1>F}}"];
	Node0x55f82f2da5c0:s0 -> Node0x55f82f2dace0;
	Node0x55f82f2da5c0:s1 -> Node0x55f82f2cb2a0;
	Node0x55f82f2dace0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then53:                                        \l  %add.ptr54 = getelementptr i8, i8* %call19, i64 %size, !dbg !132\l  %add.ptr55 = getelementptr i8, i8* %add.ptr54, i64 %0, !dbg !134\l  %sub57 = sub i64 %sub49, %add50, !dbg !135\l  %call58 = tail call i32 @munmap(i8* %add.ptr55, i64 %sub57) #9, !dbg !136\l  br label %cleanup, !dbg !137\l}"];
	Node0x55f82f2dace0 -> Node0x55f82f2cb2a0;
	Node0x55f82f2cb2a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  %retval.0 = phi i8* [ inttoptr (i64 -1 to i8*), %if.then41 ], [ inttoptr\l... (i64 -1 to i8*), %entry ], [ %call19, %if.then53 ], [ %call19, %if.end48 ],\l... !dbg !75\l  ret i8* %retval.0, !dbg !138\l}"];
}
