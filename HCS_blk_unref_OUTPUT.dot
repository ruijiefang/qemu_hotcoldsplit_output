digraph "CFG for 'blk_unref' function" {
	label="CFG for 'blk_unref' function";

	Node0x55d70fba0590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BlockBackend* %blk, metadata\l... !3090, metadata !DIExpression()), !dbg !3092\l  %tobool = icmp eq %struct.BlockBackend* %blk, null, !dbg !3093\l  br i1 %tobool, label %if.end14, label %if.then, !dbg !3095, !prof !3096\l|{<s0>T|<s1>F}}"];
	Node0x55d70fba0590:s0 -> Node0x55d70fb9e5f0;
	Node0x55d70fba0590:s1 -> Node0x55d70fb9f380;
	Node0x55d70fb9f380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.then:                                          \l  %refcnt = getelementptr inbounds %struct.BlockBackend, %struct.BlockBackend*\l... %blk, i64 0, i32 1, !dbg !3097\l  %0 = load i32, i32* %refcnt, align 8, !dbg !3097\l  %cmp = icmp sgt i32 %0, 0, !dbg !3097\l  br i1 %cmp, label %if.end, label %if.else, !dbg !3101, !prof !3102\l|{<s0>T|<s1>F}}"];
	Node0x55d70fb9f380:s0 -> Node0x55d70fb28ea0;
	Node0x55d70fb9f380:s1 -> Node0x55d70fb28ef0;
	Node0x55d70fb28ef0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x\l... i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x\l... i8]* @.str.2, i64 0, i64 0), i32 494, i8* getelementptr inbounds ([31 x i8],\l... [31 x i8]* @__PRETTY_FUNCTION__.blk_unref, i64 0, i64 0)) #23, !dbg !3097\l  unreachable, !dbg !3097\l}"];
	Node0x55d70fb28ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end:                                           \l  %cmp3 = icmp eq i32 %0, 1, !dbg !3103\l  br i1 %cmp3, label %if.else6, label %if.then4, !dbg !3105, !prof !3106\l|{<s0>T|<s1>F}}"];
	Node0x55d70fb28ea0:s0 -> Node0x55d70fba2f60;
	Node0x55d70fb28ea0:s1 -> Node0x55d70fb29570;
	Node0x55d70fb29570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{if.then4:                                         \l  %dec = add nsw i32 %0, -1, !dbg !3107\l  store i32 %dec, i32* %refcnt, align 8, !dbg !3107\l  br label %if.end14, !dbg !3109\l}"];
	Node0x55d70fb29570 -> Node0x55d70fb9e5f0;
	Node0x55d70fba2f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.else6:                                         \l  tail call void @blk_drain(%struct.BlockBackend* nonnull %blk), !dbg !3110\l  %1 = load i32, i32* %refcnt, align 8, !dbg !3112\l  %cmp8 = icmp eq i32 %1, 1, !dbg !3112\l  br i1 %cmp8, label %if.end11, label %if.else10, !dbg !3115, !prof !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fba2f60:s0 -> Node0x55d70fb86750;
	Node0x55d70fba2f60:s1 -> Node0x55d70fb867a0;
	Node0x55d70fb867a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else10:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x\l... i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x\l... i8]* @.str.2, i64 0, i64 0), i32 500, i8* getelementptr inbounds ([31 x i8],\l... [31 x i8]* @__PRETTY_FUNCTION__.blk_unref, i64 0, i64 0)) #23, !dbg !3112\l  unreachable, !dbg !3112\l}"];
	Node0x55d70fb86750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end11:                                         \l  store i32 0, i32* %refcnt, align 8, !dbg !3117\l  call void @llvm.dbg.value(metadata %struct.BlockBackend* %blk, metadata\l... !3118, metadata !DIExpression()) #24, !dbg !3121\l  %name.i = getelementptr inbounds %struct.BlockBackend, %struct.BlockBackend*\l... %blk, i64 0, i32 0, !dbg !3123\l  %2 = load i8*, i8** %name.i, align 8, !dbg !3123\l  %tobool1.i = icmp eq i8* %2, null, !dbg !3123\l  br i1 %tobool1.i, label %if.end4.i, label %if.else3.i, !dbg !3126, !prof\l... !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fb86750:s0 -> Node0x55d70fcfcde0;
	Node0x55d70fb86750:s1 -> Node0x55d70fbf0f10;
	Node0x55d70fbf0f10 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else3.i:                                       \l  tail call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x\l... i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x\l... i8]* @.str.2, i64 0, i64 0), i32 441, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.blk_delete, i64 0, i64 0)) #23, !dbg !3123\l  unreachable, !dbg !3123\l}"];
	Node0x55d70fcfcde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end4.i:                                        \l  %dev.i = getelementptr inbounds %struct.BlockBackend, %struct.BlockBackend*\l... %blk, i64 0, i32 8, !dbg !3127\l  %3 = load %struct.DeviceState*, %struct.DeviceState** %dev.i, align 8, !dbg\l... !3127\l  %tobool5.i = icmp eq %struct.DeviceState* %3, null, !dbg !3127\l  br i1 %tobool5.i, label %if.end8.i, label %if.else7.i, !dbg !3130, !prof\l... !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fcfcde0:s0 -> Node0x55d70fcfd300;
	Node0x55d70fcfcde0:s1 -> Node0x55d70fe26150;
	Node0x55d70fe26150 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else7.i:                                       \l  tail call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x\l... i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x\l... i8]* @.str.2, i64 0, i64 0), i32 442, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.blk_delete, i64 0, i64 0)) #23, !dbg !3127\l  unreachable, !dbg !3127\l}"];
	Node0x55d70fcfd300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end8.i:                                        \l  %throttle_state.i = getelementptr inbounds %struct.BlockBackend,\l... %struct.BlockBackend* %blk, i64 0, i32 7, i32 0, i32 5, !dbg !3131\l  %4 = load %struct.ThrottleState*, %struct.ThrottleState** %throttle_state.i,\l... align 8, !dbg !3131\l  %tobool9.i = icmp eq %struct.ThrottleState* %4, null, !dbg !3133\l  br i1 %tobool9.i, label %if.end11.i, label %if.then10.i, !dbg !3134, !prof\l... !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fcfd300:s0 -> Node0x55d70fa951a0;
	Node0x55d70fcfd300:s1 -> Node0x55d70fcae500;
	Node0x55d70fcae500 [shape=record,penwidth=3.0, color="red",label="{if.then10.i:                                      \l  tail call void @blk_io_limits_disable(%struct.BlockBackend* nonnull %blk)\l... #24, !dbg !3135\l  br label %if.end11.i, !dbg !3137\l}"];
	Node0x55d70fcae500 -> Node0x55d70fa951a0;
	Node0x55d70fa951a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end11.i:                                       \l  %root.i = getelementptr inbounds %struct.BlockBackend, %struct.BlockBackend*\l... %blk, i64 0, i32 2, !dbg !3138\l  %5 = load %struct.BdrvChild*, %struct.BdrvChild** %root.i, align 8, !dbg\l... !3138\l  %tobool12.i = icmp eq %struct.BdrvChild* %5, null, !dbg !3140\l  br i1 %tobool12.i, label %if.end14.i, label %if.then13.i, !dbg !3141, !prof\l... !3142\l|{<s0>T|<s1>F}}"];
	Node0x55d70fa951a0:s0 -> Node0x55d70fea3740;
	Node0x55d70fa951a0:s1 -> Node0x55d70fd41d20;
	Node0x55d70fd41d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.then13.i:                                      \l  tail call void @blk_remove_bs(%struct.BlockBackend* nonnull %blk) #24, !dbg\l... !3143\l  br label %if.end14.i, !dbg !3145\l}"];
	Node0x55d70fd41d20 -> Node0x55d70fea3740;
	Node0x55d70fea3740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end14.i:                                       \l  %vmsh.i = getelementptr inbounds %struct.BlockBackend, %struct.BlockBackend*\l... %blk, i64 0, i32 30, !dbg !3146\l  %6 = load %struct.VMChangeStateEntry*, %struct.VMChangeStateEntry** %vmsh.i,\l... align 8, !dbg !3146\l  %tobool15.i = icmp eq %struct.VMChangeStateEntry* %6, null, !dbg !3148\l  br i1 %tobool15.i, label %if.end19.i, label %if.then16.i, !dbg !3149, !prof\l... !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fea3740:s0 -> Node0x55d70fcdc000;
	Node0x55d70fea3740:s1 -> Node0x55d70fea4410;
	Node0x55d70fea4410 [shape=record,penwidth=3.0, color="red",label="{if.then16.i:                                      \l  tail call void @qemu_del_vm_change_state_handler(%struct.VMChangeStateEntry*\l... nonnull %6) #24, !dbg !3150\l  store %struct.VMChangeStateEntry* null, %struct.VMChangeStateEntry**\l... %vmsh.i, align 8, !dbg !3152\l  br label %if.end19.i, !dbg !3153\l}"];
	Node0x55d70fea4410 -> Node0x55d70fcdc000;
	Node0x55d70fcdc000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end19.i:                                       \l  %lh_first.i = getelementptr inbounds %struct.BlockBackend,\l... %struct.BlockBackend* %blk, i64 0, i32 24, i32 0, i32 0, !dbg !3154\l  %7 = load %struct.Notifier*, %struct.Notifier** %lh_first.i, align 8, !dbg\l... !3154\l  %cmp.i = icmp eq %struct.Notifier* %7, null, !dbg !3154\l  br i1 %cmp.i, label %if.end22.i, label %if.else21.i, !dbg !3157, !prof !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fcdc000:s0 -> Node0x55d70fea4e40;
	Node0x55d70fcdc000:s1 -> Node0x55d70fea0300;
	Node0x55d70fea0300 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else21.i:                                      \l  tail call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x\l... i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x\l... i8]* @.str.2, i64 0, i64 0), i32 453, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.blk_delete, i64 0, i64 0)) #23, !dbg !3154\l  unreachable, !dbg !3154\l}"];
	Node0x55d70fea4e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end22.i:                                       \l  %lh_first24.i = getelementptr inbounds %struct.BlockBackend,\l... %struct.BlockBackend* %blk, i64 0, i32 25, i32 0, i32 0, !dbg !3158\l  %8 = load %struct.Notifier*, %struct.Notifier** %lh_first24.i, align 8, !dbg\l... !3158\l  %cmp25.i = icmp eq %struct.Notifier* %8, null, !dbg !3158\l  br i1 %cmp25.i, label %if.end28.i, label %if.else27.i, !dbg !3161, !prof\l... !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fea4e40:s0 -> Node0x55d70fbe6cc0;
	Node0x55d70fea4e40:s1 -> Node0x55d70fd79b00;
	Node0x55d70fd79b00 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else27.i:                                      \l  tail call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x\l... i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x\l... i8]* @.str.2, i64 0, i64 0), i32 454, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.blk_delete, i64 0, i64 0)) #23, !dbg !3158\l  unreachable, !dbg !3158\l}"];
	Node0x55d70fbe6cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end28.i:                                       \l  %lh_first29.i = getelementptr inbounds %struct.BlockBackend,\l... %struct.BlockBackend* %blk, i64 0, i32 26, i32 0, !dbg !3162\l  %9 = load %struct.BlockBackendAioNotifier*,\l... %struct.BlockBackendAioNotifier** %lh_first29.i, align 8, !dbg !3162\l  %cmp30.i = icmp eq %struct.BlockBackendAioNotifier* %9, null, !dbg !3162\l  br i1 %cmp30.i, label %do.body.i, label %if.else32.i, !dbg !3165, !prof !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fbe6cc0:s0 -> Node0x55d70fea79c0;
	Node0x55d70fbe6cc0:s1 -> Node0x55d70fdbadd0;
	Node0x55d70fdbadd0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else32.i:                                      \l  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x\l... i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x\l... i8]* @.str.2, i64 0, i64 0), i32 455, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.blk_delete, i64 0, i64 0)) #23, !dbg !3162\l  unreachable, !dbg !3162\l}"];
	Node0x55d70fea79c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{do.body.i:                                        \l  %link.i = getelementptr inbounds %struct.BlockBackend, %struct.BlockBackend*\l... %blk, i64 0, i32 5, !dbg !3166\l  %tqe_next.i = bitcast %union.anon.37* %link.i to %struct.BlockBackend**,\l... !dbg !3166\l  %10 = load %struct.BlockBackend*, %struct.BlockBackend** %tqe_next.i, align\l... 8, !dbg !3166\l  %cmp34.i = icmp eq %struct.BlockBackend* %10, null, !dbg !3166\l  %tql_prev.i = getelementptr inbounds %struct.BlockBackend,\l... %struct.BlockBackend* %blk, i64 0, i32 5, i32 0, i32 1, !dbg !3166\l  %11 = bitcast %struct.QTailQLink** %tql_prev.i to i64*, !dbg !3166\l  %12 = load i64, i64* %11, align 8, !dbg !3166\l  br i1 %cmp34.i, label %if.else42.i, label %if.then35.i, !dbg !3169, !prof\l... !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fea79c0:s0 -> Node0x55d70fd917b0;
	Node0x55d70fea79c0:s1 -> Node0x55d70fd7fa60;
	Node0x55d70fd7fa60 [shape=record,penwidth=3.0, color="red",label="{if.then35.i:                                      \l  %tql_prev41.i = getelementptr inbounds %struct.BlockBackend,\l... %struct.BlockBackend* %10, i64 0, i32 5, i32 0, i32 1, !dbg !3166\l  %13 = bitcast %struct.QTailQLink** %tql_prev41.i to i64*, !dbg !3166\l  store i64 %12, i64* %13, align 8, !dbg !3166\l  %.phi.trans.insert = bitcast %union.anon.37* %link.i to i64*, !dbg !3170\l  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3169\l  %.phi.trans.insert21 = bitcast %struct.QTailQLink** %tql_prev.i to i64**,\l... !dbg !3170\l  %.pre22 = load i64*, i64** %.phi.trans.insert21, align 8, !dbg !3169\l  br label %if.end46.i, !dbg !3166\l}"];
	Node0x55d70fd7fa60 -> Node0x55d70fda49f0;
	Node0x55d70fd917b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.else42.i:                                      \l  %14 = inttoptr i64 %12 to i64*, !dbg !3169\l  %15 = ptrtoint %struct.BlockBackend* %10 to i64, !dbg !3169\l  store i64 %12, i64* bitcast (%struct.QTailQLink** getelementptr inbounds\l... (%union.anon.55, %union.anon.55* @block_backends, i64 0, i32 0, i32 1) to\l... i64*), align 8, !dbg !3166\l  br label %if.end46.i\l}"];
	Node0x55d70fd917b0 -> Node0x55d70fda49f0;
	Node0x55d70fda49f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{if.end46.i:                                       \l  %16 = phi i64* [ %14, %if.else42.i ], [ %.pre22, %if.then35.i ], !dbg !3169\l  %17 = phi i64 [ %15, %if.else42.i ], [ %.pre, %if.then35.i ], !dbg !3169\l  store i64 %17, i64* %16, align 8, !dbg !3169\l  %legacy_dinfo.i = getelementptr inbounds %struct.BlockBackend,\l... %struct.BlockBackend* %blk, i64 0, i32 4, !dbg !3171\l  %18 = bitcast %union.anon.37* %link.i to i8*, !dbg !3171\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %18,\l... i8 0, i64 16, i1 false), !dbg !3169\l  %19 = load %struct.DriveInfo*, %struct.DriveInfo** %legacy_dinfo.i, align 8,\l... !dbg !3171\l  call void @llvm.dbg.value(metadata %struct.DriveInfo* %19, metadata !3172,\l... metadata !DIExpression()) #24, !dbg !3177\l  %tobool.i.i = icmp eq %struct.DriveInfo* %19, null, !dbg !3179\l  br i1 %tobool.i.i, label %blk_delete.exit, label %if.end.i.i, !dbg !3181,\l... !prof !3116\l|{<s0>T|<s1>F}}"];
	Node0x55d70fda49f0:s0 -> Node0x55d70fea3c60;
	Node0x55d70fda49f0:s1 -> Node0x55d70fd96530;
	Node0x55d70fd96530 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end.i.i:                                       \l  %opts.i.i = getelementptr inbounds %struct.DriveInfo, %struct.DriveInfo*\l... %19, i64 0, i32 6, !dbg !3182\l  %20 = load %struct.QemuOpts*, %struct.QemuOpts** %opts.i.i, align 8, !dbg\l... !3182\l  tail call void @qemu_opts_del(%struct.QemuOpts* %20) #24, !dbg !3183\l  %21 = bitcast %struct.DriveInfo* %19 to i8*, !dbg !3184\l  tail call void @g_free(i8* nonnull %21) #24, !dbg !3185\l  br label %blk_delete.exit, !dbg !3186\l}"];
	Node0x55d70fd96530 -> Node0x55d70fea3c60;
	Node0x55d70fea3c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{blk_delete.exit:                                  \l  %stats.i = getelementptr inbounds %struct.BlockBackend,\l... %struct.BlockBackend* %blk, i64 0, i32 14, !dbg !3187\l  tail call void @block_acct_cleanup(%struct.BlockAcctStats* nonnull %stats.i)\l... #24, !dbg !3188\l  %22 = bitcast %struct.BlockBackend* %blk to i8*, !dbg !3189\l  tail call void @g_free(i8* nonnull %22) #24, !dbg !3190\l  br label %if.end14\l}"];
	Node0x55d70fea3c60 -> Node0x55d70fb9e5f0;
	Node0x55d70fb9e5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end14:                                         \l  ret void, !dbg !3191\l}"];
}
