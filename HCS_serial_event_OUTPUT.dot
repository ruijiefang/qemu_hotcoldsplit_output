digraph "CFG for 'serial_event' function" {
	label="CFG for 'serial_event' function";

	Node0x5588d41327e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !964, metadata\l... !DIExpression()), !dbg !969\l  call void @llvm.dbg.value(metadata i32 %event, metadata !965, metadata\l... !DIExpression()), !dbg !969\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !966, metadata\l... !DIExpression()), !dbg !969\l  %cmp = icmp eq i32 %event, 0, !dbg !970\l  br i1 %cmp, label %if.then, label %if.end, !dbg !972, !prof !973\l|{<s0>T|<s1>F}}"];
	Node0x5588d41327e0:s0 -> Node0x5588d41384a0;
	Node0x5588d41327e0:s1 -> Node0x5588d41384f0;
	Node0x5588d41384a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then:                                          \l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !966, metadata\l... !DIExpression()), !dbg !969\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !974, metadata\l... !DIExpression()) #16, !dbg !979\l  %0 = getelementptr inbounds i8, i8* %opaque, i64 138, !dbg !981\l  store i8 0, i8* %0, align 2, !dbg !982\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !983, metadata\l... !DIExpression()) #16, !dbg !989\l  call void @llvm.dbg.value(metadata i8 0, metadata !988, metadata\l... !DIExpression()) #16, !dbg !989\l  %recv_fifo.i.i = getelementptr inbounds i8, i8* %opaque, i64 256, !dbg !991\l  %1 = bitcast i8* %recv_fifo.i.i to %struct.Fifo8*, !dbg !991\l  %call.i.i = tail call zeroext i1 @fifo8_is_full(%struct.Fifo8* nonnull %1)\l... #16, !dbg !993\l  br i1 %call.i.i, label %if.else.i.i, label %if.then.i.i, !dbg !994\l|{<s0>T|<s1>F}}"];
	Node0x5588d41384a0:s0 -> Node0x5588d4132790;
	Node0x5588d41384a0:s1 -> Node0x5588d40af890;
	Node0x5588d40af890 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then.i.i:                                      \l  tail call void @fifo8_push(%struct.Fifo8* nonnull %1, i8 zeroext 0) #16,\l... !dbg !995\l  %.phi.trans.insert = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg\l... !979\l  %.pre = load i8, i8* %.phi.trans.insert, align 1, !dbg !997\l  br label %serial_receive_break.exit, !dbg !998\l}"];
	Node0x5588d40af890 -> Node0x5588d40daf30;
	Node0x5588d4132790 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else.i.i:                                      \l  %2 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !999\l  %3 = load i8, i8* %2, align 1, !dbg !1001\l  %4 = or i8 %3, 2, !dbg !1001\l  store i8 %4, i8* %2, align 1, !dbg !1001\l  br label %serial_receive_break.exit\l}"];
	Node0x5588d4132790 -> Node0x5588d40daf30;
	Node0x5588d40daf30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{serial_receive_break.exit:                        \l  %5 = phi i8 [ %.pre, %if.then.i.i ], [ %4, %if.else.i.i ], !dbg !997\l  %6 = getelementptr inbounds i8, i8* %opaque, i64 145, !dbg !1002\l  %7 = or i8 %5, 17, !dbg !997\l  store i8 %7, i8* %6, align 1, !dbg !997\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1003, metadata\l... !DIExpression()) #16, !dbg !1007\l  call void @llvm.dbg.value(metadata i8 1, metadata !1006, metadata\l... !DIExpression()) #16, !dbg !1007\l  %8 = getelementptr inbounds i8, i8* %opaque, i64 141, !dbg !1009\l  %9 = load i8, i8* %8, align 1, !dbg !1009\l  %10 = and i8 %9, 4, !dbg !1011\l  %tobool.i = icmp eq i8 %10, 0, !dbg !1011\l  br i1 %tobool.i, label %if.else.i, label %if.end49.i, !dbg !1012, !prof !1013\l|{<s0>T|<s1>F}}"];
	Node0x5588d40daf30:s0 -> Node0x5588d42c1850;
	Node0x5588d40daf30:s1 -> Node0x5588d42caf30;
	Node0x5588d42c1850 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else.i:                                        \l  %11 = and i8 %9, 1, !dbg !1014\l  %tobool7.i = icmp eq i8 %11, 0, !dbg !1014\l  br i1 %tobool7.i, label %if.else28.i, label %land.lhs.true8.i, !dbg !1016,\l... !prof !1013\l|{<s0>T|<s1>F}}"];
	Node0x5588d42c1850:s0 -> Node0x5588d4256a30;
	Node0x5588d42c1850:s1 -> Node0x5588d42c8c30;
	Node0x5588d42c8c30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true8.i:                                 \l  %timeout_ipending.i = getelementptr inbounds i8, i8* %opaque, i64 320, !dbg\l... !1017\l  %12 = bitcast i8* %timeout_ipending.i to i32*, !dbg !1017\l  %13 = load i32, i32* %12, align 16, !dbg !1017\l  %tobool9.i = icmp eq i32 %13, 0, !dbg !1018\l  br i1 %tobool9.i, label %land.lhs.true21.i, label %if.end49.i, !dbg !1019,\l... !prof !1020\l|{<s0>T|<s1>F}}"];
	Node0x5588d42c8c30:s0 -> Node0x5588d4274dd0;
	Node0x5588d42c8c30:s1 -> Node0x5588d42caf30;
	Node0x5588d4274dd0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true21.i:                                \l  %14 = getelementptr inbounds i8, i8* %opaque, i64 148, !dbg !1021\l  %15 = load i8, i8* %14, align 4, !dbg !1021\l  %16 = and i8 %15, 1, !dbg !1023\l  %tobool24.i = icmp eq i8 %16, 0, !dbg !1023\l  br i1 %tobool24.i, label %if.end49.i, label %lor.lhs.false.i, !dbg !1024\l|{<s0>T|<s1>F}}"];
	Node0x5588d4274dd0:s0 -> Node0x5588d42caf30;
	Node0x5588d4274dd0:s1 -> Node0x5588d42b5670;
	Node0x5588d42b5670 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{lor.lhs.false.i:                                  \l  %num.i = getelementptr inbounds i8, i8* %opaque, i64 272, !dbg !1025\l  %17 = bitcast i8* %num.i to i32*, !dbg !1025\l  %18 = load i32, i32* %17, align 16, !dbg !1025\l  %19 = getelementptr inbounds i8, i8* %opaque, i64 304, !dbg !1026\l  %20 = load i8, i8* %19, align 16, !dbg !1026\l  %conv25.i = zext i8 %20 to i32, !dbg !1027\l  %cmp.i = icmp ult i32 %18, %conv25.i, !dbg !1028\l  br i1 %cmp.i, label %if.else28.i, label %if.end49.i, !dbg !1029\l|{<s0>T|<s1>F}}"];
	Node0x5588d42b5670:s0 -> Node0x5588d4256a30;
	Node0x5588d42b5670:s1 -> Node0x5588d42caf30;
	Node0x5588d4256a30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else28.i:                                      \l  %21 = and i8 %9, 2, !dbg !1030\l  %tobool32.i = icmp eq i8 %21, 0, !dbg !1030\l  br i1 %tobool32.i, label %if.else36.i, label %land.lhs.true33.i, !dbg !1032,\l... !prof !1033\l|{<s0>T|<s1>F}}"];
	Node0x5588d4256a30:s0 -> Node0x5588d42c8760;
	Node0x5588d4256a30:s1 -> Node0x5588d424c150;
	Node0x5588d424c150 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true33.i:                                \l  %thr_ipending.i = getelementptr inbounds i8, i8* %opaque, i64 152, !dbg !1034\l  %22 = bitcast i8* %thr_ipending.i to i32*, !dbg !1034\l  %23 = load i32, i32* %22, align 8, !dbg !1034\l  %tobool34.i = icmp eq i32 %23, 0, !dbg !1035\l  br i1 %tobool34.i, label %if.else36.i, label %if.end49.i, !dbg !1036, !prof\l... !1037\l|{<s0>T|<s1>F}}"];
	Node0x5588d424c150:s0 -> Node0x5588d42c8760;
	Node0x5588d424c150:s1 -> Node0x5588d42caf30;
	Node0x5588d42c8760 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else36.i:                                      \l  %24 = and i8 %9, 8, !dbg !1038\l  %tobool40.i = icmp eq i8 %24, 0, !dbg !1038\l  br i1 %tobool40.i, label %if.end49.i, label %land.lhs.true41.i, !dbg !1040,\l... !prof !1041\l|{<s0>T|<s1>F}}"];
	Node0x5588d42c8760:s0 -> Node0x5588d42caf30;
	Node0x5588d42c8760:s1 -> Node0x5588d42bf650;
	Node0x5588d42bf650 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true41.i:                                \l  %25 = getelementptr inbounds i8, i8* %opaque, i64 146, !dbg !1042\l  %26 = load i8, i8* %25, align 2, !dbg !1042\l  %27 = and i8 %26, 15, !dbg !1043\l  %tobool44.i = icmp eq i8 %27, 0, !dbg !1043\l  %spec.select.i = zext i1 %tobool44.i to i32, !dbg !1044\l  br label %if.end49.i, !dbg !1044\l}"];
	Node0x5588d42bf650 -> Node0x5588d42caf30;
	Node0x5588d42caf30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end49.i:                                       \l  %tmp_iir.0.i = phi i32 [ 12, %land.lhs.true8.i ], [ 4, %land.lhs.true21.i ],\l... [ 2, %land.lhs.true33.i ], [ %spec.select.i, %land.lhs.true41.i ], [ 4,\l... %lor.lhs.false.i ], [ 1, %if.else36.i ], [ 6, %serial_receive_break.exit ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !1006, metadata\l... !DIExpression()) #16, !dbg !1007\l  %28 = getelementptr inbounds i8, i8* %opaque, i64 142, !dbg !1045\l  %29 = load i8, i8* %28, align 2, !dbg !1045\l  %30 = and i8 %29, -16, !dbg !1046\l  %31 = trunc i32 %tmp_iir.0.i to i8, !dbg !1047\l  %conv53.i = or i8 %30, %31, !dbg !1047\l  store i8 %conv53.i, i8* %28, align 2, !dbg !1048\l  %cmp56.i = icmp ne i32 %tmp_iir.0.i, 1, !dbg !1049\l  %irq.i = getelementptr inbounds i8, i8* %opaque, i64 160, !dbg !1051\l  %32 = bitcast i8* %irq.i to %struct.IRQState**, !dbg !1051\l  %33 = load %struct.IRQState*, %struct.IRQState** %32, align 16, !dbg !1051\l  %. = zext i1 %cmp56.i to i32\l  tail call void @qemu_set_irq(%struct.IRQState* %33, i32 %.) #16, !dbg !1051\l  br label %if.end, !dbg !1052\l}"];
	Node0x5588d42caf30 -> Node0x5588d41384f0;
	Node0x5588d41384f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  ret void, !dbg !1052\l}"];
}
