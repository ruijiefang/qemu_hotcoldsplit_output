digraph "CFG for 'bdrv_root_unref_child' function" {
	label="CFG for 'bdrv_root_unref_child' function";

	Node0x55906e3b1b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %child, metadata\l... !2832, metadata !DIExpression()), !dbg !2835\l  %bs = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %child,\l... i64 0, i32 0, !dbg !2836\l  %0 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs, align\l... 8, !dbg !2836\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %0, metadata\l... !2833, metadata !DIExpression()), !dbg !2835\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %child, metadata\l... !2837, metadata !DIExpression()) #30, !dbg !2840\l  %le_prev.i = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %child, i64 0, i32 12, i32 1, !dbg !2842\l  %1 = load %struct.BdrvChild**, %struct.BdrvChild*** %le_prev.i, align 8,\l... !dbg !2842\l  %cmp.i = icmp eq %struct.BdrvChild** %1, null, !dbg !2842\l  %2 = bitcast %struct.BdrvChild** %1 to i64*, !dbg !2845\l  br i1 %cmp.i, label %bdrv_detach_child.exit, label %if.then.i, !dbg !2845,\l... !prof !2846\l|{<s0>T|<s1>F}}"];
	Node0x55906e3b1b70:s0 -> Node0x55906e7528d0;
	Node0x55906e3b1b70:s1 -> Node0x55906e53edf0;
	Node0x55906e53edf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{if.then.i:                                        \l  %le_next.i = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %child, i64 0, i32 12, i32 0, !dbg !2847\l  %3 = load %struct.BdrvChild*, %struct.BdrvChild** %le_next.i, align 8, !dbg\l... !2847\l  %cmp2.i = icmp eq %struct.BdrvChild* %3, null, !dbg !2847\l  br i1 %cmp2.i, label %if.then.i.if.end.i_crit_edge, label %if.then3.i, !dbg\l... !2850, !prof !2851\l|{<s0>T|<s1>F}}"];
	Node0x55906e53edf0:s0 -> Node0x55906e7a7510;
	Node0x55906e53edf0:s1 -> Node0x55906e6e2aa0;
	Node0x55906e7a7510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{if.then.i.if.end.i_crit_edge:                     \l  %4 = ptrtoint %struct.BdrvChild* %3 to i64, !dbg !2850\l  br label %if.end.i, !dbg !2850\l}"];
	Node0x55906e7a7510 -> Node0x55906e6eaa50;
	Node0x55906e6e2aa0 [shape=record,penwidth=3.0, color="red",label="{if.then3.i:                                       \l  %le_prev9.i = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %3, i64 0, i32 12, i32 1, !dbg !2847\l  store %struct.BdrvChild** %1, %struct.BdrvChild*** %le_prev9.i, align 8,\l... !dbg !2847\l  %.phi.trans.insert = bitcast %struct.BdrvChild** %le_next.i to i64*, !dbg\l... !2852\l  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !2850\l  %.phi.trans.insert3 = bitcast %struct.BdrvChild*** %le_prev.i to i64**, !dbg\l... !2852\l  %.pre4 = load i64*, i64** %.phi.trans.insert3, align 8, !dbg !2850\l  br label %if.end.i, !dbg !2847\l}"];
	Node0x55906e6e2aa0 -> Node0x55906e6eaa50;
	Node0x55906e6eaa50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{if.end.i:                                         \l  %5 = phi i64* [ %.pre4, %if.then3.i ], [ %2, %if.then.i.if.end.i_crit_edge\l... ], !dbg !2850\l  %6 = phi i64 [ %.pre, %if.then3.i ], [ %4, %if.then.i.if.end.i_crit_edge ],\l... !dbg !2850\l  store i64 %6, i64* %5, align 8, !dbg !2850\l  %7 = bitcast %struct.BdrvChild** %le_next.i to i8*, !dbg !2850\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %7,\l... i8 0, i64 16, i1 false), !dbg !2850\l  br label %bdrv_detach_child.exit, !dbg !2850\l}"];
	Node0x55906e6eaa50 -> Node0x55906e7528d0;
	Node0x55906e7528d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{bdrv_detach_child.exit:                           \l  tail call fastcc void @bdrv_replace_child(%struct.BdrvChild* nonnull %child,\l... %struct.BlockDriverState* null) #30, !dbg !2853\l  %name.i = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %child, i64 0, i32 1, !dbg !2854\l  %8 = load i8*, i8** %name.i, align 8, !dbg !2854\l  tail call void @g_free(i8* %8) #30, !dbg !2855\l  %9 = bitcast %struct.BdrvChild* %child to i8*, !dbg !2856\l  tail call void @g_free(i8* %9) #30, !dbg !2857\l  tail call void @bdrv_unref(%struct.BlockDriverState* %0), !dbg !2858\l  ret void, !dbg !2859\l}"];
}
