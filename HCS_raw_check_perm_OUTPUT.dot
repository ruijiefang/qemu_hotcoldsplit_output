digraph "CFG for 'raw_check_perm' function" {
	label="CFG for 'raw_check_perm' function";

	Node0x5558232bb180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %local_err.i = alloca %struct.Error*, align 8\l  %open_flags = alloca i32, align 4\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2857, metadata !DIExpression()), !dbg !2941\l  call void @llvm.dbg.value(metadata i64 %perm, metadata !2858, metadata\l... !DIExpression()), !dbg !2941\l  call void @llvm.dbg.value(metadata i64 %shared, metadata !2859, metadata\l... !DIExpression()), !dbg !2941\l  call void @llvm.dbg.value(metadata %struct.Error** %errp, metadata !2860,\l... metadata !DIExpression()), !dbg !2941\l  %opaque = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 8, !dbg !2942\l  %0 = bitcast i8** %opaque to %struct.BDRVRawState**, !dbg !2942\l  %1 = load %struct.BDRVRawState*, %struct.BDRVRawState** %0, align 8, !dbg\l... !2942\l  call void @llvm.dbg.value(metadata %struct.BDRVRawState* %1, metadata !2861,\l... metadata !DIExpression()), !dbg !2941\l  call void @llvm.dbg.value(metadata %struct.BDRVRawReopenState* null,\l... metadata !2935, metadata !DIExpression()), !dbg !2941\l  %2 = bitcast i32* %open_flags to i8*, !dbg !2943\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !2943\l  %perm_change_fd = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %1, i64 0, i32 9, !dbg !2944\l  %3 = load i32, i32* %perm_change_fd, align 8, !dbg !2944\l  %tobool = icmp eq i32 %3, 0, !dbg !2946\l  br i1 %tobool, label %if.end, label %cleanup, !dbg !2947, !prof !2948\l|{<s0>T|<s1>F}}"];
	Node0x5558232bb180:s0 -> Node0x5558232beea0;
	Node0x5558232bb180:s1 -> Node0x5558232bf5a0;
	Node0x5558232beea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %reopen_state = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %1, i64 0, i32 11, !dbg !2949\l  %4 = load %struct.BDRVReopenState*, %struct.BDRVReopenState** %reopen_state,\l... align 8, !dbg !2949\l  %tobool1 = icmp eq %struct.BDRVReopenState* %4, null, !dbg !2951\l  br i1 %tobool1, label %if.else16, label %if.then2, !dbg !2952, !prof !2948\l|{<s0>T|<s1>F}}"];
	Node0x5558232beea0:s0 -> Node0x5558232bfaa0;
	Node0x5558232beea0:s1 -> Node0x5558232bf9c0;
	Node0x5558232bf9c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then2:                                         \l  %perm4 = getelementptr inbounds %struct.BDRVReopenState,\l... %struct.BDRVReopenState* %4, i64 0, i32 6, !dbg !2953\l  %5 = load i64, i64* %perm4, align 8, !dbg !2953\l  %cmp = icmp eq i64 %5, %perm, !dbg !2953\l  br i1 %cmp, label %if.end6, label %if.else, !dbg !2957\l|{<s0>T|<s1>F}}"];
	Node0x5558232bf9c0:s0 -> Node0x5558232c0070;
	Node0x5558232bf9c0:s1 -> Node0x5558232c00e0;
	Node0x5558232c00e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([30 x i8], [30 x\l... i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x\l... i8]* @.str.3, i64 0, i64 0), i32 2966, i8* getelementptr inbounds ([69 x i8],\l... [69 x i8]* @__PRETTY_FUNCTION__.raw_check_perm, i64 0, i64 0)) #20, !dbg !2953\l  unreachable, !dbg !2953\l}"];
	Node0x5558232c0070 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end6:                                          \l  %shared_perm = getelementptr inbounds %struct.BDRVReopenState,\l... %struct.BDRVReopenState* %4, i64 0, i32 7, !dbg !2958\l  %6 = load i64, i64* %shared_perm, align 8, !dbg !2958\l  %cmp8 = icmp eq i64 %6, %shared, !dbg !2958\l  br i1 %cmp8, label %if.end11, label %if.else10, !dbg !2961\l|{<s0>T|<s1>F}}"];
	Node0x5558232c0070:s0 -> Node0x5558232c0ec0;
	Node0x5558232c0070:s1 -> Node0x5558232c0f30;
	Node0x5558232c0f30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else10:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x\l... i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x\l... i8]* @.str.3, i64 0, i64 0), i32 2967, i8* getelementptr inbounds ([69 x i8],\l... [69 x i8]* @__PRETTY_FUNCTION__.raw_check_perm, i64 0, i64 0)) #20, !dbg !2958\l  unreachable, !dbg !2958\l}"];
	Node0x5558232c0ec0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end11:                                         \l  %opaque13 = getelementptr inbounds %struct.BDRVReopenState,\l... %struct.BDRVReopenState* %4, i64 0, i32 10, !dbg !2962\l  %7 = bitcast i8** %opaque13 to %struct.BDRVRawReopenState**, !dbg !2962\l  %8 = load %struct.BDRVRawReopenState*, %struct.BDRVRawReopenState** %7,\l... align 8, !dbg !2962\l  call void @llvm.dbg.value(metadata %struct.BDRVRawReopenState* %8, metadata\l... !2935, metadata !DIExpression()), !dbg !2941\l  %fd = getelementptr inbounds %struct.BDRVRawReopenState,\l... %struct.BDRVRawReopenState* %8, i64 0, i32 0, !dbg !2963\l  %9 = load i32, i32* %fd, align 4, !dbg !2963\l  store i32 %9, i32* %perm_change_fd, align 8, !dbg !2964\l  %open_flags15 = getelementptr inbounds %struct.BDRVRawReopenState,\l... %struct.BDRVRawReopenState* %8, i64 0, i32 1, !dbg !2965\l  br label %if.end28.sink.split, !dbg !2966\l}"];
	Node0x5558232c0ec0 -> Node0x55582308c970;
	Node0x5558232bfaa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else16:                                        \l  %open_flags17 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 0, !dbg !2967\l  %10 = load i32, i32* %open_flags17, align 8, !dbg !2967\l  call void @llvm.dbg.value(metadata i32* %open_flags, metadata !2936,\l... metadata !DIExpression(DW_OP_deref)), !dbg !2941\l  %call = call fastcc i32 @raw_reconfigure_getfd(%struct.BlockDriverState*\l... nonnull %bs, i32 %10, i32* nonnull %open_flags, i64 %perm, i1 zeroext false,\l... %struct.Error** %errp), !dbg !2969\l  call void @llvm.dbg.value(metadata i32 %call, metadata !2937, metadata\l... !DIExpression()), !dbg !2941\l  %cmp18 = icmp slt i32 %call, 0, !dbg !2970\l  br i1 %cmp18, label %cleanup, label %if.else20, !dbg !2972, !prof !2973\l|{<s0>T|<s1>F}}"];
	Node0x5558232bfaa0:s0 -> Node0x5558232bf5a0;
	Node0x5558232bfaa0:s1 -> Node0x5558232c30f0;
	Node0x5558232c30f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else20:                                        \l  %fd21 = getelementptr inbounds %struct.BDRVRawState, %struct.BDRVRawState*\l... %1, i64 0, i32 0, !dbg !2974\l  %11 = load i32, i32* %fd21, align 8, !dbg !2974\l  %cmp22 = icmp eq i32 %call, %11, !dbg !2976\l  br i1 %cmp22, label %if.end28, label %if.then23, !dbg !2977, !prof !2978\l|{<s0>T|<s1>F}}"];
	Node0x5558232c30f0:s0 -> Node0x5558232bfa30;
	Node0x5558232c30f0:s1 -> Node0x5558232c3810;
	Node0x5558232c3810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.then23:                                        \l  store i32 %call, i32* %perm_change_fd, align 8, !dbg !2979\l  call void @llvm.dbg.value(metadata i32 undef, metadata !2936, metadata\l... !DIExpression()), !dbg !2941\l  br label %if.end28.sink.split, !dbg !2981\l}"];
	Node0x5558232c3810 -> Node0x55582308c970;
	Node0x55582308c970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.end28.sink.split:                              \l  %.sink.in = phi i32* [ %open_flags, %if.then23 ], [ %open_flags15, %if.end11\l... ]\l  %.sink = load i32, i32* %.sink.in, align 4, !dbg !2982\l  %perm_change_flags25 = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %1, i64 0, i32 10, !dbg !2982\l  store i32 %.sink, i32* %perm_change_flags25, align 4, !dbg !2982\l  br label %if.end28, !dbg !2983\l}"];
	Node0x55582308c970 -> Node0x5558232bfa30;
	Node0x5558232bfa30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end28:                                         \l  %call29 = tail call fastcc i32\l... @raw_handle_perm_lock(%struct.BlockDriverState* nonnull %bs, i32 0, i64\l... %perm, i64 %shared, %struct.Error** %errp), !dbg !2983\l  call void @llvm.dbg.value(metadata i32 %call29, metadata !2937, metadata\l... !DIExpression()), !dbg !2941\l  %cmp30 = icmp slt i32 %call29, 0, !dbg !2984\l  br i1 %cmp30, label %fail, label %if.end32, !dbg !2986, !prof !2973\l|{<s0>T|<s1>F}}"];
	Node0x5558232bfa30:s0 -> Node0x5558232c5000;
	Node0x5558232bfa30:s1 -> Node0x5558232c5320;
	Node0x5558232c5320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end32:                                         \l  %12 = load i32, i32* %perm_change_fd, align 8, !dbg !2987\l  %tobool34 = icmp eq i32 %12, 0, !dbg !2989\l  br i1 %tobool34, label %cleanup, label %if.then35, !dbg !2990, !prof !2978\l|{<s0>T|<s1>F}}"];
	Node0x5558232c5320:s0 -> Node0x5558232bf5a0;
	Node0x5558232c5320:s1 -> Node0x5558232c4d00;
	Node0x5558232c4d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{if.then35:                                        \l  %neg = xor i64 %shared, -1, !dbg !2991\l  %call37 = tail call fastcc i32 @raw_apply_lock_bytes(%struct.BDRVRawState*\l... null, i32 %12, i64 %perm, i64 %neg, i1 zeroext false, %struct.Error** %errp),\l... !dbg !2993\l  call void @llvm.dbg.value(metadata i32 %call37, metadata !2937, metadata\l... !DIExpression()), !dbg !2941\l  %cmp38 = icmp slt i32 %call37, 0, !dbg !2994\l  br i1 %cmp38, label %if.then39, label %cleanup, !dbg !2996, !prof !2997\l|{<s0>T|<s1>F}}"];
	Node0x5558232c4d00:s0 -> Node0x5558232c6a60;
	Node0x5558232c4d00:s1 -> Node0x5558232bf5a0;
	Node0x5558232c6a60 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then39:                                        \l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2998, metadata !DIExpression()) #19, !dbg !3011\l  call void @llvm.dbg.value(metadata i32 2, metadata !3004, metadata\l... !DIExpression()) #19, !dbg !3011\l  call void @llvm.dbg.value(metadata i64 0, metadata !3005, metadata\l... !DIExpression()) #19, !dbg !3011\l  call void @llvm.dbg.value(metadata i64 0, metadata !3006, metadata\l... !DIExpression()) #19, !dbg !3011\l  call void @llvm.dbg.value(metadata %struct.Error** null, metadata !3007,\l... metadata !DIExpression()) #19, !dbg !3011\l  %13 = load %struct.BDRVRawState*, %struct.BDRVRawState** %0, align 8, !dbg\l... !3014\l  call void @llvm.dbg.value(metadata %struct.BDRVRawState* %13, metadata\l... !3008, metadata !DIExpression()) #19, !dbg !3011\l  call void @llvm.dbg.value(metadata i32 0, metadata !3009, metadata\l... !DIExpression()) #19, !dbg !3011\l  %14 = bitcast %struct.Error** %local_err.i to i8*, !dbg !3015\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #19, !dbg !3015\l  call void @llvm.dbg.value(metadata %struct.Error* null, metadata !3010,\l... metadata !DIExpression()) #19, !dbg !3011\l  store %struct.Error* null, %struct.Error** %local_err.i, align 8, !dbg !3016\l  %use_lock.i = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %13, i64 0, i32 1, !dbg !3017\l  %15 = load i8, i8* %use_lock.i, align 4, !dbg !3017, !range !3019\l  %tobool.i = icmp eq i8 %15, 0, !dbg !3017\l  br i1 %tobool.i, label %raw_handle_perm_lock.exit, label %if.end.i, !dbg\l... !3020, !prof !3021\l|{<s0>T|<s1>F}}"];
	Node0x5558232c6a60:s0 -> Node0x5558232315d0;
	Node0x5558232c6a60:s1 -> Node0x55582308c1f0;
	Node0x55582308c1f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end.i:                                         \l  %call.i = tail call i32 @bdrv_get_flags(%struct.BlockDriverState* nonnull\l... %bs) #19, !dbg !3022\l  %and.i = and i32 %call.i, 2048, !dbg !3024\l  %tobool1.i = icmp eq i32 %and.i, 0, !dbg !3024\l  br i1 %tobool1.i, label %if.end3.i, label %raw_handle_perm_lock.exit, !dbg\l... !3025, !prof !3026\l|{<s0>T|<s1>F}}"];
	Node0x55582308c1f0:s0 -> Node0x55582317b400;
	Node0x55582308c1f0:s1 -> Node0x5558232315d0;
	Node0x55582317b400 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end3.i:                                        \l  call void @llvm.dbg.value(metadata i32 0, metadata !3009, metadata\l... !DIExpression()) #19, !dbg !3011\l  %fd25.i = getelementptr inbounds %struct.BDRVRawState, %struct.BDRVRawState*\l... %13, i64 0, i32 0, !dbg !3027\l  %16 = load i32, i32* %fd25.i, align 8, !dbg !3027\l  %perm26.i = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %13, i64 0, i32 5, !dbg !3029\l  %17 = load i64, i64* %perm26.i, align 8, !dbg !3029\l  %shared_perm27.i = getelementptr inbounds %struct.BDRVRawState,\l... %struct.BDRVRawState* %13, i64 0, i32 6, !dbg !3030\l  %18 = load i64, i64* %shared_perm27.i, align 8, !dbg !3030\l  %neg28.i = xor i64 %18, -1, !dbg !3031\l  call void @llvm.dbg.value(metadata %struct.Error** %local_err.i, metadata\l... !3010, metadata !DIExpression(DW_OP_deref)) #19, !dbg !3011\l  %call29.i = call fastcc i32 @raw_apply_lock_bytes(%struct.BDRVRawState* %13,\l... i32 %16, i64 %17, i64 %neg28.i, i1 zeroext true, %struct.Error** nonnull\l... %local_err.i) #19, !dbg !3032\l  %19 = load %struct.Error*, %struct.Error** %local_err.i, align 8, !dbg !3033\l  call void @llvm.dbg.value(metadata %struct.Error* %19, metadata !3010,\l... metadata !DIExpression()) #19, !dbg !3011\l  %tobool30.i = icmp eq %struct.Error* %19, null, !dbg !3033\l  br i1 %tobool30.i, label %raw_handle_perm_lock.exit, label %if.then31.i,\l... !dbg !3035\l|{<s0>T|<s1>F}}"];
	Node0x55582317b400:s0 -> Node0x5558232315d0;
	Node0x55582317b400:s1 -> Node0x5558231a41a0;
	Node0x5558231a41a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then31.i:                                      \l  call void @warn_report_err(%struct.Error* nonnull %19) #19, !dbg !3036\l  br label %raw_handle_perm_lock.exit, !dbg !3038\l}"];
	Node0x5558231a41a0 -> Node0x5558232315d0;
	Node0x5558232315d0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{raw_handle_perm_lock.exit:                        \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #19, !dbg !3039\l  br label %fail, !dbg !3040\l}"];
	Node0x5558232315d0 -> Node0x5558232c5000;
	Node0x5558232c5000 [shape=record,penwidth=3.0, color="red",label="{fail:                                             \l  %ret.0 = phi i32 [ %call29, %if.end28 ], [ %call37,\l... %raw_handle_perm_lock.exit ], !dbg !2941\l  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !2937, metadata\l... !DIExpression()), !dbg !2941\l  call void @llvm.dbg.label(metadata !2938), !dbg !3041\l  %20 = load i32, i32* %perm_change_fd, align 8, !dbg !3042\l  %tobool44 = icmp eq i32 %20, 0, !dbg !3044\l  br i1 %tobool44, label %if.end50, label %land.lhs.true, !dbg !3045\l|{<s0>T|<s1>F}}"];
	Node0x5558232c5000:s0 -> Node0x5558232c7930;
	Node0x5558232c5000:s1 -> Node0x5558232c7980;
	Node0x5558232c7980 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true:                                    \l  %21 = load %struct.BDRVReopenState*, %struct.BDRVReopenState**\l... %reopen_state, align 8, !dbg !3046\l  %tobool46 = icmp eq %struct.BDRVReopenState* %21, null, !dbg !3047\l  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !3048\l|{<s0>T|<s1>F}}"];
	Node0x5558232c7980:s0 -> Node0x5558232c7280;
	Node0x5558232c7980:s1 -> Node0x5558232c7930;
	Node0x5558232c7280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{if.then47:                                        \l  %call49 = call i32 @qemu_close(i32 %20) #19, !dbg !3049\l  br label %if.end50, !dbg !3051\l}"];
	Node0x5558232c7280 -> Node0x5558232c7930;
	Node0x5558232c7930 [shape=record,penwidth=3.0, color="red",label="{if.end50:                                         \l  store i32 0, i32* %perm_change_fd, align 8, !dbg !3052\l  br label %cleanup, !dbg !3053\l}"];
	Node0x5558232c7930 -> Node0x5558232bf5a0;
	Node0x5558232bf5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  %retval.0 = phi i32 [ %ret.0, %if.end50 ], [ 0, %entry ], [ %call,\l... %if.else16 ], [ 0, %if.end32 ], [ 0, %if.then35 ], !dbg !2941\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !3054\l  ret i32 %retval.0, !dbg !3054\l}"];
}
