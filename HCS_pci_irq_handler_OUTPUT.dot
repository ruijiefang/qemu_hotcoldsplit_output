digraph "CFG for 'pci_irq_handler' function" {
	label="CFG for 'pci_irq_handler' function";

	Node0x55ff9e4c3b50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1610, metadata\l... !DIExpression()), !dbg !1617\l  call void @llvm.dbg.value(metadata i32 %irq_num, metadata !1611, metadata\l... !DIExpression()), !dbg !1617\l  call void @llvm.dbg.value(metadata i32 %level, metadata !1612, metadata\l... !DIExpression()), !dbg !1617\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1613, metadata\l... !DIExpression()), !dbg !1617\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1618, metadata\l... !DIExpression()), !dbg !1622\l  call void @llvm.dbg.value(metadata i32 %irq_num, metadata !1621, metadata\l... !DIExpression()), !dbg !1622\l  %0 = getelementptr inbounds i8, i8* %opaque, i64 1161, !dbg !1624\l  %1 = load i8, i8* %0, align 1, !dbg !1624\l  %conv.i = zext i8 %1 to i32, !dbg !1625\l  %shr.i = lshr i32 %conv.i, %irq_num, !dbg !1626\l  %and.i = and i32 %shr.i, 1, !dbg !1627\l  %sub = sub i32 %level, %and.i, !dbg !1628\l  call void @llvm.dbg.value(metadata i32 %sub, metadata !1614, metadata\l... !DIExpression()), !dbg !1617\l  %tobool = icmp eq i32 %sub, 0, !dbg !1629\l  br i1 %tobool, label %cleanup, label %if.end, !dbg !1631, !prof !1632\l|{<s0>T|<s1>F}}"];
	Node0x55ff9e4c3b50:s0 -> Node0x55ff9ef848a0;
	Node0x55ff9e4c3b50:s1 -> Node0x55ff9ef84300;
	Node0x55ff9ef84300 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end:                                           \l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1613, metadata\l... !DIExpression()), !dbg !1617\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1618, metadata\l... !DIExpression()), !dbg !1622\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1633, metadata\l... !DIExpression()), !dbg !1640\l  call void @llvm.dbg.value(metadata i32 %irq_num, metadata !1638, metadata\l... !DIExpression()), !dbg !1640\l  call void @llvm.dbg.value(metadata i32 %level, metadata !1639, metadata\l... !DIExpression()), !dbg !1640\l  %shl.i = shl nuw i32 1, %irq_num, !dbg !1642\l  %2 = trunc i32 %shl.i to i8, !dbg !1643\l  %3 = xor i8 %2, -1, !dbg !1643\l  %conv1.i = and i8 %1, %3, !dbg !1643\l  %shl2.i = shl i32 %level, %irq_num, !dbg !1644\l  %4 = trunc i32 %shl2.i to i8, !dbg !1645\l  %conv5.i = or i8 %conv1.i, %4, !dbg !1645\l  store i8 %conv5.i, i8* %0, align 1, !dbg !1645\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1646, metadata\l... !DIExpression()), !dbg !1649\l  %tobool.i = icmp eq i8 %conv5.i, 0, !dbg !1651\l  %config.i19 = getelementptr inbounds i8, i8* %opaque, i64 144, !dbg !1653\l  %5 = bitcast i8* %config.i19 to i8**, !dbg !1653\l  %6 = load i8*, i8** %5, align 16, !dbg !1653\l  %arrayidx.i = getelementptr i8, i8* %6, i64 6, !dbg !1653\l  %7 = load i8, i8* %arrayidx.i, align 1, !dbg !1653\l  %and.i20 = and i8 %7, -9, !dbg !1654\l  %masksel.i = select i1 %tobool.i, i8 0, i8 8, !dbg !1654\l  %storemerge.i = or i8 %and.i20, %masksel.i, !dbg !1654\l  store i8 %storemerge.i, i8* %arrayidx.i, align 1, !dbg !1653\l  call void @llvm.dbg.value(metadata i8* %opaque, metadata !1655, metadata\l... !DIExpression()), !dbg !1660\l  %8 = load i8*, i8** %5, align 16, !dbg !1663\l  %add.ptr.i = getelementptr i8, i8* %8, i64 4, !dbg !1664\l  call void @llvm.dbg.value(metadata i8* %add.ptr.i, metadata !1665, metadata\l... !DIExpression()), !dbg !1672\l  call void @llvm.dbg.value(metadata i8* %add.ptr.i, metadata !1674, metadata\l... !DIExpression()), !dbg !1682\l  call void @llvm.dbg.value(metadata i8* %add.ptr.i, metadata !1684, metadata\l... !DIExpression()), !dbg !1688\l  %r.0..sroa_cast1.i.i.i.i = bitcast i8* %add.ptr.i to i16*, !dbg !1690\l  %r.0.copyload.i.i.i.i = load i16, i16* %r.0..sroa_cast1.i.i.i.i, align 1,\l... !dbg !1690\l  call void @llvm.dbg.value(metadata i16 %r.0.copyload.i.i.i.i, metadata\l... !1687, metadata !DIExpression()), !dbg !1688\l  %9 = and i16 %r.0.copyload.i.i.i.i, 1024, !dbg !1691\l  %tobool2 = icmp eq i16 %9, 0, !dbg !1692\l  br i1 %tobool2, label %for.cond.i.preheader, label %cleanup, !dbg !1693\l|{<s0>T|<s1>F}}"];
	Node0x55ff9ef84300:s0 -> Node0x55ff9f1d30c0;
	Node0x55ff9ef84300:s1 -> Node0x55ff9ef848a0;
	Node0x55ff9f1d30c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.cond.i.preheader:                             \l  %10 = bitcast i8* %opaque to %struct.PCIDevice*, !dbg !1694\l  call void @llvm.dbg.value(metadata %struct.PCIDevice* %10, metadata !1613,\l... metadata !DIExpression()), !dbg !1617\l  call void @llvm.dbg.value(metadata %struct.PCIDevice* %10, metadata !1618,\l... metadata !DIExpression()), !dbg !1622\l  call void @llvm.dbg.value(metadata %struct.PCIDevice* %10, metadata !1633,\l... metadata !DIExpression()), !dbg !1640\l  call void @llvm.dbg.value(metadata %struct.PCIDevice* %10, metadata !1655,\l... metadata !DIExpression()), !dbg !1660\l  call void @llvm.dbg.value(metadata %struct.PCIDevice* %10, metadata !1646,\l... metadata !DIExpression()), !dbg !1649\l  br label %for.cond.i, !dbg !1695\l}"];
	Node0x55ff9f1d30c0 -> Node0x55ff9f09e6a0;
	Node0x55ff9f09e6a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.cond.i:                                       \l  %irq_num.addr.0.i = phi i32 [ %call1.i, %if.end.i ], [ %irq_num,\l... %for.cond.i.preheader ]\l  %pci_dev.addr.0.i = phi %struct.PCIDevice* [ %19, %if.end.i ], [ %10,\l... %for.cond.i.preheader ]\l  call void @llvm.dbg.value(metadata %struct.PCIDevice* %pci_dev.addr.0.i,\l... metadata !1699, metadata !DIExpression()) #19, !dbg !1704\l  call void @llvm.dbg.value(metadata i32 %irq_num.addr.0.i, metadata !1700,\l... metadata !DIExpression()) #19, !dbg !1704\l  call void @llvm.dbg.value(metadata %struct.PCIDevice* %pci_dev.addr.0.i,\l... metadata !1705, metadata !DIExpression()) #19, !dbg !1712\l  %11 = getelementptr %struct.PCIDevice, %struct.PCIDevice* %pci_dev.addr.0.i,\l... i64 0, i32 0, i32 0, !dbg !1716\l  %call.i.i = tail call %struct.Object*\l... @object_dynamic_cast_assert(%struct.Object* %11, i8* getelementptr inbounds\l... ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([65\l... x i8], [65 x i8]* @.str.45, i64 0, i64 0), i32 449, i8* getelementptr\l... inbounds ([12 x i8], [12 x i8]* @__func__.pci_get_bus, i64 0, i64 0)) #19,\l... !dbg !1716\l  %12 = bitcast %struct.Object* %call.i.i to %struct.DeviceState*, !dbg !1716\l  %call1.i.i = tail call %struct.BusState*\l... @qdev_get_parent_bus(%struct.DeviceState* %12) #19, !dbg !1716\l  %13 = getelementptr %struct.BusState, %struct.BusState* %call1.i.i, i64 0,\l... i32 0, !dbg !1716\l  %call2.i.i = tail call %struct.Object*\l... @object_dynamic_cast_assert(%struct.Object* %13, i8* getelementptr inbounds\l... ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([65\l... x i8], [65 x i8]* @.str.45, i64 0, i64 0), i32 449, i8* getelementptr\l... inbounds ([12 x i8], [12 x i8]* @__func__.pci_get_bus, i64 0, i64 0)) #19,\l... !dbg !1716\l  call void @llvm.dbg.value(metadata %struct.Object* %call2.i.i, metadata\l... !1702, metadata !DIExpression()) #19, !dbg !1704\l  %map_irq.i = getelementptr inbounds %struct.Object, %struct.Object*\l... %call2.i.i, i64 4, !dbg !1717\l  %14 = bitcast %struct.Object* %map_irq.i to i32 (%struct.PCIDevice*, i32)**,\l... !dbg !1717\l  %15 = load i32 (%struct.PCIDevice*, i32)*, i32 (%struct.PCIDevice*, i32)**\l... %14, align 8, !dbg !1717\l  %call1.i = tail call i32 %15(%struct.PCIDevice* %pci_dev.addr.0.i, i32\l... %irq_num.addr.0.i) #19, !dbg !1718, !prof !1719\l  call void @llvm.dbg.value(metadata i32 %call1.i, metadata !1700, metadata\l... !DIExpression()) #19, !dbg !1704\l  %set_irq.i = getelementptr inbounds %struct.Object, %struct.Object*\l... %call2.i.i, i64 3, i32 4, !dbg !1720\l  %16 = bitcast %struct.Object** %set_irq.i to void (i8*, i32, i32)**, !dbg\l... !1720\l  %17 = load void (i8*, i32, i32)*, void (i8*, i32, i32)** %16, align 8, !dbg\l... !1720\l  %tobool.i21 = icmp eq void (i8*, i32, i32)* %17, null, !dbg !1722\l  br i1 %tobool.i21, label %if.end.i, label %pci_change_irq_level.exit, !dbg\l... !1723, !prof !1724\l|{<s0>T|<s1>F}}"];
	Node0x55ff9f09e6a0:s0 -> Node0x55ff9f0e9ba0;
	Node0x55ff9f09e6a0:s1 -> Node0x55ff9f1f1c30;
	Node0x55ff9f0e9ba0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end.i:                                         \l  call void @llvm.dbg.value(metadata %struct.Object* %call2.i.i, metadata\l... !1702, metadata !DIExpression()) #19, !dbg !1704\l  %parent_dev.i = getelementptr inbounds %struct.Object, %struct.Object*\l... %call2.i.i, i64 55, i32 4, !dbg !1725\l  %18 = bitcast %struct.Object** %parent_dev.i to %struct.PCIDevice**, !dbg\l... !1725\l  %19 = load %struct.PCIDevice*, %struct.PCIDevice** %18, align 8, !dbg !1725\l  call void @llvm.dbg.value(metadata %struct.PCIDevice* %19, metadata !1699,\l... metadata !DIExpression()) #19, !dbg !1704\l  br label %for.cond.i, !dbg !1726, !llvm.loop !1727\l}"];
	Node0x55ff9f0e9ba0 -> Node0x55ff9f09e6a0;
	Node0x55ff9f1f1c30 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{pci_change_irq_level.exit:                        \l  %call2.i.i.lcssa = phi %struct.Object* [ %call2.i.i, %for.cond.i ], !dbg\l... !1716\l  %call1.i.lcssa = phi i32 [ %call1.i, %for.cond.i ], !dbg !1718\l  %set_irq.i.lcssa = phi %struct.Object** [ %set_irq.i, %for.cond.i ], !dbg\l... !1720\l  %20 = bitcast %struct.Object** %set_irq.i.lcssa to void (i8*, i32, i32)**,\l... !dbg !1720\l  %irq_count.i = getelementptr inbounds %struct.Object, %struct.Object*\l... %call2.i.i.lcssa, i64 57, i32 1, !dbg !1729\l  %21 = bitcast void (i8*)** %irq_count.i to i32**, !dbg !1729\l  %22 = load i32*, i32** %21, align 8, !dbg !1729\l  %idxprom.i = sext i32 %call1.i.lcssa to i64, !dbg !1730\l  %arrayidx.i22 = getelementptr i32, i32* %22, i64 %idxprom.i, !dbg !1730\l  %23 = load i32, i32* %arrayidx.i22, align 4, !dbg !1731\l  %add.i = add i32 %23, %sub, !dbg !1731\l  store i32 %add.i, i32* %arrayidx.i22, align 4, !dbg !1731\l  %24 = load void (i8*, i32, i32)*, void (i8*, i32, i32)** %20, align 8, !dbg\l... !1732\l  %irq_opaque.i = getelementptr inbounds %struct.Object, %struct.Object*\l... %call2.i.i.lcssa, i64 4, i32 2, !dbg !1733\l  %25 = bitcast %struct._GHashTable** %irq_opaque.i to i8**, !dbg !1733\l  %26 = load i8*, i8** %25, align 8, !dbg !1733\l  %27 = load i32*, i32** %21, align 8, !dbg !1734\l  %arrayidx5.i = getelementptr i32, i32* %27, i64 %idxprom.i, !dbg !1735\l  %28 = load i32, i32* %arrayidx5.i, align 4, !dbg !1735\l  %cmp.i = icmp ne i32 %28, 0, !dbg !1736\l  %conv.i23 = zext i1 %cmp.i to i32, !dbg !1736\l  tail call void %24(i8* %26, i32 %call1.i.lcssa, i32 %conv.i23) #19, !dbg\l... !1737, !prof !1738\l  br label %cleanup, !dbg !1739\l}"];
	Node0x55ff9f1f1c30 -> Node0x55ff9ef848a0;
	Node0x55ff9ef848a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  ret void, !dbg !1739\l}"];
}
