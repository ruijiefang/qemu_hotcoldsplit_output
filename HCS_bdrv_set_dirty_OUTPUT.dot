digraph "CFG for 'bdrv_set_dirty' function" {
	label="CFG for 'bdrv_set_dirty' function";

	Node0x5601c2332090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2588, metadata !DIExpression()), !dbg !2593\l  call void @llvm.dbg.value(metadata i64 %offset, metadata !2589, metadata\l... !DIExpression()), !dbg !2593\l  call void @llvm.dbg.value(metadata i64 %bytes, metadata !2590, metadata\l... !DIExpression()), !dbg !2593\l  %lh_first = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 42, i32 0, !dbg !2594\l  %0 = load %struct.BdrvDirtyBitmap*, %struct.BdrvDirtyBitmap** %lh_first,\l... align 8, !dbg !2594\l  %cmp = icmp eq %struct.BdrvDirtyBitmap* %0, null, !dbg !2594\l  br i1 %cmp, label %cleanup, label %if.end, !dbg !2596, !prof !2597\l|{<s0>T|<s1>F}}"];
	Node0x5601c2332090:s0 -> Node0x5601c2334570;
	Node0x5601c2332090:s1 -> Node0x5601c2333d60;
	Node0x5601c2333d60 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end:                                           \l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2598, metadata !DIExpression()) #16, !dbg !2608\l  %1 = load atomic i64, i64* bitcast (void (%struct.QemuMutex*, i8*, i32)**\l... @qemu_mutex_lock_func to i64*) monotonic, align 8, !dbg !2610\l  %2 = inttoptr i64 %1 to void (%struct.QemuMutex*, i8*, i32)*, !dbg !2610\l  call void @llvm.dbg.value(metadata void (%struct.QemuMutex*, i8*, i32)* %2,\l... metadata !2601, metadata !DIExpression()) #16, !dbg !2612\l  %dirty_bitmap_mutex.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 41, !dbg !2613\l  tail call void %2(%struct.QemuMutex* nonnull %dirty_bitmap_mutex.i, i8*\l... getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 64)\l... #16, !dbg !2613\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* undef, metadata\l... !2591, metadata !DIExpression()), !dbg !2593\l  %bitmap.019 = load %struct.BdrvDirtyBitmap*, %struct.BdrvDirtyBitmap**\l... %lh_first, align 8, !dbg !2614\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %bitmap.019,\l... metadata !2591, metadata !DIExpression()), !dbg !2593\l  %tobool20 = icmp eq %struct.BdrvDirtyBitmap* %bitmap.019, null, !dbg !2616\l  br i1 %tobool20, label %for.end, label %for.body.preheader, !dbg !2616\l|{<s0>T|<s1>F}}"];
	Node0x5601c2333d60:s0 -> Node0x5601c2334860;
	Node0x5601c2333d60:s1 -> Node0x5601c22aace0;
	Node0x5601c22aace0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.body.preheader:                               \l  br label %for.body, !dbg !2616\l}"];
	Node0x5601c22aace0 -> Node0x5601c2334ef0;
	Node0x5601c2334ef0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.body:                                         \l  %bitmap.021 = phi %struct.BdrvDirtyBitmap* [ %bitmap.0, %for.inc ], [\l... %bitmap.019, %for.body.preheader ]\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %bitmap.021,\l... metadata !2617, metadata !DIExpression()), !dbg !2622\l  %disabled.i = getelementptr inbounds %struct.BdrvDirtyBitmap,\l... %struct.BdrvDirtyBitmap* %bitmap.021, i64 0, i32 6, !dbg !2627\l  %3 = load i8, i8* %disabled.i, align 8, !dbg !2627, !range !2628\l  %tobool.i = icmp eq i8 %3, 0, !dbg !2627\l  br i1 %tobool.i, label %if.end4, label %for.inc, !dbg !2629\l|{<s0>T|<s1>F}}"];
	Node0x5601c2334ef0:s0 -> Node0x5601c23352f0;
	Node0x5601c2334ef0:s1 -> Node0x5601c2334e40;
	Node0x5601c23352f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end4:                                          \l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %bitmap.021,\l... metadata !2630, metadata !DIExpression()), !dbg !2637\l  %readonly.i = getelementptr inbounds %struct.BdrvDirtyBitmap,\l... %struct.BdrvDirtyBitmap* %bitmap.021, i64 0, i32 8, !dbg !2641\l  %4 = load i8, i8* %readonly.i, align 8, !dbg !2641, !range !2628\l  %tobool.i18 = icmp eq i8 %4, 0, !dbg !2641\l  br i1 %tobool.i18, label %if.end7, label %if.else, !dbg !2642\l|{<s0>T|<s1>F}}"];
	Node0x5601c23352f0:s0 -> Node0x5601c23358d0;
	Node0x5601c23352f0:s1 -> Node0x5601c2335940;
	Node0x5601c2335940 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x\l... i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x\l... i8]* @.str.1, i64 0, i64 0), i32 777, i8* getelementptr inbounds ([58 x i8],\l... [58 x i8]* @__PRETTY_FUNCTION__.bdrv_set_dirty, i64 0, i64 0)) #17, !dbg !2643\l  unreachable, !dbg !2643\l}"];
	Node0x5601c23358d0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end7:                                          \l  %bitmap8 = getelementptr inbounds %struct.BdrvDirtyBitmap,\l... %struct.BdrvDirtyBitmap* %bitmap.021, i64 0, i32 1, !dbg !2644\l  %5 = load %struct.HBitmap*, %struct.HBitmap** %bitmap8, align 8, !dbg !2644\l  tail call void @hbitmap_set(%struct.HBitmap* %5, i64 %offset, i64 %bytes)\l... #16, !dbg !2645\l  br label %for.inc, !dbg !2646\l}"];
	Node0x5601c23358d0 -> Node0x5601c2334e40;
	Node0x5601c2334e40 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.inc:                                          \l  %le_next = getelementptr inbounds %struct.BdrvDirtyBitmap,\l... %struct.BdrvDirtyBitmap* %bitmap.021, i64 0, i32 12, i32 0, !dbg !2647\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* undef, metadata\l... !2591, metadata !DIExpression()), !dbg !2593\l  %bitmap.0 = load %struct.BdrvDirtyBitmap*, %struct.BdrvDirtyBitmap**\l... %le_next, align 8, !dbg !2614\l  call void @llvm.dbg.value(metadata %struct.BdrvDirtyBitmap* %bitmap.0,\l... metadata !2591, metadata !DIExpression()), !dbg !2593\l  %tobool = icmp eq %struct.BdrvDirtyBitmap* %bitmap.0, null, !dbg !2616\l  br i1 %tobool, label %for.end.loopexit, label %for.body, !dbg !2616,\l... !llvm.loop !2648\l|{<s0>T|<s1>F}}"];
	Node0x5601c2334e40:s0 -> Node0x5601c237a3c0;
	Node0x5601c2334e40:s1 -> Node0x5601c2334ef0;
	Node0x5601c237a3c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.end.loopexit:                                 \l  br label %for.end, !dbg !2650\l}"];
	Node0x5601c237a3c0 -> Node0x5601c2334860;
	Node0x5601c2334860 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.end:                                          \l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2653, metadata !DIExpression()) #16, !dbg !2655\l  tail call void @qemu_mutex_unlock_impl(%struct.QemuMutex* nonnull\l... %dirty_bitmap_mutex.i, i8* getelementptr inbounds ([21 x i8], [21 x i8]*\l... @.str.1, i64 0, i64 0), i32 69) #16, !dbg !2650\l  br label %cleanup, !dbg !2656\l}"];
	Node0x5601c2334860 -> Node0x5601c2334570;
	Node0x5601c2334570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  ret void, !dbg !2656\l}"];
}
