digraph "CFG for 'qcow2_pre_write_overlap_check' function" {
	label="CFG for 'qcow2_pre_write_overlap_check' function";

	Node0x55f1d05284b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2605, metadata !DIExpression()), !dbg !2616\l  call void @llvm.dbg.value(metadata i32 %ign, metadata !2606, metadata\l... !DIExpression()), !dbg !2616\l  call void @llvm.dbg.value(metadata i64 %offset, metadata !2607, metadata\l... !DIExpression()), !dbg !2616\l  call void @llvm.dbg.value(metadata i64 %size, metadata !2608, metadata\l... !DIExpression()), !dbg !2616\l  call void @llvm.dbg.value(metadata i1 %data_file, metadata !2609, metadata\l... !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8,\l... DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2616\l  br i1 %data_file, label %land.lhs.true, label %if.end, !dbg !2617, !prof\l... !2619\l|{<s0>T|<s1>F}}"];
	Node0x55f1d05284b0:s0 -> Node0x55f1d05fbd60;
	Node0x55f1d05284b0:s1 -> Node0x55f1d05fbd10;
	Node0x55f1d05fbd60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{land.lhs.true:                                    \l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2620, metadata !DIExpression()), !dbg !2808\l  %opaque.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 8, !dbg !2810\l  %0 = bitcast i8** %opaque.i to %struct.BDRVQcow2State**, !dbg !2810\l  %1 = load %struct.BDRVQcow2State*, %struct.BDRVQcow2State** %0, align 8,\l... !dbg !2810\l  call void @llvm.dbg.value(metadata %struct.BDRVQcow2State* %1, metadata\l... !2623, metadata !DIExpression()), !dbg !2808\l  %data_file.i = getelementptr inbounds %struct.BDRVQcow2State,\l... %struct.BDRVQcow2State* %1, i64 0, i32 62, !dbg !2811\l  %2 = load %struct.BdrvChild*, %struct.BdrvChild** %data_file.i, align 8,\l... !dbg !2811\l  %file.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 19, !dbg !2812\l  %3 = load %struct.BdrvChild*, %struct.BdrvChild** %file.i, align 8, !dbg\l... !2812\l  %cmp.i = icmp eq %struct.BdrvChild* %2, %3, !dbg !2813\l  br i1 %cmp.i, label %if.end, label %cleanup, !dbg !2814, !prof !2619\l|{<s0>T|<s1>F}}"];
	Node0x55f1d05fbd60:s0 -> Node0x55f1d05fbd10;
	Node0x55f1d05fbd60:s1 -> Node0x55f1d05fc550;
	Node0x55f1d05fbd10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %call1 = tail call i32\l... @qcow2_check_metadata_overlap(%struct.BlockDriverState* %bs, i32 %ign, i64\l... %offset, i64 %size), !dbg !2815\l  call void @llvm.dbg.value(metadata i32 %call1, metadata !2610, metadata\l... !DIExpression()), !dbg !2616\l  %cmp = icmp slt i32 %call1, 0, !dbg !2816\l  br i1 %cmp, label %cleanup, label %if.else, !dbg !2817, !prof !2818\l|{<s0>T|<s1>F}}"];
	Node0x55f1d05fbd10:s0 -> Node0x55f1d05fc550;
	Node0x55f1d05fbd10:s1 -> Node0x55f1d05fcd40;
	Node0x55f1d05fcd40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else:                                          \l  %cmp3 = icmp eq i32 %call1, 0, !dbg !2819\l  br i1 %cmp3, label %cleanup, label %if.then4, !dbg !2820, !prof !2619\l|{<s0>T|<s1>F}}"];
	Node0x55f1d05fcd40:s0 -> Node0x55f1d05fc550;
	Node0x55f1d05fcd40:s1 -> Node0x55f1d05fb570;
	Node0x55f1d05fb570 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then4:                                         \l  call void @llvm.dbg.value(metadata i32 %call1, metadata !2821, metadata\l... !DIExpression()) #17, !dbg !2827\l  %4 = tail call i32 @llvm.cttz.i32(i32 %call1, i1 true) #17, !dbg !2829,\l... !range !2830\l  call void @llvm.dbg.value(metadata i32 %4, metadata !2611, metadata\l... !DIExpression()), !dbg !2831\l  %cmp6 = icmp ult i32 %4, 9, !dbg !2832\l  br i1 %cmp6, label %if.end9, label %if.else8, !dbg !2835\l|{<s0>T|<s1>F}}"];
	Node0x55f1d05fb570:s0 -> Node0x55f1d05fe780;
	Node0x55f1d05fb570:s1 -> Node0x55f1d05fe7d0;
	Node0x55f1d05fe7d0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else8:                                         \l  tail call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x\l... i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x\l... i8]* @.str.1, i64 0, i64 0), i32 2827, i8* getelementptr inbounds ([84 x i8],\l... [84 x i8]* @__PRETTY_FUNCTION__.qcow2_pre_write_overlap_check, i64 0, i64 0))\l... #18, !dbg !2832\l  unreachable, !dbg !2832\l}"];
	Node0x55f1d05fe780 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end9:                                          \l  %idxprom = zext i32 %4 to i64, !dbg !2836\l  %arrayidx = getelementptr [9 x i8*], [9 x i8*]* @metadata_ol_names, i64 0,\l... i64 %idxprom, !dbg !2836\l  %5 = load i8*, i8** %arrayidx, align 8, !dbg !2836\l  tail call void (%struct.BlockDriverState*, i1, i64, i64, i8*, ...)\l... @qcow2_signal_corruption(%struct.BlockDriverState* %bs, i1 zeroext true, i64\l... %offset, i64 %size, i8* getelementptr inbounds ([56 x i8], [56 x i8]*\l... @.str.33, i64 0, i64 0), i8* %5) #17, !dbg !2837\l  br label %cleanup\l}"];
	Node0x55f1d05fe780 -> Node0x55f1d05fc550;
	Node0x55f1d05fc550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  %retval.0 = phi i32 [ -5, %if.end9 ], [ 0, %land.lhs.true ], [ %call1,\l... %if.end ], [ 0, %if.else ], !dbg !2616\l  ret i32 %retval.0, !dbg !2838\l}"];
}
