digraph "CFG for 'bdrv_drain_assert_idle' function" {
	label="CFG for 'bdrv_drain_assert_idle' function";

	Node0x55cda457ead0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2551, metadata !DIExpression()), !dbg !2556\l  %in_flight = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 45, !dbg !2557\l  %0 = load atomic i32, i32* %in_flight monotonic, align 8, !dbg !2557\l  %cmp = icmp eq i32 %0, 0, !dbg !2561\l  br i1 %cmp, label %if.end, label %if.else, !dbg !2562, !prof !2563\l|{<s0>T|<s1>F}}"];
	Node0x55cda457ead0:s0 -> Node0x55cda4462be0;
	Node0x55cda457ead0:s1 -> Node0x55cda4462d60;
	Node0x55cda4462d60 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x\l... i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x\l... i8]* @.str.1, i64 0, i64 0), i32 556, i8* getelementptr inbounds ([48 x i8],\l... [48 x i8]* @__PRETTY_FUNCTION__.bdrv_drain_assert_idle, i64 0, i64 0)) #14,\l... !dbg !2561\l  unreachable, !dbg !2561\l}"];
	Node0x55cda4462be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %lh_first = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 31, i32 0, !dbg !2564\l  %1 = load %struct.BdrvChild*, %struct.BdrvChild** %lh_first, align 8, !dbg\l... !2564\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %1, metadata !2552,\l... metadata !DIExpression()), !dbg !2556\l  %tobool8 = icmp eq %struct.BdrvChild* %1, null, !dbg !2566\l  br i1 %tobool8, label %for.end, label %land.rhs.preheader, !dbg !2566, !prof\l... !2568\l|{<s0>T|<s1>F}}"];
	Node0x55cda4462be0:s0 -> Node0x55cda4464040;
	Node0x55cda4462be0:s1 -> Node0x55cda486c310;
	Node0x55cda486c310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{land.rhs.preheader:                               \l  br label %land.rhs.peel.begin, !dbg !2564\l}"];
	Node0x55cda486c310 -> Node0x55cda4874820;
	Node0x55cda4874820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{land.rhs.peel.begin:                              \l  br label %land.rhs.peel, !dbg !2564\l}"];
	Node0x55cda4874820 -> Node0x55cda45ed660;
	Node0x55cda45ed660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{land.rhs.peel:                                    \l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %1, metadata !2552,\l... metadata !DIExpression()), !dbg !2556\l  %le_next.peel = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %1, i64 0, i32 12, i32 0, !dbg !2566\l  %2 = load %struct.BdrvChild*, %struct.BdrvChild** %le_next.peel, align 8,\l... !dbg !2566\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %2, metadata !2553,\l... metadata !DIExpression()), !dbg !2556\l  %bs2.peel = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %1,\l... i64 0, i32 0, !dbg !2569\l  %3 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs2.peel,\l... align 8, !dbg !2569\l  tail call fastcc void @bdrv_drain_assert_idle(%struct.BlockDriverState* %3),\l... !dbg !2571\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %2, metadata !2552,\l... metadata !DIExpression()), !dbg !2556\l  %tobool.peel = icmp eq %struct.BdrvChild* %2, null, !dbg !2566\l  br i1 %tobool.peel, label %for.end.loopexit, label %land.rhs.peel.next, !dbg\l... !2566, !prof !2568\l|{<s0>T|<s1>F}}"];
	Node0x55cda45ed660:s0 -> Node0x55cda46a98d0;
	Node0x55cda45ed660:s1 -> Node0x55cda461e0f0;
	Node0x55cda461e0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{land.rhs.peel.next:                               \l  br label %land.rhs.peel.next10, !dbg !2564\l}"];
	Node0x55cda461e0f0 -> Node0x55cda45f1360;
	Node0x55cda45f1360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{land.rhs.peel.next10:                             \l  br label %land.rhs.preheader.peel.newph, !dbg !2564\l}"];
	Node0x55cda45f1360 -> Node0x55cda48748c0;
	Node0x55cda48748c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{land.rhs.preheader.peel.newph:                    \l  br label %land.rhs, !dbg !2564\l}"];
	Node0x55cda48748c0 -> Node0x55cda44649b0;
	Node0x55cda44649b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{land.rhs:                                         \l  %child.09 = phi %struct.BdrvChild* [ %4, %land.rhs ], [ %2,\l... %land.rhs.preheader.peel.newph ]\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %child.09, metadata\l... !2552, metadata !DIExpression()), !dbg !2556\l  %le_next = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %child.09, i64 0, i32 12, i32 0, !dbg !2566\l  %4 = load %struct.BdrvChild*, %struct.BdrvChild** %le_next, align 8, !dbg\l... !2566\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %4, metadata !2553,\l... metadata !DIExpression()), !dbg !2556\l  %bs2 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild*\l... %child.09, i64 0, i32 0, !dbg !2569\l  %5 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs2, align\l... 8, !dbg !2569\l  tail call fastcc void @bdrv_drain_assert_idle(%struct.BlockDriverState* %5),\l... !dbg !2571\l  call void @llvm.dbg.value(metadata %struct.BdrvChild* %4, metadata !2552,\l... metadata !DIExpression()), !dbg !2556\l  %tobool = icmp eq %struct.BdrvChild* %4, null, !dbg !2566\l  br i1 %tobool, label %for.end.loopexit.loopexit, label %land.rhs, !dbg\l... !2566, !prof !2572, !llvm.loop !2573\l|{<s0>T|<s1>F}}"];
	Node0x55cda44649b0:s0 -> Node0x55cda46248c0;
	Node0x55cda44649b0:s1 -> Node0x55cda44649b0;
	Node0x55cda46248c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{for.end.loopexit.loopexit:                        \l  br label %for.end.loopexit, !dbg !2577\l}"];
	Node0x55cda46248c0 -> Node0x55cda46a98d0;
	Node0x55cda46a98d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70",label="{for.end.loopexit:                                 \l  br label %for.end, !dbg !2577\l}"];
	Node0x55cda46a98d0 -> Node0x55cda4464040;
	Node0x55cda4464040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.end:                                          \l  ret void, !dbg !2577\l}"];
}
