digraph "CFG for 'serial_xmit' function" {
	label="CFG for 'serial_xmit' function";

	Node0x5588d3f8c090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.SerialState* %s, metadata !966,\l... metadata !DIExpression()), !dbg !973\l  %lsr = getelementptr inbounds %struct.SerialState, %struct.SerialState* %s,\l... i64 0, i32 9, !dbg !974\l  %tsr_retry = getelementptr inbounds %struct.SerialState,\l... %struct.SerialState* %s, i64 0, i32 19, !dbg !977\l  %fcr = getelementptr inbounds %struct.SerialState, %struct.SerialState* %s,\l... i64 0, i32 12, !dbg !979\l  %xmit_fifo = getelementptr inbounds %struct.SerialState,\l... %struct.SerialState* %s, i64 0, i32 24, !dbg !982\l  %tsr = getelementptr inbounds %struct.SerialState, %struct.SerialState* %s,\l... i64 0, i32 4, !dbg !986\l  %num = getelementptr inbounds %struct.SerialState, %struct.SerialState* %s,\l... i64 0, i32 24, i32 3, !dbg !987\l  %thr = getelementptr inbounds %struct.SerialState, %struct.SerialState* %s,\l... i64 0, i32 3, !dbg !989\l  %thr_ipending = getelementptr inbounds %struct.SerialState,\l... %struct.SerialState* %s, i64 0, i32 14, !dbg !991\l  %ier.i = getelementptr inbounds %struct.SerialState, %struct.SerialState*\l... %s, i64 0, i32 5, !dbg !993\l  %timeout_ipending.i = getelementptr inbounds %struct.SerialState,\l... %struct.SerialState* %s, i64 0, i32 27, !dbg !1001\l  %num.i = getelementptr inbounds %struct.SerialState, %struct.SerialState*\l... %s, i64 0, i32 23, i32 3, !dbg !1003\l  %recv_fifo_itl.i = getelementptr inbounds %struct.SerialState,\l... %struct.SerialState* %s, i64 0, i32 25, !dbg !1003\l  %msr.i = getelementptr inbounds %struct.SerialState, %struct.SerialState*\l... %s, i64 0, i32 10, !dbg !1005\l  %iir.i = getelementptr inbounds %struct.SerialState, %struct.SerialState*\l... %s, i64 0, i32 6, !dbg !1008\l  %irq.i = getelementptr inbounds %struct.SerialState, %struct.SerialState*\l... %s, i64 0, i32 15, !dbg !1009\l  %mcr = getelementptr inbounds %struct.SerialState, %struct.SerialState* %s,\l... i64 0, i32 8, !dbg !1011\l  %0 = bitcast %struct.SerialState* %s to i8*, !dbg !1012\l  %chr = getelementptr inbounds %struct.SerialState, %struct.SerialState* %s,\l... i64 0, i32 16, !dbg !1014\l  %watch_tag = getelementptr inbounds %struct.SerialState,\l... %struct.SerialState* %s, i64 0, i32 20, !dbg !1015\l  %.pre = load i8, i8* %lsr, align 1, !dbg !1020\l  br label %do.body, !dbg !1021\l}"];
	Node0x5588d3f8c090 -> Node0x5588d40617b0;
	Node0x5588d40617b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{do.body:                                          \l  %1 = phi i8 [ %37, %if.end78 ], [ %.pre, %entry ], !dbg !1020\l  %conv = zext i8 %1 to i32, !dbg !1020\l  %and = and i32 %conv, 64, !dbg !1020\l  %tobool = icmp eq i32 %and, 0, !dbg !1020\l  br i1 %tobool, label %if.end, label %if.else, !dbg !1022, !prof !1023\l|{<s0>T|<s1>F}}"];
	Node0x5588d40617b0:s0 -> Node0x5588d4061910;
	Node0x5588d40617b0:s1 -> Node0x5588d405fca0;
	Node0x5588d405fca0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x\l... i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x\l... i8]* @.str.13, i64 0, i64 0), i32 245, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.serial_xmit, i64 0, i64 0)) #15, !dbg !1020\l  unreachable, !dbg !1020\l}"];
	Node0x5588d4061910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %2 = load i32, i32* %tsr_retry, align 8, !dbg !1024\l  %cmp = icmp eq i32 %2, 0, !dbg !1025\l  br i1 %cmp, label %if.then2, label %if.end41, !dbg !1026, !prof !1023\l|{<s0>T|<s1>F}}"];
	Node0x5588d4061910:s0 -> Node0x5588d4043a70;
	Node0x5588d4061910:s1 -> Node0x5588d4043b30;
	Node0x5588d4043a70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then2:                                         \l  %and5 = and i32 %conv, 32, !dbg !1027\l  %tobool6 = icmp eq i32 %and5, 0, !dbg !1027\l  br i1 %tobool6, label %if.end9, label %if.else8, !dbg !1030, !prof !1023\l|{<s0>T|<s1>F}}"];
	Node0x5588d4043a70:s0 -> Node0x5588d4044370;
	Node0x5588d4043a70:s1 -> Node0x5588d40443c0;
	Node0x5588d40443c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else8:                                         \l  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x\l... i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x\l... i8]* @.str.13, i64 0, i64 0), i32 247, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.serial_xmit, i64 0, i64 0)) #15, !dbg !1027\l  unreachable, !dbg !1027\l}"];
	Node0x5588d4044370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end9:                                          \l  %3 = load i8, i8* %fcr, align 4, !dbg !1031\l  %4 = and i8 %3, 1, !dbg !1032\l  %tobool12 = icmp eq i8 %4, 0, !dbg !1032\l  br i1 %tobool12, label %if.else26, label %if.then13, !dbg !1033, !prof !1034\l|{<s0>T|<s1>F}}"];
	Node0x5588d4044370:s0 -> Node0x5588d4064960;
	Node0x5588d4044370:s1 -> Node0x5588d4064830;
	Node0x5588d4064830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{if.then13:                                        \l  %call = tail call zeroext i1 @fifo8_is_empty(%struct.Fifo8* nonnull\l... %xmit_fifo) #16, !dbg !1035\l  br i1 %call, label %if.else15, label %if.end16, !dbg !1036, !prof !1037\l|{<s0>T|<s1>F}}"];
	Node0x5588d4064830:s0 -> Node0x5588d40652f0;
	Node0x5588d4064830:s1 -> Node0x5588d4065280;
	Node0x5588d40652f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else15:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x\l... i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x\l... i8]* @.str.13, i64 0, i64 0), i32 250, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.serial_xmit, i64 0, i64 0)) #15, !dbg !1035\l  unreachable, !dbg !1035\l}"];
	Node0x5588d4065280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{if.end16:                                         \l  %call18 = tail call zeroext i8 @fifo8_pop(%struct.Fifo8* nonnull %xmit_fifo)\l... #16, !dbg !1038\l  store i8 %call18, i8* %tsr, align 4, !dbg !1039\l  %5 = load i32, i32* %num, align 8, !dbg !1040\l  %tobool20 = icmp eq i32 %5, 0, !dbg !1041\l  %6 = load i8, i8* %lsr, align 1, !dbg !1042\l  br i1 %tobool20, label %if.then21, label %if.end32, !dbg !1043, !prof !1044\l|{<s0>T|<s1>F}}"];
	Node0x5588d4065280:s0 -> Node0x5588d40662c0;
	Node0x5588d4065280:s1 -> Node0x5588d40648f0;
	Node0x5588d40662c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{if.then21:                                        \l  %7 = or i8 %6, 32, !dbg !1045\l  br label %if.end32.sink.split, !dbg !1047\l}"];
	Node0x5588d40662c0 -> Node0x5588d42e0480;
	Node0x5588d4064960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{if.else26:                                        \l  %8 = load i8, i8* %thr, align 1, !dbg !1048\l  store i8 %8, i8* %tsr, align 4, !dbg !1049\l  %9 = or i8 %1, 32, !dbg !1050\l  br label %if.end32.sink.split\l}"];
	Node0x5588d4064960 -> Node0x5588d42e0480;
	Node0x5588d42e0480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end32.sink.split:                              \l  %.sink = phi i8 [ %7, %if.then21 ], [ %9, %if.else26 ]\l  %.ph = phi i8 [ %7, %if.then21 ], [ %9, %if.else26 ]\l  store i8 %.sink, i8* %lsr, align 1, !dbg !979\l  br label %if.end32, !dbg !1051\l}"];
	Node0x5588d42e0480 -> Node0x5588d40648f0;
	Node0x5588d40648f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end32:                                         \l  %10 = phi i8 [ %6, %if.end16 ], [ %.ph, %if.end32.sink.split ], !dbg !1052\l  %11 = and i8 %10, 32, !dbg !1051\l  %tobool36 = icmp eq i8 %11, 0, !dbg !1051\l  br i1 %tobool36, label %if.end41, label %land.lhs.true, !dbg !1053, !prof\l... !1054\l|{<s0>T|<s1>F}}"];
	Node0x5588d40648f0:s0 -> Node0x5588d4043b30;
	Node0x5588d40648f0:s1 -> Node0x5588d40681e0;
	Node0x5588d40681e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{land.lhs.true:                                    \l  %12 = load i32, i32* %thr_ipending, align 8, !dbg !1055\l  %tobool37 = icmp eq i32 %12, 0, !dbg !1056\l  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !1057, !prof !1023\l|{<s0>T|<s1>F}}"];
	Node0x5588d40681e0:s0 -> Node0x5588d4068140;
	Node0x5588d40681e0:s1 -> Node0x5588d4043b30;
	Node0x5588d4068140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then38:                                        \l  store i32 1, i32* %thr_ipending, align 8, !dbg !1058\l  call void @llvm.dbg.value(metadata %struct.SerialState* %s, metadata !997,\l... metadata !DIExpression()) #16, !dbg !1008\l  call void @llvm.dbg.value(metadata i8 1, metadata !998, metadata\l... !DIExpression()) #16, !dbg !1008\l  %13 = load i8, i8* %ier.i, align 1, !dbg !1059\l  %14 = and i8 %13, 4, !dbg !1060\l  %tobool.i = icmp eq i8 %14, 0, !dbg !1060\l  %15 = and i8 %10, 30, !dbg !1061\l  %tobool3.i = icmp eq i8 %15, 0, !dbg !1061\l  %or.cond = or i1 %tobool3.i, %tobool.i, !dbg !1062\l  br i1 %or.cond, label %if.else.i, label %if.end49.i, !dbg !1062, !prof !1063\l|{<s0>T|<s1>F}}"];
	Node0x5588d4068140:s0 -> Node0x5588d40ffca0;
	Node0x5588d4068140:s1 -> Node0x5588d4084560;
	Node0x5588d40ffca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else.i:                                        \l  %16 = and i8 %13, 1, !dbg !1064\l  %tobool7.i = icmp eq i8 %16, 0, !dbg !1064\l  br i1 %tobool7.i, label %if.else28.i, label %land.lhs.true8.i, !dbg !1065,\l... !prof !1066\l|{<s0>T|<s1>F}}"];
	Node0x5588d40ffca0:s0 -> Node0x5588d42606b0;
	Node0x5588d40ffca0:s1 -> Node0x5588d426d9b0;
	Node0x5588d426d9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{land.lhs.true8.i:                                 \l  %17 = load i32, i32* %timeout_ipending.i, align 16, !dbg !1067\l  %tobool9.i = icmp eq i32 %17, 0, !dbg !1068\l  br i1 %tobool9.i, label %land.lhs.true16.i, label %if.end49.i, !dbg !1069,\l... !prof !1070\l|{<s0>T|<s1>F}}"];
	Node0x5588d426d9b0:s0 -> Node0x5588d428f8f0;
	Node0x5588d426d9b0:s1 -> Node0x5588d4084560;
	Node0x5588d428f8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{land.lhs.true16.i:                                \l  %18 = and i8 %10, 1, !dbg !1071\l  %tobool20.i = icmp eq i8 %18, 0, !dbg !1071\l  br i1 %tobool20.i, label %if.else28.i, label %land.lhs.true21.i, !dbg !1072,\l... !prof !1070\l|{<s0>T|<s1>F}}"];
	Node0x5588d428f8f0:s0 -> Node0x5588d42606b0;
	Node0x5588d428f8f0:s1 -> Node0x5588d4271d70;
	Node0x5588d4271d70 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true21.i:                                \l  %19 = load i8, i8* %fcr, align 4, !dbg !1073\l  %20 = and i8 %19, 1, !dbg !1074\l  %tobool24.i = icmp eq i8 %20, 0, !dbg !1074\l  br i1 %tobool24.i, label %if.end49.i, label %lor.lhs.false.i, !dbg !1075\l|{<s0>T|<s1>F}}"];
	Node0x5588d4271d70:s0 -> Node0x5588d4084560;
	Node0x5588d4271d70:s1 -> Node0x5588d428c440;
	Node0x5588d428c440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{lor.lhs.false.i:                                  \l  %21 = load i32, i32* %num.i, align 16, !dbg !1076\l  %22 = load i8, i8* %recv_fifo_itl.i, align 16, !dbg !1077\l  %conv25.i = zext i8 %22 to i32, !dbg !1078\l  %cmp.i = icmp ult i32 %21, %conv25.i, !dbg !1079\l  br i1 %cmp.i, label %if.else28.i, label %if.end49.i, !dbg !1080\l|{<s0>T|<s1>F}}"];
	Node0x5588d428c440:s0 -> Node0x5588d42606b0;
	Node0x5588d428c440:s1 -> Node0x5588d4084560;
	Node0x5588d42606b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else28.i:                                      \l  %23 = and i8 %13, 2, !dbg !1081\l  %tobool32.i = icmp eq i8 %23, 0, !dbg !1081\l  br i1 %tobool32.i, label %if.else36.i, label %if.end49.i, !dbg !1082, !prof\l... !1083\l|{<s0>T|<s1>F}}"];
	Node0x5588d42606b0:s0 -> Node0x5588d42c4970;
	Node0x5588d42606b0:s1 -> Node0x5588d4084560;
	Node0x5588d42c4970 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.else36.i:                                      \l  %24 = and i8 %13, 8, !dbg !1084\l  %tobool40.i = icmp eq i8 %24, 0, !dbg !1084\l  br i1 %tobool40.i, label %if.end49.i, label %land.lhs.true41.i, !dbg !1085,\l... !prof !1086\l|{<s0>T|<s1>F}}"];
	Node0x5588d42c4970:s0 -> Node0x5588d4084560;
	Node0x5588d42c4970:s1 -> Node0x5588d429d3e0;
	Node0x5588d429d3e0 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true41.i:                                \l  %25 = load i8, i8* %msr.i, align 2, !dbg !1087\l  %26 = and i8 %25, 15, !dbg !1088\l  %tobool44.i = icmp eq i8 %26, 0, !dbg !1088\l  %spec.select.i = zext i1 %tobool44.i to i32, !dbg !1089\l  br label %if.end49.i, !dbg !1089\l}"];
	Node0x5588d429d3e0 -> Node0x5588d4084560;
	Node0x5588d4084560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end49.i:                                       \l  %tmp_iir.0.i = phi i32 [ 12, %land.lhs.true8.i ], [ 4, %land.lhs.true21.i ],\l... [ %spec.select.i, %land.lhs.true41.i ], [ 4, %lor.lhs.false.i ], [ 1,\l... %if.else36.i ], [ 2, %if.else28.i ], [ 6, %if.then38 ]\l  call void @llvm.dbg.value(metadata i8 undef, metadata !998, metadata\l... !DIExpression()) #16, !dbg !1008\l  %27 = load i8, i8* %iir.i, align 2, !dbg !1090\l  %28 = and i8 %27, -16, !dbg !1091\l  %29 = trunc i32 %tmp_iir.0.i to i8, !dbg !1092\l  %conv53.i = or i8 %28, %29, !dbg !1092\l  store i8 %conv53.i, i8* %iir.i, align 2, !dbg !1093\l  %cmp56.i = icmp eq i32 %tmp_iir.0.i, 1, !dbg !1094\l  %30 = load %struct.IRQState*, %struct.IRQState** %irq.i, align 16, !dbg !1009\l  br i1 %cmp56.i, label %if.else59.i, label %if.then58.i, !dbg !1095, !prof\l... !1096\l|{<s0>T|<s1>F}}"];
	Node0x5588d4084560:s0 -> Node0x5588d4085910;
	Node0x5588d4084560:s1 -> Node0x5588d4292c50;
	Node0x5588d4292c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{if.then58.i:                                      \l  call void @llvm.dbg.value(metadata %struct.IRQState* %30, metadata !1097,\l... metadata !DIExpression()) #16, !dbg !1103\l  tail call void @qemu_set_irq(%struct.IRQState* %30, i32 1) #16, !dbg !1106\l  br label %if.end41, !dbg !1107\l}"];
	Node0x5588d4292c50 -> Node0x5588d4043b30;
	Node0x5588d4085910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.else59.i:                                      \l  call void @llvm.dbg.value(metadata %struct.IRQState* %30, metadata !1108,\l... metadata !DIExpression()) #16, !dbg !1111\l  tail call void @qemu_set_irq(%struct.IRQState* %30, i32 0) #16, !dbg !1114\l  br label %if.end41\l}"];
	Node0x5588d4085910 -> Node0x5588d4043b30;
	Node0x5588d4043b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end41:                                         \l  %31 = load i8, i8* %mcr, align 16, !dbg !1115\l  %32 = and i8 %31, 16, !dbg !1116\l  %tobool44 = icmp eq i8 %32, 0, !dbg !1116\l  br i1 %tobool44, label %if.else47, label %if.then45, !dbg !1117, !prof !1118\l|{<s0>T|<s1>F}}"];
	Node0x5588d4043b30:s0 -> Node0x5588d40699b0;
	Node0x5588d4043b30:s1 -> Node0x5588d3f8c9f0;
	Node0x5588d3f8c9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{if.then45:                                        \l  tail call void @serial_receive1(i8* nonnull %0, i8* nonnull %tsr, i32 1),\l... !dbg !1119\l  br label %if.end78, !dbg !1120\l}"];
	Node0x5588d3f8c9f0 -> Node0x5588d4069960;
	Node0x5588d40699b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else47:                                        \l  %call49 = tail call i32 @qemu_chr_fe_write(%struct.CharBackend* nonnull\l... %chr, i8* nonnull %tsr, i32 1) #16, !dbg !1121\l  call void @llvm.dbg.value(metadata i32 %call49, metadata !967, metadata\l... !DIExpression()), !dbg !1014\l  switch i32 %call49, label %if.end78 [\l    i32 0, label %land.lhs.true58\l    i32 -1, label %land.lhs.true54\l  ], !dbg !1122, !prof !1123\l|{<s0>def|<s1>0|<s2>-1}}"];
	Node0x5588d40699b0:s0 -> Node0x5588d4069960;
	Node0x5588d40699b0:s1 -> Node0x5588d406b3d0;
	Node0x5588d40699b0:s2 -> Node0x5588d406b6b0;
	Node0x5588d406b6b0 [shape=record,penwidth=3.0, color="red",label="{land.lhs.true54:                                  \l  %call55 = tail call i32* @__errno_location() #17, !dbg !1124\l  %33 = load i32, i32* %call55, align 4, !dbg !1124\l  %cmp56 = icmp eq i32 %33, 11, !dbg !1125\l  br i1 %cmp56, label %land.lhs.true58, label %if.end78, !dbg !1126\l|{<s0>T|<s1>F}}"];
	Node0x5588d406b6b0:s0 -> Node0x5588d406b3d0;
	Node0x5588d406b6b0:s1 -> Node0x5588d4069960;
	Node0x5588d406b3d0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true58:                                  \l  %34 = load i32, i32* %tsr_retry, align 8, !dbg !1127\l  %cmp60 = icmp ult i32 %34, 4, !dbg !1128\l  br i1 %cmp60, label %if.then62, label %if.end78, !dbg !1129\l|{<s0>T|<s1>F}}"];
	Node0x5588d406b3d0:s0 -> Node0x5588d406b310;
	Node0x5588d406b3d0:s1 -> Node0x5588d4069960;
	Node0x5588d406b310 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then62:                                        \l  %35 = load i32, i32* %watch_tag, align 4, !dbg !1130\l  %cmp63 = icmp eq i32 %35, 0, !dbg !1130\l  br i1 %cmp63, label %if.end67, label %if.else66, !dbg !1131\l|{<s0>T|<s1>F}}"];
	Node0x5588d406b310:s0 -> Node0x5588d406cc20;
	Node0x5588d406b310:s1 -> Node0x5588d406cc70;
	Node0x5588d406cc70 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else66:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x\l... i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x\l... i8]* @.str.13, i64 0, i64 0), i32 274, i8* getelementptr inbounds ([32 x i8],\l... [32 x i8]* @__PRETTY_FUNCTION__.serial_xmit, i64 0, i64 0)) #15, !dbg !1130\l  unreachable, !dbg !1130\l}"];
	Node0x5588d406cc20 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end67:                                         \l  %call69 = tail call i32 @qemu_chr_fe_add_watch(%struct.CharBackend* nonnull\l... %chr, i32 20, i32 (%struct._GIOChannel*, i32, i8*)* nonnull @serial_watch_cb,\l... i8* nonnull %0) #16, !dbg !1132\l  store i32 %call69, i32* %watch_tag, align 4, !dbg !1133\l  %cmp72 = icmp eq i32 %call69, 0, !dbg !1134\l  br i1 %cmp72, label %if.end78, label %if.then74, !dbg !1136\l|{<s0>T|<s1>F}}"];
	Node0x5588d406cc20:s0 -> Node0x5588d4069960;
	Node0x5588d406cc20:s1 -> Node0x5588d406d190;
	Node0x5588d406d190 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then74:                                        \l  %36 = load i32, i32* %tsr_retry, align 8, !dbg !1137\l  %inc = add i32 %36, 1, !dbg !1137\l  store i32 %inc, i32* %tsr_retry, align 8, !dbg !1137\l  br label %return\l}"];
	Node0x5588d406d190 -> Node0x5588d3f8b300;
	Node0x5588d4069960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end78:                                         \l  store i32 0, i32* %tsr_retry, align 8, !dbg !1139\l  %37 = load i8, i8* %lsr, align 1, !dbg !1140\l  %38 = and i8 %37, 32, !dbg !1141\l  %tobool83 = icmp eq i8 %38, 0, !dbg !1142\l  br i1 %tobool83, label %do.body, label %do.end, !dbg !1143, !prof !1054,\l... !llvm.loop !1144\l|{<s0>T|<s1>F}}"];
	Node0x5588d4069960:s0 -> Node0x5588d40617b0;
	Node0x5588d4069960:s1 -> Node0x5588d4060cb0;
	Node0x5588d4060cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{do.end:                                           \l  %call84 = tail call i64 @qemu_clock_get_ns(i32 1) #16, !dbg !1146\l  %last_xmit_ts = getelementptr inbounds %struct.SerialState,\l... %struct.SerialState* %s, i64 0, i32 22, !dbg !1147\l  store i64 %call84, i64* %last_xmit_ts, align 8, !dbg !1148\l  %39 = load i8, i8* %lsr, align 1, !dbg !1149\l  %40 = or i8 %39, 64, !dbg !1149\l  store i8 %40, i8* %lsr, align 1, !dbg !1149\l  br label %return, !dbg !1150\l}"];
	Node0x5588d4060cb0 -> Node0x5588d3f8b300;
	Node0x5588d3f8b300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{return:                                           \l  ret void, !dbg !1150\l}"];
}
