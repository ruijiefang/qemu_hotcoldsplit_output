digraph "CFG for 'qemu_chr_fe_set_open' function" {
	label="CFG for 'qemu_chr_fe_set_open' function";

	Node0x558fa4c8efd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.CharBackend* %be, metadata !692,\l... metadata !DIExpression()), !dbg !696\l  call void @llvm.dbg.value(metadata i32 %fe_open, metadata !693, metadata\l... !DIExpression()), !dbg !696\l  %chr1 = getelementptr inbounds %struct.CharBackend, %struct.CharBackend*\l... %be, i64 0, i32 0, !dbg !697\l  %0 = load %struct.Chardev*, %struct.Chardev** %chr1, align 8, !dbg !697\l  call void @llvm.dbg.value(metadata %struct.Chardev* %0, metadata !694,\l... metadata !DIExpression()), !dbg !696\l  %tobool = icmp eq %struct.Chardev* %0, null, !dbg !698\l  br i1 %tobool, label %cleanup, label %if.end, !dbg !700, !prof !701\l|{<s0>T|<s1>F}}"];
	Node0x558fa4c8efd0:s0 -> Node0x558fa4c92870;
	Node0x558fa4c8efd0:s1 -> Node0x558fa4c923e0;
	Node0x558fa4c923e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %fe_open2 = getelementptr inbounds %struct.CharBackend, %struct.CharBackend*\l... %be, i64 0, i32 7, !dbg !702\l  %1 = load i32, i32* %fe_open2, align 4, !dbg !702\l  %cmp = icmp eq i32 %1, %fe_open, !dbg !704\l  br i1 %cmp, label %cleanup, label %if.end4, !dbg !705, !prof !706\l|{<s0>T|<s1>F}}"];
	Node0x558fa4c923e0:s0 -> Node0x558fa4c92870;
	Node0x558fa4c923e0:s1 -> Node0x558fa4c92b20;
	Node0x558fa4c92b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end4:                                          \l  store i32 %fe_open, i32* %fe_open2, align 4, !dbg !707\l  %2 = getelementptr %struct.Chardev, %struct.Chardev* %0, i64 0, i32 0, !dbg\l... !708\l  %call = tail call %struct.ObjectClass* @object_get_class(%struct.Object* %2)\l... #8, !dbg !708\l  %call6 = tail call %struct.ObjectClass*\l... @object_class_dynamic_cast_assert(%struct.ObjectClass* %call, i8*\l... getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8*\l... getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i32\l... 351, i8* getelementptr inbounds ([21 x i8], [21 x i8]*\l... @__func__.qemu_chr_fe_set_open, i64 0, i64 0)) #8, !dbg !708\l  %chr_set_fe_open = getelementptr inbounds %struct.ObjectClass,\l... %struct.ObjectClass* %call6, i64 2, i32 2, i64 1, !dbg !710\l  %3 = bitcast i8** %chr_set_fe_open to void (%struct.Chardev*, i32)**, !dbg\l... !710\l  %4 = load void (%struct.Chardev*, i32)*, void (%struct.Chardev*, i32)** %3,\l... align 8, !dbg !710\l  %tobool7 = icmp eq void (%struct.Chardev*, i32)* %4, null, !dbg !708\l  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !711, !prof !712\l|{<s0>T|<s1>F}}"];
	Node0x558fa4c92b20:s0 -> Node0x558fa4c92870;
	Node0x558fa4c92b20:s1 -> Node0x558fa4c56aa0;
	Node0x558fa4c56aa0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then8:                                         \l  %call9 = tail call %struct.ObjectClass* @object_get_class(%struct.Object*\l... %2) #8, !dbg !713\l  %call10 = tail call %struct.ObjectClass*\l... @object_class_dynamic_cast_assert(%struct.ObjectClass* %call9, i8*\l... getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8*\l... getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i32\l... 352, i8* getelementptr inbounds ([21 x i8], [21 x i8]*\l... @__func__.qemu_chr_fe_set_open, i64 0, i64 0)) #8, !dbg !713\l  %chr_set_fe_open11 = getelementptr inbounds %struct.ObjectClass,\l... %struct.ObjectClass* %call10, i64 2, i32 2, i64 1, !dbg !715\l  %5 = bitcast i8** %chr_set_fe_open11 to void (%struct.Chardev*, i32)**, !dbg\l... !715\l  %6 = load void (%struct.Chardev*, i32)*, void (%struct.Chardev*, i32)** %5,\l... align 8, !dbg !715\l  tail call void %6(%struct.Chardev* nonnull %0, i32 %fe_open) #8, !dbg !713\l  br label %cleanup, !dbg !716\l}"];
	Node0x558fa4c56aa0 -> Node0x558fa4c92870;
	Node0x558fa4c92870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  ret void, !dbg !717\l}"];
}
