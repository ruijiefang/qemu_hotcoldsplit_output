digraph "CFG for 'bdrv_refresh_limits' function" {
	label="CFG for 'bdrv_refresh_limits' function";

	Node0x55cda4291dc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %local_err = alloca %struct.Error*, align 8\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2551, metadata !DIExpression()), !dbg !2556\l  call void @llvm.dbg.value(metadata %struct.Error** %errp, metadata !2552,\l... metadata !DIExpression()), !dbg !2556\l  %drv1 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 7, !dbg !2557\l  %0 = load %struct.BlockDriver*, %struct.BlockDriver** %drv1, align 8, !dbg\l... !2557\l  call void @llvm.dbg.value(metadata %struct.BlockDriver* %0, metadata !2553,\l... metadata !DIExpression()), !dbg !2556\l  %1 = bitcast %struct.Error** %local_err to i8*, !dbg !2558\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #14, !dbg !2558\l  call void @llvm.dbg.value(metadata %struct.Error* null, metadata !2554,\l... metadata !DIExpression()), !dbg !2556\l  store %struct.Error* null, %struct.Error** %local_err, align 8, !dbg !2559\l  %bl = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, !dbg !2560\l  %2 = bitcast %struct.BlockLimits* %bl to i8*, !dbg !2561\l  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(56)\l... %2, i8 0, i64 56, i1 false), !dbg !2561\l  %tobool = icmp eq %struct.BlockDriver* %0, null, !dbg !2562\l  br i1 %tobool, label %cleanup, label %if.end, !dbg !2564, !prof !2565\l|{<s0>T|<s1>F}}"];
	Node0x55cda4291dc0:s0 -> Node0x55cda429e560;
	Node0x55cda4291dc0:s1 -> Node0x55cda429e030;
	Node0x55cda429e030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %bdrv_co_preadv = getelementptr inbounds %struct.BlockDriver,\l... %struct.BlockDriver* %0, i64 0, i32 29, !dbg !2566\l  %3 = load i32 (%struct.BlockDriverState*, i64, i64, %struct.QEMUIOVector*,\l... i32)*, i32 (%struct.BlockDriverState*, i64, i64, %struct.QEMUIOVector*,\l... i32)** %bdrv_co_preadv, align 8, !dbg !2566\l  %tobool2 = icmp eq i32 (%struct.BlockDriverState*, i64, i64,\l... %struct.QEMUIOVector*, i32)* %3, null, !dbg !2567\l  br i1 %tobool2, label %lor.lhs.false, label %lor.end, !dbg !2568, !prof !2569\l|{<s0>T|<s1>F}}"];
	Node0x55cda429e030:s0 -> Node0x55cda429e940;
	Node0x55cda429e030:s1 -> Node0x55cda429e860;
	Node0x55cda429e940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{lor.lhs.false:                                    \l  %bdrv_aio_preadv = getelementptr inbounds %struct.BlockDriver,\l... %struct.BlockDriver* %0, i64 0, i32 24, !dbg !2570\l  %4 = load %struct.BlockAIOCB* (%struct.BlockDriverState*, i64, i64,\l... %struct.QEMUIOVector*, i32, void (i8*, i32)*, i8*)*, %struct.BlockAIOCB*\l... (%struct.BlockDriverState*, i64, i64, %struct.QEMUIOVector*, i32, void (i8*,\l... i32)*, i8*)** %bdrv_aio_preadv, align 8, !dbg !2570\l  %tobool3 = icmp eq %struct.BlockAIOCB* (%struct.BlockDriverState*, i64, i64,\l... %struct.QEMUIOVector*, i32, void (i8*, i32)*, i8*)* %4, null, !dbg !2571\l  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !2572, !prof !2573\l|{<s0>T|<s1>F}}"];
	Node0x55cda429e940:s0 -> Node0x55cda429e8d0;
	Node0x55cda429e940:s1 -> Node0x55cda429e860;
	Node0x55cda429e8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{lor.rhs:                                          \l  %bdrv_co_preadv_part = getelementptr inbounds %struct.BlockDriver,\l... %struct.BlockDriver* %0, i64 0, i32 30, !dbg !2574\l  %5 = load i32 (%struct.BlockDriverState*, i64, i64, %struct.QEMUIOVector*,\l... i64, i32)*, i32 (%struct.BlockDriverState*, i64, i64, %struct.QEMUIOVector*,\l... i64, i32)** %bdrv_co_preadv_part, align 8, !dbg !2574\l  %tobool4 = icmp eq i32 (%struct.BlockDriverState*, i64, i64,\l... %struct.QEMUIOVector*, i64, i32)* %5, null, !dbg !2572\l  %phitmp = select i1 %tobool4, i32 512, i32 1, !dbg !2572, !prof !2575\l  br label %lor.end, !dbg !2572\l}"];
	Node0x55cda429e8d0 -> Node0x55cda429e860;
	Node0x55cda429e860 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{lor.end:                                          \l  %6 = phi i32 [ 1, %lor.lhs.false ], [ 1, %if.end ], [ %phitmp, %lor.rhs ]\l  %request_alignment = getelementptr inbounds %struct.BlockLimits,\l... %struct.BlockLimits* %bl, i64 0, i32 0, !dbg !2576\l  store i32 %6, i32* %request_alignment, align 8, !dbg !2577\l  %file = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 19, !dbg !2578\l  %7 = load %struct.BdrvChild*, %struct.BdrvChild** %file, align 8, !dbg !2578\l  %tobool6 = icmp eq %struct.BdrvChild* %7, null, !dbg !2580\l  br i1 %tobool6, label %if.else, label %if.then7, !dbg !2581, !prof !2582\l|{<s0>T|<s1>F}}"];
	Node0x55cda429e860:s0 -> Node0x55cda42a0780;
	Node0x55cda429e860:s1 -> Node0x55cda42a06a0;
	Node0x55cda42a06a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{if.then7:                                         \l  %bs9 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %7, i64\l... 0, i32 0, !dbg !2583\l  %8 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs9, align\l... 8, !dbg !2583\l  call void @llvm.dbg.value(metadata %struct.Error** %local_err, metadata\l... !2554, metadata !DIExpression(DW_OP_deref)), !dbg !2556\l  call void @bdrv_refresh_limits(%struct.BlockDriverState* %8, %struct.Error**\l... nonnull %local_err), !dbg !2585\l  %9 = load %struct.Error*, %struct.Error** %local_err, align 8, !dbg !2586\l  call void @llvm.dbg.value(metadata %struct.Error* %9, metadata !2554,\l... metadata !DIExpression()), !dbg !2556\l  %tobool10 = icmp eq %struct.Error* %9, null, !dbg !2586\l  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !2588, !prof !2573\l|{<s0>T|<s1>F}}"];
	Node0x55cda42a06a0:s0 -> Node0x55cda42a1240;
	Node0x55cda42a06a0:s1 -> Node0x55cda42a11d0;
	Node0x55cda42a11d0 [shape=record,penwidth=3.0, color="red",label="{if.then11:                                        \l  call void @error_propagate(%struct.Error** %errp, %struct.Error* nonnull %9)\l... #14, !dbg !2589\l  br label %cleanup, !dbg !2591\l}"];
	Node0x55cda42a11d0 -> Node0x55cda429e560;
	Node0x55cda42a1240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{if.end12:                                         \l  %10 = load %struct.BdrvChild*, %struct.BdrvChild** %file, align 8, !dbg !2592\l  %bs15 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %10,\l... i64 0, i32 0, !dbg !2593\l  %11 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs15,\l... align 8, !dbg !2593\l  call void @llvm.dbg.value(metadata %struct.BlockLimits* %bl, metadata !2594,\l... metadata !DIExpression()), !dbg !2603\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %11, metadata\l... !2602, metadata !DIExpression(DW_OP_plus_uconst, 16480, DW_OP_stack_value)),\l... !dbg !2603\l  %opt_transfer.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 5, !dbg !2605\l  %12 = load i32, i32* %opt_transfer.i, align 4, !dbg !2605\l  %opt_transfer1.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %11, i64 0, i32 20, i32 5, !dbg !2605\l  %13 = load i32, i32* %opt_transfer1.i, align 4, !dbg !2605\l  %cmp.i = icmp ugt i32 %12, %13, !dbg !2605\l  %..i = select i1 %cmp.i, i32 %12, i32 %13, !dbg !2605, !prof !2575\l  store i32 %..i, i32* %opt_transfer.i, align 4, !dbg !2606\l  %max_transfer.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 6, !dbg !2607\l  %14 = load i32, i32* %max_transfer.i, align 8, !dbg !2607\l  %cmp5.i = icmp eq i32 %14, 0, !dbg !2607\l  %max_transfer7.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %11, i64 0, i32 20, i32 6, !dbg !2607\l  %15 = load i32, i32* %max_transfer7.i, align 8, !dbg !2607\l  br i1 %cmp5.i, label %cond.end25.i, label %cond.false8.i, !dbg !2607, !prof\l... !2573\l|{<s0>T|<s1>F}}"];
	Node0x55cda42a1240:s0 -> Node0x55cda4282cd0;
	Node0x55cda42a1240:s1 -> Node0x55cda428f5b0;
	Node0x55cda428f5b0 [shape=record,penwidth=3.0, color="red",label="{cond.false8.i:                                    \l  %cmp10.i = icmp eq i32 %15, 0, !dbg !2607\l  br i1 %cmp10.i, label %cond.end25.i, label %cond.false13.i, !dbg !2607\l|{<s0>T|<s1>F}}"];
	Node0x55cda428f5b0:s0 -> Node0x55cda4282cd0;
	Node0x55cda428f5b0:s1 -> Node0x55cda4607f70;
	Node0x55cda4607f70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{cond.false13.i:                                   \l  %cmp16.i = icmp ult i32 %14, %15, !dbg !2607\l  %.105.i = select i1 %cmp16.i, i32 %14, i32 %15, !dbg !2607\l  br label %cond.end25.i, !dbg !2607\l}"];
	Node0x55cda4607f70 -> Node0x55cda4282cd0;
	Node0x55cda4282cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{cond.end25.i:                                     \l  %cond26.i = phi i32 [ %15, %if.end12 ], [ %14, %cond.false8.i ], [ %.105.i,\l... %cond.false13.i ], !dbg !2607\l  store i32 %cond26.i, i32* %max_transfer.i, align 8, !dbg !2608\l  %opt_mem_alignment.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 8, !dbg !2609\l  %16 = load i64, i64* %opt_mem_alignment.i, align 8, !dbg !2609\l  %opt_mem_alignment28.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %11, i64 0, i32 20, i32 8, !dbg !2609\l  %17 = load i64, i64* %opt_mem_alignment28.i, align 8, !dbg !2609\l  %cmp29.i = icmp ugt i64 %16, %17, !dbg !2609\l  %.106.i = select i1 %cmp29.i, i64 %16, i64 %17, !dbg !2609, !prof !2575\l  store i64 %.106.i, i64* %opt_mem_alignment.i, align 8, !dbg !2610\l  %min_mem_alignment.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 7, !dbg !2611\l  %18 = load i64, i64* %min_mem_alignment.i, align 8, !dbg !2611\l  %min_mem_alignment37.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %11, i64 0, i32 20, i32 7, !dbg !2611\l  %19 = load i64, i64* %min_mem_alignment37.i, align 8, !dbg !2611\l  %cmp38.i = icmp ugt i64 %18, %19, !dbg !2611\l  %cond44.i = select i1 %cmp38.i, i64 %18, i64 %19, !dbg !2611, !prof !2575\l  store i64 %cond44.i, i64* %min_mem_alignment.i, align 8, !dbg !2612\l  %max_iov.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 9, !dbg !2613\l  %20 = load i32, i32* %max_iov.i, align 8, !dbg !2613\l  %cmp46.i = icmp eq i32 %20, 0, !dbg !2613\l  %max_iov48.i = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %11, i64 0, i32 20, i32 9, !dbg !2613\l  %21 = load i32, i32* %max_iov48.i, align 8, !dbg !2613\l  br i1 %cmp46.i, label %bdrv_merge_limits.exit, label %cond.false49.i, !dbg\l... !2613, !prof !2573\l|{<s0>T|<s1>F}}"];
	Node0x55cda4282cd0:s0 -> Node0x55cda45fae80;
	Node0x55cda4282cd0:s1 -> Node0x55cda453fd40;
	Node0x55cda453fd40 [shape=record,penwidth=3.0, color="red",label="{cond.false49.i:                                   \l  %cmp51.i = icmp eq i32 %21, 0, !dbg !2613\l  br i1 %cmp51.i, label %bdrv_merge_limits.exit, label %cond.false54.i, !dbg\l... !2613\l|{<s0>T|<s1>F}}"];
	Node0x55cda453fd40:s0 -> Node0x55cda45fae80;
	Node0x55cda453fd40:s1 -> Node0x55cda4613600;
	Node0x55cda4613600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{cond.false54.i:                                   \l  %cmp57.i = icmp slt i32 %20, %21, !dbg !2613\l  %.107.i = select i1 %cmp57.i, i32 %20, i32 %21, !dbg !2613\l  br label %bdrv_merge_limits.exit, !dbg !2613\l}"];
	Node0x55cda4613600 -> Node0x55cda45fae80;
	Node0x55cda45fae80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70",label="{bdrv_merge_limits.exit:                           \l  %cond67.i = phi i32 [ %21, %cond.end25.i ], [ %20, %cond.false49.i ], [\l... %.107.i, %cond.false54.i ], !dbg !2613\l  store i32 %cond67.i, i32* %max_iov.i, align 8, !dbg !2614\l  br label %if.end20, !dbg !2615\l}"];
	Node0x55cda45fae80 -> Node0x55cda42a0710;
	Node0x55cda42a0780 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.else:                                          \l  %min_mem_alignment = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 7, !dbg !2616\l  store i64 512, i64* %min_mem_alignment, align 8, !dbg !2618\l  %22 = load i64, i64* @qemu_real_host_page_size, align 8, !dbg !2619\l  %opt_mem_alignment = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 8, !dbg !2620\l  store i64 %22, i64* %opt_mem_alignment, align 8, !dbg !2621\l  %max_iov = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 9, !dbg !2622\l  store i32 1024, i32* %max_iov, align 8, !dbg !2623\l  br label %if.end20\l}"];
	Node0x55cda42a0780 -> Node0x55cda42a0710;
	Node0x55cda42a0710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end20:                                         \l  %backing = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 18, !dbg !2624\l  %23 = load %struct.BdrvChild*, %struct.BdrvChild** %backing, align 8, !dbg\l... !2624\l  %tobool21 = icmp eq %struct.BdrvChild* %23, null, !dbg !2626\l  br i1 %tobool21, label %if.end32, label %if.then22, !dbg !2627, !prof !2628\l|{<s0>T|<s1>F}}"];
	Node0x55cda42a0710:s0 -> Node0x55cda42a1ba0;
	Node0x55cda42a0710:s1 -> Node0x55cda4287f50;
	Node0x55cda4287f50 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then22:                                        \l  %bs24 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %23,\l... i64 0, i32 0, !dbg !2629\l  %24 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs24,\l... align 8, !dbg !2629\l  call void @llvm.dbg.value(metadata %struct.Error** %local_err, metadata\l... !2554, metadata !DIExpression(DW_OP_deref)), !dbg !2556\l  call void @bdrv_refresh_limits(%struct.BlockDriverState* %24,\l... %struct.Error** nonnull %local_err), !dbg !2631\l  %25 = load %struct.Error*, %struct.Error** %local_err, align 8, !dbg !2632\l  call void @llvm.dbg.value(metadata %struct.Error* %25, metadata !2554,\l... metadata !DIExpression()), !dbg !2556\l  %tobool25 = icmp eq %struct.Error* %25, null, !dbg !2632\l  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !2634\l|{<s0>T|<s1>F}}"];
	Node0x55cda4287f50:s0 -> Node0x55cda42a7810;
	Node0x55cda4287f50:s1 -> Node0x55cda42a77c0;
	Node0x55cda42a77c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then26:                                        \l  call void @error_propagate(%struct.Error** %errp, %struct.Error* nonnull\l... %25) #14, !dbg !2635\l  br label %cleanup, !dbg !2637\l}"];
	Node0x55cda42a77c0 -> Node0x55cda429e560;
	Node0x55cda42a7810 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end27:                                         \l  %26 = load %struct.BdrvChild*, %struct.BdrvChild** %backing, align 8, !dbg\l... !2638\l  %bs30 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %26,\l... i64 0, i32 0, !dbg !2639\l  %27 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs30,\l... align 8, !dbg !2639\l  call void @llvm.dbg.value(metadata %struct.BlockLimits* %bl, metadata !2594,\l... metadata !DIExpression()), !dbg !2640\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %27, metadata\l... !2602, metadata !DIExpression(DW_OP_plus_uconst, 16480, DW_OP_stack_value)),\l... !dbg !2640\l  %opt_transfer.i64 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 5, !dbg !2642\l  %28 = load i32, i32* %opt_transfer.i64, align 4, !dbg !2642\l  %opt_transfer1.i65 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %27, i64 0, i32 20, i32 5, !dbg !2642\l  %29 = load i32, i32* %opt_transfer1.i65, align 4, !dbg !2642\l  %cmp.i66 = icmp ugt i32 %28, %29, !dbg !2642\l  %..i67 = select i1 %cmp.i66, i32 %28, i32 %29, !dbg !2642, !prof !2575\l  store i32 %..i67, i32* %opt_transfer.i64, align 4, !dbg !2643\l  %max_transfer.i68 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 6, !dbg !2644\l  %30 = load i32, i32* %max_transfer.i68, align 8, !dbg !2644\l  %cmp5.i69 = icmp eq i32 %30, 0, !dbg !2644\l  %max_transfer7.i70 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %27, i64 0, i32 20, i32 6, !dbg !2644\l  %31 = load i32, i32* %max_transfer7.i70, align 8, !dbg !2644\l  br i1 %cmp5.i69, label %cond.end25.i88, label %cond.false8.i72, !dbg !2644,\l... !prof !2573\l|{<s0>T|<s1>F}}"];
	Node0x55cda42a7810:s0 -> Node0x55cda4447930;
	Node0x55cda42a7810:s1 -> Node0x55cda44531b0;
	Node0x55cda44531b0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{cond.false8.i72:                                  \l  %cmp10.i71 = icmp eq i32 %31, 0, !dbg !2644\l  br i1 %cmp10.i71, label %cond.end25.i88, label %cond.false13.i75, !dbg !2644\l|{<s0>T|<s1>F}}"];
	Node0x55cda44531b0:s0 -> Node0x55cda4447930;
	Node0x55cda44531b0:s1 -> Node0x55cda44f46f0;
	Node0x55cda44f46f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{cond.false13.i75:                                 \l  %cmp16.i73 = icmp ult i32 %30, %31, !dbg !2644\l  %.105.i74 = select i1 %cmp16.i73, i32 %30, i32 %31, !dbg !2644\l  br label %cond.end25.i88, !dbg !2644\l}"];
	Node0x55cda44f46f0 -> Node0x55cda4447930;
	Node0x55cda4447930 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{cond.end25.i88:                                   \l  %cond26.i76 = phi i32 [ %31, %if.end27 ], [ %30, %cond.false8.i72 ], [\l... %.105.i74, %cond.false13.i75 ], !dbg !2644\l  store i32 %cond26.i76, i32* %max_transfer.i68, align 8, !dbg !2645\l  %opt_mem_alignment.i77 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 8, !dbg !2646\l  %32 = load i64, i64* %opt_mem_alignment.i77, align 8, !dbg !2646\l  %opt_mem_alignment28.i78 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %27, i64 0, i32 20, i32 8, !dbg !2646\l  %33 = load i64, i64* %opt_mem_alignment28.i78, align 8, !dbg !2646\l  %cmp29.i79 = icmp ugt i64 %32, %33, !dbg !2646\l  %.106.i80 = select i1 %cmp29.i79, i64 %32, i64 %33, !dbg !2646, !prof !2575\l  store i64 %.106.i80, i64* %opt_mem_alignment.i77, align 8, !dbg !2647\l  %min_mem_alignment.i81 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 7, !dbg !2648\l  %34 = load i64, i64* %min_mem_alignment.i81, align 8, !dbg !2648\l  %min_mem_alignment37.i82 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %27, i64 0, i32 20, i32 7, !dbg !2648\l  %35 = load i64, i64* %min_mem_alignment37.i82, align 8, !dbg !2648\l  %cmp38.i83 = icmp ugt i64 %34, %35, !dbg !2648\l  %cond44.i84 = select i1 %cmp38.i83, i64 %34, i64 %35, !dbg !2648, !prof !2575\l  store i64 %cond44.i84, i64* %min_mem_alignment.i81, align 8, !dbg !2649\l  %max_iov.i85 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 20, i32 9, !dbg !2650\l  %36 = load i32, i32* %max_iov.i85, align 8, !dbg !2650\l  %cmp46.i86 = icmp eq i32 %36, 0, !dbg !2650\l  %max_iov48.i87 = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %27, i64 0, i32 20, i32 9, !dbg !2650\l  %37 = load i32, i32* %max_iov48.i87, align 8, !dbg !2650\l  br i1 %cmp46.i86, label %bdrv_merge_limits.exit95, label %cond.false49.i90,\l... !dbg !2650, !prof !2573\l|{<s0>T|<s1>F}}"];
	Node0x55cda4447930:s0 -> Node0x55cda443ab90;
	Node0x55cda4447930:s1 -> Node0x55cda4525e10;
	Node0x55cda4525e10 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{cond.false49.i90:                                 \l  %cmp51.i89 = icmp eq i32 %37, 0, !dbg !2650\l  br i1 %cmp51.i89, label %bdrv_merge_limits.exit95, label %cond.false54.i93,\l... !dbg !2650\l|{<s0>T|<s1>F}}"];
	Node0x55cda4525e10:s0 -> Node0x55cda443ab90;
	Node0x55cda4525e10:s1 -> Node0x55cda443abe0;
	Node0x55cda443abe0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{cond.false54.i93:                                 \l  %cmp57.i91 = icmp slt i32 %36, %37, !dbg !2650\l  %.107.i92 = select i1 %cmp57.i91, i32 %36, i32 %37, !dbg !2650\l  br label %bdrv_merge_limits.exit95, !dbg !2650\l}"];
	Node0x55cda443abe0 -> Node0x55cda443ab90;
	Node0x55cda443ab90 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{bdrv_merge_limits.exit95:                         \l  %cond67.i94 = phi i32 [ %37, %cond.end25.i88 ], [ %36, %cond.false49.i90 ],\l... [ %.107.i92, %cond.false54.i93 ], !dbg !2650\l  store i32 %cond67.i94, i32* %max_iov.i85, align 8, !dbg !2651\l  br label %if.end32, !dbg !2652\l}"];
	Node0x55cda443ab90 -> Node0x55cda42a1ba0;
	Node0x55cda42a1ba0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end32:                                         \l  %bdrv_refresh_limits = getelementptr inbounds %struct.BlockDriver,\l... %struct.BlockDriver* %0, i64 0, i32 78, !dbg !2653\l  %38 = load void (%struct.BlockDriverState*, %struct.Error**)*, void\l... (%struct.BlockDriverState*, %struct.Error**)** %bdrv_refresh_limits, align 8,\l... !dbg !2653\l  %tobool33 = icmp eq void (%struct.BlockDriverState*, %struct.Error**)* %38,\l... null, !dbg !2655\l  br i1 %tobool33, label %cleanup, label %if.then34, !dbg !2656, !prof !2565\l|{<s0>T|<s1>F}}"];
	Node0x55cda42a1ba0:s0 -> Node0x55cda429e560;
	Node0x55cda42a1ba0:s1 -> Node0x55cda42a8870;
	Node0x55cda42a8870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then34:                                        \l  call void %38(%struct.BlockDriverState* nonnull %bs, %struct.Error** %errp)\l... #14, !dbg !2657, !prof !2659\l  br label %cleanup, !dbg !2660\l}"];
	Node0x55cda42a8870 -> Node0x55cda429e560;
	Node0x55cda429e560 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #14, !dbg !2661\l  ret void, !dbg !2661\l}"];
}
