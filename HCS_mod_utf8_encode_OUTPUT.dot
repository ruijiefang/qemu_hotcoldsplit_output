digraph "CFG for 'mod_utf8_encode' function" {
	label="CFG for 'mod_utf8_encode' function";

	Node0x55e5c3631460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata i8* %buf, metadata !82, metadata\l... !DIExpression()), !dbg !86\l  call void @llvm.dbg.value(metadata i64 %bufsz, metadata !83, metadata\l... !DIExpression()), !dbg !86\l  call void @llvm.dbg.value(metadata i32 %codepoint, metadata !84, metadata\l... !DIExpression()), !dbg !86\l  %cmp = icmp ugt i64 %bufsz, 4, !dbg !87\l  br i1 %cmp, label %if.end, label %if.else, !dbg !90, !prof !91\l|{<s0>T|<s1>F}}"];
	Node0x55e5c3631460:s0 -> Node0x55e5c364bad0;
	Node0x55e5c3631460:s1 -> Node0x55e5c364bb20;
	Node0x55e5c364bb20 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x\l... i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x\l... i8]* @.str.1, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([45 x i8],\l... [45 x i8]* @__PRETTY_FUNCTION__.mod_utf8_encode, i64 0, i64 0)) #5, !dbg !87\l  unreachable, !dbg !87\l}"];
	Node0x55e5c364bad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  call void @llvm.dbg.value(metadata i32 %codepoint, metadata !92, metadata\l... !DIExpression()), !dbg !98\l  %cmp.i = icmp ugt i32 %codepoint, 1114111, !dbg !101\l  br i1 %cmp.i, label %return, label %if.end.i, !dbg !103, !prof !104\l|{<s0>T|<s1>F}}"];
	Node0x55e5c364bad0:s0 -> Node0x55e5c3648690;
	Node0x55e5c364bad0:s1 -> Node0x55e5c2fa3c80;
	Node0x55e5c2fa3c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end.i:                                         \l  %codepoint.off.i = add nsw i32 %codepoint, -64976, !dbg !105\l  %0 = icmp ugt i32 %codepoint.off.i, 31, !dbg !105\l  %and.i = and i32 %codepoint, 65534, !dbg !107\l  %cmp3.i = icmp ne i32 %and.i, 65534, !dbg !108\l  %or.cond.i.not = and i1 %0, %cmp3.i, !dbg !105\l  %1 = and i32 %codepoint, -2048, !dbg !109\l  %2 = icmp ne i32 %1, 55296, !dbg !109\l  %or.cond = and i1 %2, %or.cond.i.not, !dbg !105\l  br i1 %or.cond, label %if.end2, label %return, !dbg !105, !prof !91\l|{<s0>T|<s1>F}}"];
	Node0x55e5c2fa3c80:s0 -> Node0x55e5c364c7c0;
	Node0x55e5c2fa3c80:s1 -> Node0x55e5c3648690;
	Node0x55e5c364c7c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end2:                                          \l  %codepoint.off = add nsw i32 %codepoint, -1, !dbg !111\l  %3 = icmp ult i32 %codepoint.off, 127, !dbg !111\l  br i1 %3, label %if.then5, label %if.end7, !dbg !111, !prof !91\l|{<s0>T|<s1>F}}"];
	Node0x55e5c364c7c0:s0 -> Node0x55e5c364cfa0;
	Node0x55e5c364c7c0:s1 -> Node0x55e5c364cff0;
	Node0x55e5c364cfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then5:                                         \l  %4 = trunc i32 %codepoint to i8, !dbg !113\l  store i8 %4, i8* %buf, align 1, !dbg !115\l  %arrayidx6 = getelementptr i8, i8* %buf, i64 1, !dbg !116\l  store i8 0, i8* %arrayidx6, align 1, !dbg !117\l  br label %return, !dbg !118\l}"];
	Node0x55e5c364cfa0 -> Node0x55e5c3648690;
	Node0x55e5c364cff0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end7:                                          \l  %cmp8 = icmp slt i32 %codepoint, 2048, !dbg !119\l  br i1 %cmp8, label %if.then10, label %if.end19, !dbg !121\l|{<s0>T|<s1>F}}"];
	Node0x55e5c364cff0:s0 -> Node0x55e5c364e280;
	Node0x55e5c364cff0:s1 -> Node0x55e5c364e2f0;
	Node0x55e5c364e280 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then10:                                        \l  %5 = lshr i32 %codepoint, 6, !dbg !122\l  %6 = trunc i32 %5 to i8, !dbg !124\l  %conv12 = or i8 %6, -64, !dbg !124\l  store i8 %conv12, i8* %buf, align 1, !dbg !125\l  %7 = trunc i32 %codepoint to i8, !dbg !126\l  %8 = and i8 %7, 63, !dbg !126\l  %conv16 = or i8 %8, -128, !dbg !126\l  %arrayidx17 = getelementptr i8, i8* %buf, i64 1, !dbg !127\l  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !128\l  %arrayidx18 = getelementptr i8, i8* %buf, i64 2, !dbg !129\l  store i8 0, i8* %arrayidx18, align 1, !dbg !130\l  br label %return, !dbg !131\l}"];
	Node0x55e5c364e280 -> Node0x55e5c3648690;
	Node0x55e5c364e2f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end19:                                         \l  %cmp20 = icmp slt i32 %codepoint, 65536, !dbg !132\l  br i1 %cmp20, label %if.then22, label %if.end38, !dbg !134\l|{<s0>T|<s1>F}}"];
	Node0x55e5c364e2f0:s0 -> Node0x55e5c364f920;
	Node0x55e5c364e2f0:s1 -> Node0x55e5c364f970;
	Node0x55e5c364f920 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then22:                                        \l  %9 = lshr i32 %codepoint, 12, !dbg !135\l  %10 = trunc i32 %9 to i8, !dbg !137\l  %conv26 = or i8 %10, -32, !dbg !137\l  store i8 %conv26, i8* %buf, align 1, !dbg !138\l  %11 = lshr i32 %codepoint, 6, !dbg !139\l  %12 = trunc i32 %11 to i8, !dbg !140\l  %13 = and i8 %12, 63, !dbg !140\l  %conv31 = or i8 %13, -128, !dbg !140\l  %arrayidx32 = getelementptr i8, i8* %buf, i64 1, !dbg !141\l  store i8 %conv31, i8* %arrayidx32, align 1, !dbg !142\l  %14 = trunc i32 %codepoint to i8, !dbg !143\l  %15 = and i8 %14, 63, !dbg !143\l  %conv35 = or i8 %15, -128, !dbg !143\l  %arrayidx36 = getelementptr i8, i8* %buf, i64 2, !dbg !144\l  store i8 %conv35, i8* %arrayidx36, align 1, !dbg !145\l  %arrayidx37 = getelementptr i8, i8* %buf, i64 3, !dbg !146\l  store i8 0, i8* %arrayidx37, align 1, !dbg !147\l  br label %return, !dbg !148\l}"];
	Node0x55e5c364f920 -> Node0x55e5c3648690;
	Node0x55e5c364f970 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.end38:                                         \l  %16 = lshr i32 %codepoint, 18, !dbg !149\l  %17 = trunc i32 %16 to i8, !dbg !150\l  %conv42 = or i8 %17, -16, !dbg !150\l  store i8 %conv42, i8* %buf, align 1, !dbg !151\l  %18 = lshr i32 %codepoint, 12, !dbg !152\l  %19 = trunc i32 %18 to i8, !dbg !153\l  %20 = and i8 %19, 63, !dbg !153\l  %conv47 = or i8 %20, -128, !dbg !153\l  %arrayidx48 = getelementptr i8, i8* %buf, i64 1, !dbg !154\l  store i8 %conv47, i8* %arrayidx48, align 1, !dbg !155\l  %21 = lshr i32 %codepoint, 6, !dbg !156\l  %22 = trunc i32 %21 to i8, !dbg !157\l  %23 = and i8 %22, 63, !dbg !157\l  %conv52 = or i8 %23, -128, !dbg !157\l  %arrayidx53 = getelementptr i8, i8* %buf, i64 2, !dbg !158\l  store i8 %conv52, i8* %arrayidx53, align 1, !dbg !159\l  %24 = trunc i32 %codepoint to i8, !dbg !160\l  %25 = and i8 %24, 63, !dbg !160\l  %conv56 = or i8 %25, -128, !dbg !160\l  %arrayidx57 = getelementptr i8, i8* %buf, i64 3, !dbg !161\l  store i8 %conv56, i8* %arrayidx57, align 1, !dbg !162\l  %arrayidx58 = getelementptr i8, i8* %buf, i64 4, !dbg !163\l  store i8 0, i8* %arrayidx58, align 1, !dbg !164\l  br label %return, !dbg !165\l}"];
	Node0x55e5c364f970 -> Node0x55e5c3648690;
	Node0x55e5c3648690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{return:                                           \l  %retval.0 = phi i64 [ 1, %if.then5 ], [ 2, %if.then10 ], [ 3, %if.then22 ],\l... [ 4, %if.end38 ], [ -1, %if.end ], [ -1, %if.end.i ], !dbg !86\l  ret i64 %retval.0, !dbg !166\l}"];
}
