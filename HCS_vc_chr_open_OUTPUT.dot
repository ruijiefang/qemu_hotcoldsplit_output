digraph "CFG for 'vc_chr_open' function" {
	label="CFG for 'vc_chr_open' function";

	Node0x564187eb4030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %_now.i.i = alloca %struct.timeval, align 8\l  call void @llvm.dbg.value(metadata %struct.Chardev* %chr, metadata !1540,\l... metadata !DIExpression()), !dbg !1551\l  call void @llvm.dbg.value(metadata %struct.ChardevBackend* %backend,\l... metadata !1541, metadata !DIExpression()), !dbg !1551\l  call void @llvm.dbg.value(metadata i8* %be_opened, metadata !1542, metadata\l... !DIExpression()), !dbg !1551\l  call void @llvm.dbg.value(metadata %struct.Error** %errp, metadata !1543,\l... metadata !DIExpression()), !dbg !1551\l  %u = getelementptr inbounds %struct.ChardevBackend, %struct.ChardevBackend*\l... %backend, i64 0, i32 1, !dbg !1552\l  %data = bitcast %union.anon.11* %u to %struct.ChardevVC**, !dbg !1553\l  %0 = load %struct.ChardevVC*, %struct.ChardevVC** %data, align 8, !dbg !1553\l  call void @llvm.dbg.value(metadata %struct.ChardevVC* %0, metadata !1544,\l... metadata !DIExpression()), !dbg !1551\l  %1 = getelementptr %struct.Chardev, %struct.Chardev* %chr, i64 0, i32 0,\l... !dbg !1554\l  %call = tail call %struct.Object*\l... @object_dynamic_cast_assert(%struct.Object* %1, i8* getelementptr inbounds\l... ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds\l... ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 2205, i8* getelementptr\l... inbounds ([12 x i8], [12 x i8]* @__func__.vc_chr_open, i64 0, i64 0)) #20,\l... !dbg !1554\l  call void @llvm.dbg.value(metadata %struct.Object* %call, metadata !1545,\l... metadata !DIExpression()), !dbg !1551\l  call void @llvm.dbg.value(metadata i32 0, metadata !1547, metadata\l... !DIExpression()), !dbg !1551\l  call void @llvm.dbg.value(metadata i32 0, metadata !1548, metadata\l... !DIExpression()), !dbg !1551\l  %has_width = getelementptr inbounds %struct.ChardevVC, %struct.ChardevVC*\l... %0, i64 0, i32 4, !dbg !1555\l  %2 = load i8, i8* %has_width, align 2, !dbg !1555, !range !1557\l  %tobool = icmp eq i8 %2, 0, !dbg !1555\l  br i1 %tobool, label %if.else, label %if.then, !dbg !1558, !prof !1559\l|{<s0>T|<s1>F}}"];
	Node0x564187eb4030:s0 -> Node0x5641880e4b10;
	Node0x564187eb4030:s1 -> Node0x5641880e2bc0;
	Node0x5641880e2bc0 [shape=record,penwidth=3.0, color="red",label="{if.then:                                          \l  %width2 = getelementptr inbounds %struct.ChardevVC, %struct.ChardevVC* %0,\l... i64 0, i32 5, !dbg !1560\l  %3 = load i64, i64* %width2, align 8, !dbg !1560\l  %conv = trunc i64 %3 to i32, !dbg !1562\l  call void @llvm.dbg.value(metadata i32 %conv, metadata !1547, metadata\l... !DIExpression()), !dbg !1551\l  br label %if.end6, !dbg !1563\l}"];
	Node0x5641880e2bc0 -> Node0x5641880e4aa0;
	Node0x5641880e4b10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else:                                          \l  %has_cols = getelementptr inbounds %struct.ChardevVC, %struct.ChardevVC* %0,\l... i64 0, i32 8, !dbg !1564\l  %4 = load i8, i8* %has_cols, align 8, !dbg !1564, !range !1557\l  %tobool3 = icmp eq i8 %4, 0, !dbg !1564\l  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !1566, !prof !1567\l|{<s0>T|<s1>F}}"];
	Node0x5641880e4b10:s0 -> Node0x5641880e4aa0;
	Node0x5641880e4b10:s1 -> Node0x5641880e5790;
	Node0x5641880e5790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then4:                                         \l  %cols = getelementptr inbounds %struct.ChardevVC, %struct.ChardevVC* %0, i64\l... 0, i32 9, !dbg !1568\l  %5 = load i64, i64* %cols, align 8, !dbg !1568\l  %.tr57 = trunc i64 %5 to i32, !dbg !1570\l  %conv5 = shl i32 %.tr57, 3, !dbg !1570\l  call void @llvm.dbg.value(metadata i32 %conv5, metadata !1547, metadata\l... !DIExpression()), !dbg !1551\l  br label %if.end6, !dbg !1571\l}"];
	Node0x5641880e5790 -> Node0x5641880e4aa0;
	Node0x5641880e4aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end6:                                          \l  %width.0 = phi i32 [ %conv, %if.then ], [ %conv5, %if.then4 ], [ 0, %if.else\l... ], !dbg !1551\l  call void @llvm.dbg.value(metadata i32 %width.0, metadata !1547, metadata\l... !DIExpression()), !dbg !1551\l  %has_height = getelementptr inbounds %struct.ChardevVC, %struct.ChardevVC*\l... %0, i64 0, i32 6, !dbg !1572\l  %6 = load i8, i8* %has_height, align 8, !dbg !1572, !range !1557\l  %tobool7 = icmp eq i8 %6, 0, !dbg !1572\l  br i1 %tobool7, label %if.else11, label %if.then8, !dbg !1574, !prof !1559\l|{<s0>T|<s1>F}}"];
	Node0x5641880e4aa0:s0 -> Node0x5641880e6430;
	Node0x5641880e4aa0:s1 -> Node0x5641880e6350;
	Node0x5641880e6350 [shape=record,penwidth=3.0, color="red",label="{if.then8:                                         \l  %height9 = getelementptr inbounds %struct.ChardevVC, %struct.ChardevVC* %0,\l... i64 0, i32 7, !dbg !1575\l  %7 = load i64, i64* %height9, align 8, !dbg !1575\l  %conv10 = trunc i64 %7 to i32, !dbg !1577\l  call void @llvm.dbg.value(metadata i32 %conv10, metadata !1548, metadata\l... !DIExpression()), !dbg !1551\l  br label %if.end17, !dbg !1578\l}"];
	Node0x5641880e6350 -> Node0x5641880e63c0;
	Node0x5641880e6430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else11:                                        \l  %has_rows = getelementptr inbounds %struct.ChardevVC, %struct.ChardevVC* %0,\l... i64 0, i32 10, !dbg !1579\l  %8 = load i8, i8* %has_rows, align 8, !dbg !1579, !range !1557\l  %tobool12 = icmp eq i8 %8, 0, !dbg !1579\l  br i1 %tobool12, label %if.end17, label %if.then13, !dbg !1581, !prof !1567\l|{<s0>T|<s1>F}}"];
	Node0x5641880e6430:s0 -> Node0x5641880e63c0;
	Node0x5641880e6430:s1 -> Node0x5641880e6dd0;
	Node0x5641880e6dd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then13:                                        \l  %rows = getelementptr inbounds %struct.ChardevVC, %struct.ChardevVC* %0, i64\l... 0, i32 11, !dbg !1582\l  %9 = load i64, i64* %rows, align 8, !dbg !1582\l  %.tr = trunc i64 %9 to i32, !dbg !1584\l  %conv15 = shl i32 %.tr, 4, !dbg !1584\l  call void @llvm.dbg.value(metadata i32 %conv15, metadata !1548, metadata\l... !DIExpression()), !dbg !1551\l  br label %if.end17, !dbg !1585\l}"];
	Node0x5641880e6dd0 -> Node0x5641880e63c0;
	Node0x5641880e63c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end17:                                         \l  %height.0 = phi i32 [ %conv10, %if.then8 ], [ %conv15, %if.then13 ], [ 0,\l... %if.else11 ], !dbg !1551\l  call void @llvm.dbg.value(metadata i32 %height.0, metadata !1548, metadata\l... !DIExpression()), !dbg !1551\l  call void @llvm.dbg.value(metadata i32 %width.0, metadata !1586, metadata\l... !DIExpression()) #20, !dbg !1593\l  call void @llvm.dbg.value(metadata i32 %height.0, metadata !1592, metadata\l... !DIExpression()) #20, !dbg !1593\l  call void @llvm.dbg.value(metadata i32 %width.0, metadata !1595, metadata\l... !DIExpression()) #20, !dbg !1609\l  call void @llvm.dbg.value(metadata i32 %height.0, metadata !1598, metadata\l... !DIExpression()) #20, !dbg !1609\l  %10 = load i32, i32* @trace_events_enabled_count, align 4, !dbg !1613\l  %tobool.i.i = icmp eq i32 %10, 0, !dbg !1613\l  %11 = load i16, i16* @_TRACE_CONSOLE_TXT_NEW_DSTATE, align 2, !dbg !1613\l  %tobool4.i.i = icmp eq i16 %11, 0, !dbg !1613\l  %or.cond.i.i = or i1 %tobool.i.i, %tobool4.i.i, !dbg !1613\l  br i1 %or.cond.i.i, label %trace_console_txt_new.exit, label\l... %land.lhs.true5.i.i, !dbg !1613, !prof !1559, !misexpect !1614\l|{<s0>T|<s1>F}}"];
	Node0x5641880e63c0:s0 -> Node0x564187f536f0;
	Node0x5641880e63c0:s1 -> Node0x5641880ec8d0;
	Node0x5641880ec8d0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{land.lhs.true5.i.i:                               \l  call void @llvm.dbg.value(metadata i32 32768, metadata !1615, metadata\l... !DIExpression()) #20, !dbg !1621\l  %12 = load i32, i32* @qemu_loglevel, align 4, !dbg !1623\l  %13 = trunc i32 %12 to i16, !dbg !1624\l  %cmp.i.i.i = icmp slt i16 %13, 0, !dbg !1624\l  br i1 %cmp.i.i.i, label %if.then.i.i, label %trace_console_txt_new.exit,\l... !dbg !1625\l|{<s0>T|<s1>F}}"];
	Node0x5641880ec8d0:s0 -> Node0x564187f534f0;
	Node0x5641880ec8d0:s1 -> Node0x564187f536f0;
	Node0x564187f534f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then.i.i:                                      \l  %14 = bitcast %struct.timeval* %_now.i.i to i8*, !dbg !1626\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #20, !dbg !1626\l  call void @llvm.dbg.declare(metadata %struct.timeval* %_now.i.i, metadata\l... !1599, metadata !DIExpression()) #20, !dbg !1627\l  %call7.i.i = call i32 @gettimeofday(%struct.timeval* nonnull %_now.i.i,\l... %struct.timezone* null) #20, !dbg !1628\l  %call8.i.i = tail call i32 @qemu_get_thread_id() #20, !dbg !1629\l  %tv_sec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval*\l... %_now.i.i, i64 0, i32 0, !dbg !1630\l  %15 = load i64, i64* %tv_sec.i.i, align 8, !dbg !1630\l  %tv_usec.i.i = getelementptr inbounds %struct.timeval, %struct.timeval*\l... %_now.i.i, i64 0, i32 1, !dbg !1631\l  %16 = load i64, i64* %tv_usec.i.i, align 8, !dbg !1631\l  %call9.i.i = tail call i32 (i8*, ...) @qemu_log(i8* getelementptr inbounds\l... ([36 x i8], [36 x i8]* @.str.60, i64 0, i64 0), i32 %call8.i.i, i64 %15, i64\l... %16, i32 %width.0, i32 %height.0) #20, !dbg !1632\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #20, !dbg !1633\l  br label %trace_console_txt_new.exit, !dbg !1634\l}"];
	Node0x564187f534f0 -> Node0x564187f536f0;
	Node0x564187f536f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{trace_console_txt_new.exit:                       \l  %cmp = icmp eq i32 %width.0, 0, !dbg !1635\l  %cmp19 = icmp eq i32 %height.0, 0, !dbg !1637\l  %or.cond = or i1 %cmp, %cmp19, !dbg !1638\l  br i1 %or.cond, label %if.then21, label %if.else23, !dbg !1638, !prof !1567\l|{<s0>T|<s1>F}}"];
	Node0x564187f536f0:s0 -> Node0x564187add890;
	Node0x564187f536f0:s1 -> Node0x5641880e8380;
	Node0x564187add890 [shape=record,penwidth=3.0, color="red",label="{if.then21:                                        \l  %call22 = tail call fastcc %struct.QemuConsole*\l... @new_console(%struct.DisplayState* null, i32 1, i32 0), !dbg !1639\l  call void @llvm.dbg.value(metadata %struct.QemuConsole* %call22, metadata\l... !1546, metadata !DIExpression()), !dbg !1551\l  br label %if.end26, !dbg !1641\l}"];
	Node0x564187add890 -> Node0x5641880e8330;
	Node0x5641880e8380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else23:                                        \l  %call24 = tail call fastcc %struct.QemuConsole*\l... @new_console(%struct.DisplayState* null, i32 2, i32 0), !dbg !1642\l  call void @llvm.dbg.value(metadata %struct.QemuConsole* %call24, metadata\l... !1546, metadata !DIExpression()), !dbg !1551\l  %call25 = tail call %struct.DisplaySurface* @qemu_create_displaysurface(i32\l... %width.0, i32 %height.0), !dbg !1644\l  %surface = getelementptr inbounds %struct.QemuConsole, %struct.QemuConsole*\l... %call24, i64 0, i32 4, !dbg !1645\l  store %struct.DisplaySurface* %call25, %struct.DisplaySurface** %surface,\l... align 8, !dbg !1646\l  br label %if.end26\l}"];
	Node0x5641880e8380 -> Node0x5641880e8330;
	Node0x5641880e8330 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end26:                                         \l  %s.0 = phi %struct.QemuConsole* [ %call22, %if.then21 ], [ %call24,\l... %if.else23 ], !dbg !1647\l  call void @llvm.dbg.value(metadata %struct.QemuConsole* %s.0, metadata\l... !1546, metadata !DIExpression()), !dbg !1551\l  %tobool27 = icmp eq %struct.QemuConsole* %s.0, null, !dbg !1648\l  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !1650, !prof !1567\l|{<s0>T|<s1>F}}"];
	Node0x5641880e8330:s0 -> Node0x5641880e94c0;
	Node0x5641880e8330:s1 -> Node0x5641880e9510;
	Node0x5641880e94c0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then28:                                        \l  tail call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([13 x\l... i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 2231, i8* getelementptr inbounds\l... ([12 x i8], [12 x i8]* @__func__.vc_chr_open, i64 0, i64 0), i8*\l... getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0)) #20,\l... !dbg !1651\l  br label %cleanup, !dbg !1653\l}"];
	Node0x5641880e94c0 -> Node0x5641880e9ad0;
	Node0x5641880e9510 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end29:                                         \l  %chr30 = getelementptr inbounds %struct.QemuConsole, %struct.QemuConsole*\l... %s.0, i64 0, i32 39, !dbg !1654\l  store %struct.Chardev* %chr, %struct.Chardev** %chr30, align 8, !dbg !1655\l  %console = getelementptr inbounds %struct.Object, %struct.Object* %call, i64\l... 3, i32 3, !dbg !1656\l  %17 = bitcast i32* %console to %struct.QemuConsole**, !dbg !1656\l  store %struct.QemuConsole* %s.0, %struct.QemuConsole** %17, align 8, !dbg\l... !1657\l  %18 = load %struct.DisplayState*, %struct.DisplayState** @display_state,\l... align 8, !dbg !1658\l  %tobool31 = icmp eq %struct.DisplayState* %18, null, !dbg !1658\l  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !1660, !prof !1559\l|{<s0>T|<s1>F}}"];
	Node0x5641880e9510:s0 -> Node0x5641880ea7b0;
	Node0x5641880e9510:s1 -> Node0x5641880ea740;
	Node0x5641880ea740 [shape=record,penwidth=3.0, color="red",label="{if.then32:                                        \l  tail call fastcc void @text_console_do_init(%struct.Chardev* %chr,\l... %struct.DisplayState* nonnull %18), !dbg !1661\l  br label %if.end33, !dbg !1663\l}"];
	Node0x5641880ea740 -> Node0x5641880ea7b0;
	Node0x5641880ea7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end33:                                         \l  store i8 0, i8* %be_opened, align 1, !dbg !1664\l  br label %cleanup, !dbg !1665\l}"];
	Node0x5641880ea7b0 -> Node0x5641880e9ad0;
	Node0x5641880e9ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{cleanup:                                          \l  ret void, !dbg !1665\l}"];
}
