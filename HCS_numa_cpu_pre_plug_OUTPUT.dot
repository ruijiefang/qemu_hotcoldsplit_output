digraph "CFG for 'numa_cpu_pre_plug' function" {
	label="CFG for 'numa_cpu_pre_plug' function";

	Node0x5609109f1590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.CPUArchId* %slot, metadata !793,\l... metadata !DIExpression()), !dbg !798\l  call void @llvm.dbg.value(metadata %struct.DeviceState* %dev, metadata !794,\l... metadata !DIExpression()), !dbg !798\l  call void @llvm.dbg.value(metadata %struct.Error** %errp, metadata !795,\l... metadata !DIExpression()), !dbg !798\l  %0 = getelementptr %struct.DeviceState, %struct.DeviceState* %dev, i64 0,\l... i32 0, !dbg !799\l  %call = tail call i64 @object_property_get_int(%struct.Object* %0, i8*\l... getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0),\l... %struct.Error** nonnull @error_abort) #14, !dbg !800\l  %conv = trunc i64 %call to i32, !dbg !800\l  call void @llvm.dbg.value(metadata i32 %conv, metadata !796, metadata\l... !DIExpression()), !dbg !798\l  %cmp = icmp eq i32 %conv, -1, !dbg !801\l  br i1 %cmp, label %if.then, label %if.else, !dbg !803, !prof !804\l|{<s0>T|<s1>F}}"];
	Node0x5609109f1590:s0 -> Node0x5609109f5d60;
	Node0x5609109f1590:s1 -> Node0x5609109f5e20;
	Node0x5609109f5d60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.then:                                          \l  %has_node_id = getelementptr inbounds %struct.CPUArchId, %struct.CPUArchId*\l... %slot, i64 0, i32 2, i32 0, !dbg !805\l  %1 = load i8, i8* %has_node_id, align 8, !dbg !805, !range !808\l  %tobool = icmp eq i8 %1, 0, !dbg !805\l  br i1 %tobool, label %if.end14, label %if.then2, !dbg !809, !prof !804\l|{<s0>T|<s1>F}}"];
	Node0x5609109f5d60:s0 -> Node0x5609109f5db0;
	Node0x5609109f5d60:s1 -> Node0x5609109f6310;
	Node0x5609109f6310 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then2:                                         \l  %node_id4 = getelementptr inbounds %struct.CPUArchId, %struct.CPUArchId*\l... %slot, i64 0, i32 2, i32 1, !dbg !810\l  %2 = load i64, i64* %node_id4, align 8, !dbg !810\l  tail call void @object_property_set_int(%struct.Object* %0, i64 %2, i8*\l... getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0),\l... %struct.Error** %errp) #14, !dbg !812\l  br label %if.end14, !dbg !813\l}"];
	Node0x5609109f6310 -> Node0x5609109f5db0;
	Node0x5609109f5e20 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  %sext = shl i64 %call, 32, !dbg !814\l  %conv5 = ashr exact i64 %sext, 32, !dbg !814\l  %node_id7 = getelementptr inbounds %struct.CPUArchId, %struct.CPUArchId*\l... %slot, i64 0, i32 2, i32 1, !dbg !816\l  %3 = load i64, i64* %node_id7, align 8, !dbg !816\l  %cmp8 = icmp eq i64 %conv5, %3, !dbg !817\l  br i1 %cmp8, label %if.end14, label %if.then10, !dbg !818\l|{<s0>T|<s1>F}}"];
	Node0x5609109f5e20:s0 -> Node0x5609109f5db0;
	Node0x5609109f5e20:s1 -> Node0x5609109f7bd0;
	Node0x5609109f7bd0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then10:                                        \l  tail call void (%struct.Error**, i8*, i32, i8*, i8*, ...)\l... @error_setg_internal(%struct.Error** %errp, i8* getelementptr inbounds ([15 x\l... i8], [15 x i8]* @.str.3, i64 0, i64 0), i32 810, i8* getelementptr inbounds\l... ([18 x i8], [18 x i8]* @__func__.numa_cpu_pre_plug, i64 0, i64 0), i8*\l... getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i64 0, i64 0), i64\l... %3) #14, !dbg !819\l  br label %if.end14, !dbg !821\l}"];
	Node0x5609109f7bd0 -> Node0x5609109f5db0;
	Node0x5609109f5db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end14:                                         \l  ret void, !dbg !822\l}"];
}
