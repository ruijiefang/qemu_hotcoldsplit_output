digraph "CFG for 'qcow2_refcount_init' function" {
	label="CFG for 'qcow2_refcount_init' function";

	Node0x55f1d0392360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.BlockDriverState* %bs, metadata\l... !2603, metadata !DIExpression()), !dbg !2794\l  %opaque = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 8, !dbg !2795\l  %0 = bitcast i8** %opaque to %struct.BDRVQcow2State**, !dbg !2795\l  %1 = load %struct.BDRVQcow2State*, %struct.BDRVQcow2State** %0, align 8,\l... !dbg !2795\l  call void @llvm.dbg.value(metadata %struct.BDRVQcow2State* %1, metadata\l... !2604, metadata !DIExpression()), !dbg !2794\l  %refcount_order = getelementptr inbounds %struct.BDRVQcow2State,\l... %struct.BDRVQcow2State* %1, i64 0, i32 41, !dbg !2796\l  %2 = load i32, i32* %refcount_order, align 4, !dbg !2796\l  %3 = icmp ult i32 %2, 7, !dbg !2796\l  br i1 %3, label %if.end, label %if.else, !dbg !2796, !prof !2799\l|{<s0>T|<s1>F}}"];
	Node0x55f1d0392360:s0 -> Node0x55f1d0440080;
	Node0x55f1d0392360:s1 -> Node0x55f1d04400f0;
	Node0x55f1d04400f0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x\l... i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]*\l... @.str.1, i64 0, i64 0), i32 103, i8* getelementptr inbounds ([44 x i8], [44 x\l... i8]* @__PRETTY_FUNCTION__.qcow2_refcount_init, i64 0, i64 0)) #15, !dbg !2796\l  unreachable, !dbg !2796\l}"];
	Node0x55f1d0440080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{if.end:                                           \l  %idxprom72 = zext i32 %2 to i64, !dbg !2800\l  %arrayidx = getelementptr [7 x i64 (i8*, i64)*], [7 x i64 (i8*, i64)*]*\l... @get_refcount_funcs, i64 0, i64 %idxprom72, !dbg !2800\l  %4 = bitcast i64 (i8*, i64)** %arrayidx to i64*, !dbg !2800\l  %5 = load i64, i64* %4, align 8, !dbg !2800\l  %get_refcount = getelementptr inbounds %struct.BDRVQcow2State,\l... %struct.BDRVQcow2State* %1, i64 0, i32 44, !dbg !2801\l  %6 = bitcast i64 (i8*, i64)** %get_refcount to i64*, !dbg !2802\l  store i64 %5, i64* %6, align 8, !dbg !2802\l  %arrayidx6 = getelementptr [7 x void (i8*, i64, i64)*], [7 x void (i8*, i64,\l... i64)*]* @set_refcount_funcs, i64 0, i64 %idxprom72, !dbg !2803\l  %7 = bitcast void (i8*, i64, i64)** %arrayidx6 to i64*, !dbg !2803\l  %8 = load i64, i64* %7, align 8, !dbg !2803\l  %set_refcount = getelementptr inbounds %struct.BDRVQcow2State,\l... %struct.BDRVQcow2State* %1, i64 0, i32 45, !dbg !2804\l  %9 = bitcast void (i8*, i64, i64)** %set_refcount to i64*, !dbg !2805\l  store i64 %8, i64* %9, align 8, !dbg !2805\l  %refcount_table_size = getelementptr inbounds %struct.BDRVQcow2State,\l... %struct.BDRVQcow2State* %1, i64 0, i32 21, !dbg !2806\l  %10 = load i32, i32* %refcount_table_size, align 8, !dbg !2806\l  %cmp7 = icmp ult i32 %10, 268435456, !dbg !2806\l  br i1 %cmp7, label %if.end11, label %if.else10, !dbg !2809, !prof !2799\l|{<s0>T|<s1>F}}"];
	Node0x55f1d0440080:s0 -> Node0x55f1d0335eb0;
	Node0x55f1d0440080:s1 -> Node0x55f1d0442540;
	Node0x55f1d0442540 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else10:                                        \l  tail call void @__assert_fail(i8* getelementptr inbounds ([53 x i8], [53 x\l... i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x\l... i8]* @.str.1, i64 0, i64 0), i32 108, i8* getelementptr inbounds ([44 x i8],\l... [44 x i8]* @__PRETTY_FUNCTION__.qcow2_refcount_init, i64 0, i64 0)) #15, !dbg\l... !2806\l  unreachable, !dbg !2806\l}"];
	Node0x55f1d0335eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{if.end11:                                         \l  %mul = shl nuw nsw i32 %10, 3, !dbg !2810\l  call void @llvm.dbg.value(metadata i32 %mul, metadata !2789, metadata\l... !DIExpression()), !dbg !2794\l  %conv15 = zext i32 %mul to i64, !dbg !2811\l  %call = tail call noalias i8* @g_try_malloc(i64 %conv15) #16, !dbg !2812\l  %refcount_table = getelementptr inbounds %struct.BDRVQcow2State,\l... %struct.BDRVQcow2State* %1, i64 0, i32 19, !dbg !2813\l  %11 = bitcast i64** %refcount_table to i8**, !dbg !2814\l  store i8* %call, i8** %11, align 8, !dbg !2814\l  %12 = load i32, i32* %refcount_table_size, align 8, !dbg !2815\l  %cmp17 = icmp eq i32 %12, 0, !dbg !2817\l  br i1 %cmp17, label %cleanup, label %if.then19, !dbg !2818, !prof !2819\l|{<s0>T|<s1>F}}"];
	Node0x55f1d0335eb0:s0 -> Node0x55f1d0335fe0;
	Node0x55f1d0335eb0:s1 -> Node0x55f1d0444e80;
	Node0x55f1d0444e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{if.then19:                                        \l  %cmp21 = icmp eq i8* %call, null, !dbg !2820\l  br i1 %cmp21, label %cleanup, label %do.body, !dbg !2823, !prof !2819\l|{<s0>T|<s1>F}}"];
	Node0x55f1d0444e80:s0 -> Node0x55f1d0335fe0;
	Node0x55f1d0444e80:s1 -> Node0x55f1d0447a70;
	Node0x55f1d0447a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{do.body:                                          \l  %file = getelementptr inbounds %struct.BlockDriverState,\l... %struct.BlockDriverState* %bs, i64 0, i32 19, !dbg !2824\l  %13 = load %struct.BdrvChild*, %struct.BdrvChild** %file, align 8, !dbg !2824\l  %tobool = icmp eq %struct.BdrvChild* %13, null, !dbg !2824\l  br i1 %tobool, label %do.end, label %if.then25, !dbg !2827, !prof !2819\l|{<s0>T|<s1>F}}"];
	Node0x55f1d0447a70:s0 -> Node0x55f1d04479d0;
	Node0x55f1d0447a70:s1 -> Node0x55f1d0447c00;
	Node0x55f1d0447c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{if.then25:                                        \l  %bs27 = getelementptr inbounds %struct.BdrvChild, %struct.BdrvChild* %13,\l... i64 0, i32 0, !dbg !2828\l  %14 = load %struct.BlockDriverState*, %struct.BlockDriverState** %bs27,\l... align 8, !dbg !2828\l  tail call void @bdrv_debug_event(%struct.BlockDriverState* %14, i32 18) #17,\l... !dbg !2828\l  %.pre = load %struct.BdrvChild*, %struct.BdrvChild** %file, align 8, !dbg\l... !2830\l  %.pre76 = load i8*, i8** %11, align 8, !dbg !2831\l  br label %do.end, !dbg !2828\l}"];
	Node0x55f1d0447c00 -> Node0x55f1d04479d0;
	Node0x55f1d04479d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{do.end:                                           \l  %15 = phi i8* [ %call, %do.body ], [ %.pre76, %if.then25 ], !dbg !2831\l  %16 = phi %struct.BdrvChild* [ null, %do.body ], [ %.pre, %if.then25 ], !dbg\l... !2830\l  %refcount_table_offset = getelementptr inbounds %struct.BDRVQcow2State,\l... %struct.BDRVQcow2State* %1, i64 0, i32 20, !dbg !2832\l  %17 = load i64, i64* %refcount_table_offset, align 8, !dbg !2832\l  %call31 = tail call i32 @bdrv_pread(%struct.BdrvChild* %16, i64 %17, i8*\l... %15, i32 %mul) #17, !dbg !2833\l  call void @llvm.dbg.value(metadata i32 %call31, metadata !2791, metadata\l... !DIExpression()), !dbg !2794\l  %cmp32 = icmp slt i32 %call31, 0, !dbg !2834\l  br i1 %cmp32, label %cleanup, label %for.cond.preheader, !dbg !2836, !prof\l... !2819\l|{<s0>T|<s1>F}}"];
	Node0x55f1d04479d0:s0 -> Node0x55f1d0335fe0;
	Node0x55f1d04479d0:s1 -> Node0x55f1d078da50;
	Node0x55f1d078da50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{for.cond.preheader:                               \l  call void @llvm.dbg.value(metadata i32 0, metadata !2790, metadata\l... !DIExpression()), !dbg !2794\l  %18 = load i32, i32* %refcount_table_size, align 8, !dbg !2837\l  %cmp3773 = icmp eq i32 %18, 0, !dbg !2840\l  br i1 %cmp3773, label %while.cond.i.preheader, label %for.body.preheader,\l... !dbg !2841, !prof !2842\l|{<s0>T|<s1>F}}"];
	Node0x55f1d078da50:s0 -> Node0x55f1d077dac0;
	Node0x55f1d078da50:s1 -> Node0x55f1d07b5860;
	Node0x55f1d07b5860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{for.body.preheader:                               \l  br label %for.body, !dbg !2841\l}"];
	Node0x55f1d07b5860 -> Node0x55f1d044ad00;
	Node0x55f1d044ad00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0,\l... %for.body.preheader ]\l  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2790, metadata\l... !DIExpression()), !dbg !2794\l  %19 = load i64*, i64** %refcount_table, align 8, !dbg !2843\l  %arrayidx41 = getelementptr i64, i64* %19, i64 %indvars.iv, !dbg !2844\l  call void @llvm.dbg.value(metadata i64* %arrayidx41, metadata !2845,\l... metadata !DIExpression()) #17, !dbg !2851\l  call void @llvm.dbg.value(metadata i64 undef, metadata !2853, metadata\l... !DIExpression()) #17, !dbg !2861\l  call void @llvm.dbg.value(metadata i64 undef, metadata !2860, metadata\l... !DIExpression()) #17, !dbg !2864\l  call void @llvm.dbg.value(metadata i64 undef, metadata !2858, metadata\l... !DIExpression()) #17, !dbg !2864\l  %20 = load i64, i64* %arrayidx41, align 8, !dbg !2865\l  call void @llvm.dbg.value(metadata i64 %20, metadata !2853, metadata\l... !DIExpression()) #17, !dbg !2861\l  call void @llvm.dbg.value(metadata i64 %20, metadata !2860, metadata\l... !DIExpression()) #17, !dbg !2864\l  %21 = tail call i64 asm \"bswap $\{0:q\}\",\l... \"=r,0,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 %20) #18, !dbg !2866, !srcloc !2868\l  call void @llvm.dbg.value(metadata i64 %21, metadata !2858, metadata\l... !DIExpression()) #17, !dbg !2864\l  store i64 %21, i64* %arrayidx41, align 8, !dbg !2865\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2869\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !2790,\l... metadata !DIExpression()), !dbg !2794\l  %22 = load i32, i32* %refcount_table_size, align 8, !dbg !2837\l  %23 = zext i32 %22 to i64, !dbg !2840\l  %cmp37 = icmp ult i64 %indvars.iv.next, %23, !dbg !2840\l  br i1 %cmp37, label %for.body, label %while.cond.i.preheader.loopexit, !dbg\l... !2841, !prof !2870, !llvm.loop !2871\l|{<s0>T|<s1>F}}"];
	Node0x55f1d044ad00:s0 -> Node0x55f1d044ad00;
	Node0x55f1d044ad00:s1 -> Node0x55f1d051aea0;
	Node0x55f1d051aea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{while.cond.i.preheader.loopexit:                  \l  %.lcssa = phi i32 [ %22, %for.body ], !dbg !2837\l  br label %while.cond.i.preheader, !dbg !2873\l}"];
	Node0x55f1d051aea0 -> Node0x55f1d077dac0;
	Node0x55f1d077dac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{while.cond.i.preheader:                           \l  %i.0.in.i.ph = phi i32 [ 0, %for.cond.preheader ], [ %.lcssa,\l... %while.cond.i.preheader.loopexit ]\l  br label %while.cond.i, !dbg !2873\l}"];
	Node0x55f1d077dac0 -> Node0x55f1d076d910;
	Node0x55f1d076d910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond.i:                                     \l  %i.0.in.i = phi i32 [ %i.0.i, %land.rhs.i ], [ %i.0.in.i.ph,\l... %while.cond.i.preheader ]\l  %i.0.i = add i32 %i.0.in.i, -1, !dbg !2881\l  call void @llvm.dbg.value(metadata i32 %i.0.i, metadata !2879, metadata\l... !DIExpression()), !dbg !2881\l  %cmp.i = icmp eq i32 %i.0.i, 0, !dbg !2882\l  br i1 %cmp.i, label %update_max_refcount_table_index.exit, label\l... %land.rhs.i, !dbg !2883, !prof !2884\l|{<s0>T|<s1>F}}"];
	Node0x55f1d076d910:s0 -> Node0x55f1d0640b50;
	Node0x55f1d076d910:s1 -> Node0x55f1d082c400;
	Node0x55f1d082c400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{land.rhs.i:                                       \l  %24 = load i64*, i64** %refcount_table, align 8, !dbg !2885\l  %idxprom.i = zext i32 %i.0.i to i64, !dbg !2886\l  %arrayidx.i = getelementptr i64, i64* %24, i64 %idxprom.i, !dbg !2886\l  %25 = load i64, i64* %arrayidx.i, align 8, !dbg !2886\l  %cmp1.i = icmp ult i64 %25, 512, !dbg !2887\l  br i1 %cmp1.i, label %while.cond.i, label\l... %update_max_refcount_table_index.exit, !dbg !2873, !prof !2888, !llvm.loop\l... !2889\l|{<s0>T|<s1>F}}"];
	Node0x55f1d082c400:s0 -> Node0x55f1d076d910;
	Node0x55f1d082c400:s1 -> Node0x55f1d0640b50;
	Node0x55f1d0640b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{update_max_refcount_table_index.exit:             \l  %i.0.i.lcssa = phi i32 [ %i.0.i, %land.rhs.i ], [ %i.0.i, %while.cond.i ],\l... !dbg !2881\l  %max_refcount_table_index.i = getelementptr inbounds %struct.BDRVQcow2State,\l... %struct.BDRVQcow2State* %1, i64 0, i32 22, !dbg !2891\l  store i32 %i.0.i.lcssa, i32* %max_refcount_table_index.i, align 4, !dbg !2892\l  br label %cleanup, !dbg !2893\l}"];
	Node0x55f1d0640b50 -> Node0x55f1d0335fe0;
	Node0x55f1d0335fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{cleanup:                                          \l  %retval.0 = phi i32 [ 0, %if.end11 ], [ 0,\l... %update_max_refcount_table_index.exit ], [ %call31, %do.end ], [ -12,\l... %if.then19 ], !dbg !2794\l  ret i32 %retval.0, !dbg !2894\l}"];
}
