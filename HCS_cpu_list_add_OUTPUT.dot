digraph "CFG for 'cpu_list_add' function" {
	label="CFG for 'cpu_list_add' function";

	Node0x562576129620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  call void @llvm.dbg.value(metadata %struct.CPUState* %cpu, metadata !547,\l... metadata !DIExpression()), !dbg !558\l  call void @llvm.dbg.value(metadata %struct.QemuLockable* undef, metadata\l... !559, metadata !DIExpression()) #8, !dbg !564\l  call void @llvm.dbg.value(metadata %struct.QemuLockable* undef, metadata\l... !566, metadata !DIExpression()) #8, !dbg !571\l  call void @llvm.dbg.value(metadata %struct.QemuMutex* @qemu_cpu_list_lock,\l... metadata !573, metadata !DIExpression()) #8, !dbg !585\l  %0 = load atomic i64, i64* bitcast (void (%struct.QemuMutex*, i8*, i32)**\l... @qemu_mutex_lock_func to i64*) monotonic, align 8, !dbg !587\l  %1 = inttoptr i64 %0 to void (%struct.QemuMutex*, i8*, i32)*, !dbg !587\l  call void @llvm.dbg.value(metadata void (%struct.QemuMutex*, i8*, i32)* %1,\l... metadata !579, metadata !DIExpression()) #8, !dbg !589\l  tail call void %1(%struct.QemuMutex* nonnull @qemu_cpu_list_lock, i8*\l... getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32\l... 109) #8, !dbg !590, !prof !591\l  call void @llvm.dbg.value(metadata %struct.QemuLockable* undef, metadata\l... !548, metadata !DIExpression()), !dbg !558\l  %cpu_index = getelementptr inbounds %struct.CPUState, %struct.CPUState*\l... %cpu, i64 0, i32 48, !dbg !592\l  %2 = load i32, i32* %cpu_index, align 8, !dbg !592\l  %cmp = icmp eq i32 %2, -1, !dbg !594\l  br i1 %cmp, label %if.then, label %if.else7, !dbg !595, !prof !596\l|{<s0>T|<s1>F}}"];
	Node0x562576129620:s0 -> Node0x56257695feb0;
	Node0x562576129620:s1 -> Node0x562576504de0;
	Node0x56257695feb0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.then:                                          \l  call void @llvm.dbg.value(metadata i32 0, metadata !597, metadata\l... !DIExpression()) #8, !dbg !609\l  store i1 true, i1* @cpu_index_auto_assigned, align 1, !dbg !612\l  %3 = load atomic i64, i64* bitcast (%union.CPUTailQ* @cpus to i64*)\l... monotonic, align 8, !dbg !613\l  call void @llvm.dbg.value(metadata i64 %3, metadata !603, metadata\l... !DIExpression()) #8, !dbg !614\l  tail call void asm sideeffect \"\", \"~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"()\l... #8, !dbg !615, !srcloc !617\l  call void @llvm.dbg.value(metadata i64 %3, metadata !602, metadata\l... !DIExpression()) #8, !dbg !609\l  call void @llvm.dbg.value(metadata i64 %3, metadata !602, metadata\l... !DIExpression()) #8, !dbg !609\l  call void @llvm.dbg.value(metadata i32 0, metadata !597, metadata\l... !DIExpression()) #8, !dbg !609\l  %tobool.i2528 = icmp eq i64 %3, 0, !dbg !618\l  br i1 %tobool.i2528, label %cpu_get_free_index.exit.thread, label\l... %for.body.i.preheader, !dbg !618\l|{<s0>T|<s1>F}}"];
	Node0x56257695feb0:s0 -> Node0x56257695fb90;
	Node0x56257695feb0:s1 -> Node0x562576aa76a0;
	Node0x562576aa76a0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.body.i.preheader:                             \l  br label %for.body.i, !dbg !618\l}"];
	Node0x562576aa76a0 -> Node0x562576a60b80;
	Node0x56257695fb90 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{cpu_get_free_index.exit.thread:                   \l  call void @llvm.dbg.value(metadata i32 %spec.select.i.lcssa, metadata !597,\l... metadata !DIExpression()) #8, !dbg !609\l  store i32 0, i32* %cpu_index, align 8, !dbg !619\l  br label %do.body, !dbg !620\l}"];
	Node0x56257695fb90 -> Node0x5625769eaa00;
	Node0x562576a60b80 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{for.body.i:                                       \l  %some_cpu.0.i30.in = phi i64 [ %6, %for.body.i ], [ %3,\l... %for.body.i.preheader ]\l  %max_cpu_index.0.i29 = phi i32 [ %spec.select.i, %for.body.i ], [ 0,\l... %for.body.i.preheader ]\l  %some_cpu.0.i30 = inttoptr i64 %some_cpu.0.i30.in to %struct.CPUState*, !dbg\l... !622\l  call void @llvm.dbg.value(metadata i32 %max_cpu_index.0.i29, metadata !597,\l... metadata !DIExpression()) #8, !dbg !609\l  %cpu_index.i = getelementptr inbounds %struct.CPUState, %struct.CPUState*\l... %some_cpu.0.i30, i64 0, i32 48, !dbg !623\l  %4 = load i32, i32* %cpu_index.i, align 8, !dbg !623\l  %cmp.i = icmp slt i32 %4, %max_cpu_index.0.i29, !dbg !626\l  %add.i = add i32 %4, 1, !dbg !627\l  %spec.select.i = select i1 %cmp.i, i32 %max_cpu_index.0.i29, i32 %add.i,\l... !dbg !629\l  call void @llvm.dbg.value(metadata i32 %spec.select.i, metadata !597,\l... metadata !DIExpression()) #8, !dbg !609\l  %node.i = getelementptr inbounds %struct.CPUState, %struct.CPUState*\l... %some_cpu.0.i30, i64 0, i32 35, !dbg !630\l  %5 = bitcast %union.anon.12* %node.i to i64*, !dbg !630\l  %6 = load atomic i64, i64* %5 monotonic, align 8, !dbg !630\l  call void @llvm.dbg.value(metadata i64 %6, metadata !606, metadata\l... !DIExpression()) #8, !dbg !631\l  tail call void asm sideeffect \"\", \"~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"()\l... #8, !dbg !632, !srcloc !634\l  call void @llvm.dbg.value(metadata i64 %6, metadata !602, metadata\l... !DIExpression()) #8, !dbg !609\l  call void @llvm.dbg.value(metadata i64 %6, metadata !602, metadata\l... !DIExpression()) #8, !dbg !609\l  %tobool.i25 = icmp eq i64 %6, 0, !dbg !618\l  br i1 %tobool.i25, label %cpu_get_free_index.exit, label %for.body.i, !dbg\l... !618, !llvm.loop !635\l|{<s0>T|<s1>F}}"];
	Node0x562576a60b80:s0 -> Node0x562576a158e0;
	Node0x562576a60b80:s1 -> Node0x562576a60b80;
	Node0x562576a158e0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{cpu_get_free_index.exit:                          \l  %spec.select.i.lcssa = phi i32 [ %spec.select.i, %for.body.i ], !dbg !629\l  call void @llvm.dbg.value(metadata i32 %spec.select.i.lcssa, metadata !597,\l... metadata !DIExpression()) #8, !dbg !609\l  store i32 %spec.select.i.lcssa, i32* %cpu_index, align 8, !dbg !619\l  %cmp5 = icmp eq i32 %spec.select.i.lcssa, -1, !dbg !637\l  br i1 %cmp5, label %if.else, label %do.body, !dbg !620\l|{<s0>T|<s1>F}}"];
	Node0x562576a158e0:s0 -> Node0x5625769e4ff0;
	Node0x562576a158e0:s1 -> Node0x5625769eaa00;
	Node0x5625769e4ff0 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else:                                          \l  tail call void @__assert_fail(i8* getelementptr inbounds ([39 x i8], [39 x\l... i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x\l... i8]* @.str, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([30 x i8], [30\l... x i8]* @__PRETTY_FUNCTION__.cpu_list_add, i64 0, i64 0)) #9, !dbg !637\l  unreachable, !dbg !637\l}"];
	Node0x562576504de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.else7:                                         \l  %.b24 = load i1, i1* @cpu_index_auto_assigned, align 1, !dbg !639\l  br i1 %.b24, label %if.else9, label %do.body, !dbg !643, !prof !596\l|{<s0>T|<s1>F}}"];
	Node0x562576504de0:s0 -> Node0x5625769e9000;
	Node0x562576504de0:s1 -> Node0x5625769eaa00;
	Node0x5625769e9000 [shape=record,penwidth=3.0, style="filled", color="red", fillcolor="yellow",label="{if.else9:                                         \l  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x\l... i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x\l... i8]* @.str, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([30 x i8], [30\l... x i8]* @__PRETTY_FUNCTION__.cpu_list_add, i64 0, i64 0)) #9, !dbg !639\l  unreachable, !dbg !639\l}"];
	Node0x5625769eaa00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{do.body:                                          \l  %node = getelementptr inbounds %struct.CPUState, %struct.CPUState* %cpu, i64\l... 0, i32 35, !dbg !644\l  %tqe_next = bitcast %union.anon.12* %node to %struct.CPUState**, !dbg !644\l  store %struct.CPUState* null, %struct.CPUState** %tqe_next, align 8, !dbg\l... !644\l  %7 = load i64, i64* bitcast (%struct.QTailQLink** getelementptr inbounds\l... (%union.CPUTailQ, %union.CPUTailQ* @cpus, i64 0, i32 0, i32 1) to i64*),\l... align 8, !dbg !644\l  %tqe_circ = getelementptr %union.anon.12, %union.anon.12* %node, i64 0, i32\l... 0, !dbg !644\l  %tql_prev = getelementptr inbounds %struct.CPUState, %struct.CPUState* %cpu,\l... i64 0, i32 35, i32 0, i32 1, !dbg !644\l  %8 = bitcast %struct.QTailQLink** %tql_prev to i64*, !dbg !644\l  store i64 %7, i64* %8, align 8, !dbg !644\l  %9 = ptrtoint %struct.CPUState* %cpu to i64, !dbg !646\l  %10 = inttoptr i64 %7 to i64*, !dbg !646\l  store atomic i64 %9, i64* %10 release, align 8, !dbg !646\l  store %struct.QTailQLink* %tqe_circ, %struct.QTailQLink** getelementptr\l... inbounds (%union.CPUTailQ, %union.CPUTailQ* @cpus, i64 0, i32 0, i32 1),\l... align 8, !dbg !644\l  call void @llvm.dbg.value(metadata %struct.QemuLockable** undef, metadata\l... !548, metadata !DIExpression(DW_OP_deref)), !dbg !558\l  call void @llvm.dbg.value(metadata %struct.QemuLockable** undef, metadata\l... !648, metadata !DIExpression()) #8, !dbg !654\l  call void @llvm.dbg.value(metadata %struct.QemuLockable* undef, metadata\l... !656, metadata !DIExpression()) #8, !dbg !659\l  call void @llvm.dbg.value(metadata %struct.QemuLockable* undef, metadata\l... !662, metadata !DIExpression()) #8, !dbg !665\l  call void @llvm.dbg.value(metadata %struct.QemuMutex* @qemu_cpu_list_lock,\l... metadata !669, metadata !DIExpression()) #8, !dbg !672\l  tail call void @qemu_mutex_unlock_impl(%struct.QemuMutex* nonnull\l... @qemu_cpu_list_lock, i8* getelementptr inbounds ([66 x i8], [66 x i8]*\l... @.str.3, i64 0, i64 0), i32 119) #8, !dbg !674\l  ret void, !dbg !675\l}"];
}
